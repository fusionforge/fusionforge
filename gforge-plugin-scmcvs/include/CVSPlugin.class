<?php

require_once('common/include/User.class');

class CVSPlugin extends SCM {
	function CVSPlugin () {
		$this->SCM () ;
		$this->name = "scmcvs";
		$this->text = "CVS";
		$this->hooks[] = "scm_page";
		$this->hooks[] = "scm_admin_update";
		$this->hooks[] = "scm_admin_page";
		$this->hooks[] = "scm_stats";

		$this->hooks[] = "scm_plugin";
//		$this->hooks[] = "group_approved";
		$this->hooks[] = "cssfile";

		require_once('plugins/scmcvs/config.php') ;

		//$this->default_cvs_server = $default_cvs_server ;
		//$this->this_server = $this_server ;
		$this->enabled_by_default = $enabled_by_default ;

		$this->register () ;
	}

	function CallHook ($hookname, $params) {
		global $Language, $HTML;
		
		switch ($hookname) {
		case "scm_page":
			$group_id = $params['group_id'] ;
			$this->display_scm_page ($group_id) ;
			break ;
		case "scm_admin_update":
			$this->scm_admin_update ($params) ;
			break ;
		case "scm_admin_page":
			$this->display_scm_admin_page ($params) ;
			break ;
		case "scm_stats":
			$this->display_stats ($params) ;
			break;
/*		case "group_approved":
			$this->group_approved ($params) ;
			break;
*/
		case "cssfile":
			$this->cssfile_scm ($params) ;
			break;
		case "scm_plugin":
			$scm_plugins=& $params['scm_plugins'];
			$scm_plugins[]=$this->name;
			break;
		default:
			// Forgot something
		}
	}

	function cssfile_scm ($layout) {
		echo '<link rel="stylesheet" type="text/css" href="/plugins/scmcvs/cvsweb/css/cvsweb.css" />';
	}

	function display_scm_page ($group_id) {
		global $Language, $HTML ;

		$project =& group_get_object($group_id);
		if (!$project || !is_object($project)) {
			return false;
		} elseif ($project->isError()) {
			return false;
		}
		
		if ($project->usesPlugin($this->name)) {
		
		print $Language->getText('plugin_scmcvs','documentation');

		$cvsrootend=$project->getSCMBox().':/cvsroot/'.$project->getUnixName();

		// ######################## table for summary info

?>
<table width="100%">
	<tr valign="top">
		<td width="65%">
<?php
// ######################## anonymous CVS instructions

	if ($project->enableAnonSCM()){
		echo $Language->getText('plugin_scmcvs', 'anoncvs');
		print "
			<p>
				<tt>cvs -d :pserver:anonymous@" . $cvsrootend." login</tt><br>
				<tt>cvs -d :pserver:anonymous@" . $cvsrootend." checkout <em>modulename</em></tt>
			</p>" ;
	 }

// ############################ developer access
			
	echo $Language->getText('plugin_scmcvs', 'devcvs');
		print "
			<p>
				<tt>export CVS_RSH=ssh</tt><br>
				<tt>cvs -d :ext:<em>username</em>@".$cvsrootend." checkout <em>modulename</em></tt>
			</p>" ;

?>

		</td>
		<td width="35%">

<?php

// ############################## CVS Browsing

$displayCvsBrowser = false;
if(session_loggedin()) {
	$perm =& $project->getPermission(session_get_user());
	if ($perm && is_object($perm) && !$perm->isError() && $perm->isMember()) {
		$displayCvsBrowser = true;
	}
} else {
	$displayCvsBrowser = $project->enableAnonSCM();
}
 
echo $HTML->boxTop($Language->getText('plugin_scmcvs', 'history'));
echo $this->display_stats(array('group_id'=>$group_id)).'<p>';
if ($displayCvsBrowser){
	echo $Language->getText('plugin_scmcvs', 'browsetree');
	echo '<p><a href="'.$this->account_group_cvsweb_url($group_id).'">'.$Language->getText('plugin_scmcvs', 'browseit').'</a></p>' ;
}
echo $HTML->boxBottom();

?>
		</td>
	</tr>
</table>

<?php

// ************************************************



		}

	}

	function scm_admin_update ($params) {
		$group =& group_get_object($params['group_id']);
		if ($group->usesPlugin($this->name)) {
 			if ($params['scmcvs_enable_anoncvs']) {
				$group->SetUsesAnonSCM(true);
			} else {
				$group->SetUsesAnonSCM(false);
 			}
 			if ($params['scmcvs_enable_pserver']) {
				$group->SetUsesPserver(true);
			} else {
				$group->SetUsesPserver(false);
 			}
		}
	}

	// This function is used to render checkboxes below
	function c($v) {
		if ($v) {
			return 'CHECKED';
		} else {
			return '';
		}
	}

	function display_scm_admin_page ($params) {
		global $Language;
		$group =& group_get_object($params['group_id']);
		if ($group->usesPlugin($this->name)) {
	?>
		<input type="CHECKBOX" name="scmcvs_enable_anoncvs" value="1" <?php echo $this->c($group->enableAnonSCM()); ?> >
		<strong><?php echo $Language->getText('project_admin_editgroupinfo','enable_anonymous_cvs') ?></strong>
		<br />
		<input type="CHECKBOX" name="scmcvs_enable_pserver" value="1" <?php echo $this->c($group->enablePserver()); ?> >
		<strong><?php echo $Language->getText('project_admin_editgroupinfo','enable_pserver') ?></strong>
		<br />
	<?php
		}
	}

	function display_stats ($params) {
		global $Language ;
		$group_id = $params['group_id'] ;
		$result = db_query("
			SELECT sum(commits) AS commits, sum(adds) AS adds
			FROM stats_cvs_group
			WHERE group_id='$group_id'");
		$commit_num = db_result($result,0,'commits');
		$add_num    = db_result($result,0,'adds');
		if (!$commit_num) {
			$commit_num=0;
		}
		if (!$add_num) {
			$add_num=0;
		}
		echo ' (CVS: '.$Language->getText('project_home','cvs_commits',array(number_format($commit_num,0),number_format($add_num,0))).")";
	}

	/**
	 *      account_group_cvsweb_url() - Returns URL for group's CVS interface WWW
	 *
	 *	@param  string  The group name
	 *      @return URL to access CVS over HTTP
	 */
	function account_group_cvsweb_url($group_id) {
		$project =& group_get_object($group_id);
		return 'http://'.$project->getSCMBox().'/plugins/scmcvs/cvsweb.php/?cvsroot='.$project->getUnixName();
	}

/*
	function group_approved ($params) {
		$group_id = $params['group_id'] ;
	
		$project =& group_get_object($group_id);

		if ($this->enabled_by_default) {
			$group->setPluginUse("scmcvs", 1) ;
		} else {
			$group->setPluginUse("scmcvs", 0) ;
		}
	}
*/
}

// Local Variables:
// mode: php
// c-file-style: "bsd"
// End:

?>
