<?php

require_once('common/include/User.class');

class CVSPlugin extends SCM {
	function CVSPlugin () {
		$this->SCM () ;
		$this->name = 'scmcvs';
		$this->text = 'CVS';
		$this->hooks[] = 'scm_page';
		$this->hooks[] = 'scm_admin_update';
		$this->hooks[] = 'scm_admin_page';
		$this->hooks[] = 'scm_stats';

		$this->hooks[] = 'scm_plugin';
//		$this->hooks[] = 'group_approved';
		$this->hooks[] = 'cssfile';

		require_once('plugins/scmcvs/config.php') ;

		$this->default_cvs_server = $default_cvs_server ;
		if ($cvs_root) {
			$this->cvs_root = $cvs_root;
		} else {
			$this->cvs_root = "/cvsroot";
		} 
		//$this->default_cvs_server = $default_cvs_server ;
		//$this->this_server = $this_server ;
		$this->enabled_by_default = $enabled_by_default ;

		$this->register () ;
	}
	
	function getDefaultServer() {
		return $this->default_cvs_server;
	}

	function CallHook ($hookname, $params) {
		global $Language, $HTML;
		
		switch ($hookname) {
		case 'scm_page':
			$group_id = $params['group_id'] ;
			$this->getPage ($group_id) ;
			break ;
		case 'scm_admin_update':
			$this->adminUpdate ($params) ;
			break ;
		case 'scm_admin_page':
			$this->getAdminPage ($params) ;
			break ;
		case 'scm_stats':
			$this->getStats ($params) ;
			break;
// 		case "group_approved":
// 			$this->groupApproved ($params) ;
// 			break;
		case 'cssfile':
			$this->getCSSfile ($params) ;
			break;
		case 'scm_plugin':
			$scm_plugins=& $params['scm_plugins'];
			$scm_plugins[]=$this->name;
			break;
		default:
			// Forgot something
		}
	}

	function getCSSfile ($layout) {
		echo '<link rel="stylesheet" type="text/css" href="/plugins/scmcvs/cvsweb/css/cvsweb.css" />';
	}

	function getPage ($group_id) {
		global $Language, $HTML ;

		$project =& group_get_object($group_id);
		if (!$project || !is_object($project)) {
			return false;
		} elseif ($project->isError()) {
			return false;
		}
		
		if ($project->usesPlugin($this->name)) {
		
			print $Language->getText('plugin_scmcvs','documentation');

			$cvsrootend=$project->getSCMBox().':/cvsroot/'.$project->getUnixName();
			$cvsrootend = $project->getSCMBox().':'.$this->cvs_root.'/'.$project->getUnixName();

			// CVS browser links must be displayed if
			// project enables anon CVS or if logged-in
			// user is a member of the group
			$displayCvsBrowser = $project->enableAnonSCM();
			if(session_loggedin()) {
				$perm =& $project->getPermission(session_get_user());
				if ($perm && is_object($perm) && !$perm->isError() && $perm->isMember()) {
					$displayCvsBrowser = true;
				}
			}

			// ######################## Table for summary info
			?>
			<table width="100%">
			<tr valign="top">
				<td width="65%">
			 	<?php
				// ######################## Anonymous CVS Instructions
				if ($project->enableAnonSCM()){
					echo $Language->getText('plugin_scmcvs', 'anoncvs');
					print '
						<p>
						<tt>cvs -d :pserver:anonymous@' . $cvsrootend.' login</tt><br/>
						<tt>cvs -d :pserver:anonymous@' . $cvsrootend.' checkout <em>'.$Language->getText('plugin_scmcvs', 'modulename').'</em></tt>
						</p>';
				}

				// ######################## Developer Access
				echo $Language->getText('plugin_scmcvs', 'devcvs');
				print '
					<p>
					<tt>export CVS_RSH=ssh</tt><br/>
					<tt>cvs -d :ext:<em>'.$Language->getText('plugin_scmcvs', 'developername').'</em>@'.$cvsrootend.' checkout <em>'.$Language->getText('plugin_scmcvs', 'modulename').'</em></tt>
					</p>';

				// ######################## CVS Snapshot
				if ($displayCvsBrowser) {
					print '
						<p>
						[<a href="/snapshots.php?group_id='.$group_id.'">'.$Language->getText('plugin_scmcvs', 'download_snapshot').'</a>]
						</p>';
	 			}
				?>
				</td>

				<td width="35%" valign="top">
				<?php
				// ######################## CVS Browsing 
				echo $HTML->boxTop($Language->getText('plugin_scmcvs', 'history'));
				echo $this->getDetailedStats(array('group_id'=>$group_id)).'<p>';
				if ($displayCvsBrowser){
					echo $Language->getText('plugin_scmcvs', 'browsetree');
					echo '<p>[<a href="'.$this->getAccountGroupCVSwebUrl($group_id).'">'.$Language->getText('plugin_scmcvs', 'browseit').'</a>]</p>' ;
					$hook_params['project_name'] = $project->getUnixName();
					plugin_hook ("cvs_stats", $hook_params) ;
				}
				echo $HTML->boxBottom();
				?>
				</td>
			</tr>
			</table>
			<?php
		}	
	}

	function adminUpdate ($params) {
		$group =& group_get_object($params['group_id']);
		if (!$group || !is_object($group)) {
			return false;
		} elseif ($group->isError()) {
			return false;
		}
		if ($group->usesPlugin($this->name)) {
 			if ($params['scmcvs_enable_anoncvs']) {
				$group->SetUsesAnonSCM(true);
			} else {
				$group->SetUsesAnonSCM(false);
 			}
 			if ($params['scmcvs_enable_pserver']) {
				$group->SetUsesPserver(true);
			} else {
				$group->SetUsesPserver(false);
 			}
		}
	}

	// This function is used to render checkboxes below
	function c($v) {
		if ($v) {
			return 'checked="checked"';
		} else {
			return '';
		}
	}

	function getAdminPage ($params) {
		global $Language;
		$group =& group_get_object($params['group_id']);

		if ($group->usesPlugin($this->name)) {
			?>
			<p>
			<input type="checkbox" name="scmcvs_enable_anoncvs" value="1" <?php echo $this->c($group->enableAnonSCM()); ?> /><strong><?php echo $Language->getText('plugin_scmcvs','enable_anonymous_cvs') ?></strong>
			<br />
			<input type="checkbox" name="scmcvs_enable_pserver" value="1" <?php echo $this->c($group->enablePserver()); ?> /><strong><?php echo $Language->getText('plugin_scmcvs','enable_pserver') ?></strong>
			</p>
			<?php
		}
	}

	function getStats ($params) {
		global $Language ;
		$group_id = $params['group_id'] ;
		$project =& group_get_object($group_id);
		if (!$project || !is_object($project)) {
			return false;
		} elseif ($project->isError()) {
			return false;
		}
		
		if ($project->usesPlugin($this->name)) {
			$result = db_query("
				SELECT sum(commits) AS commits, sum(adds) AS adds
				FROM stats_cvs_group
				WHERE group_id='$group_id'");
			$commit_num = db_result($result,0,'commits');
			$add_num    = db_result($result,0,'adds');
			if (!$commit_num) {
				$commit_num=0;
			}
			if (!$add_num) {
				$add_num=0;
			}
			echo ' (CVS: '.$Language->getText('plugin_scmcvs','cvs_commits',array(number_format($commit_num,0),number_format($add_num,0))).")";
		}
	}
	
	function getDetailedStats ($params) {
		global $Language, $HTML;
		$group_id = $params['group_id'] ;
		
		$result = db_query('
			SELECT u.realname, u.user_name, sum(commits) as commits, sum(adds) as adds, sum(adds+commits) as combined
			FROM stats_cvs_user s, users u
			WHERE group_id=\''.$group_id.'\' AND s.user_id=u.user_id AND (commits>0 OR adds >0)
			GROUP BY group_id, realname, user_name
			ORDER BY combined DESC, realname;
		');
		
		if (db_numrows($result) > 0) {
			$tableHeaders = array(
				$Language->getText('plugin_scmcvs', 'realname'),
				$Language->getText('plugin_scmcvs', 'adds'),
				$Language->getText('plugin_scmcvs', 'commits')
			);
			echo $HTML->listTableTop($tableHeaders);

			$i = 0;
			$total = array('adds' => 0, 'commits' => 0);

			while($data = db_fetch_array($result)) {
				echo '<tr '. $HTML->boxGetAltRowStyle($i) .'>';
				echo '<td width="50%"><a href="/users/'.$data['user_name'].'/">'.$data['realname'].'</a></td>'.
					'<td width="25%" align="right">'.$data['adds']. '</td>'.
					'<td width="25%" align="right">'.$data['commits'].'</td></tr>';
				$total['adds'] += $data['adds'];
				$total['commits'] += $data['commits'];
				$i++;
			}
			echo '<tr '. $HTML->boxGetAltRowStyle($i) .'>';
			echo '<td width="50%"><strong>'.$Language->getText('plugin_scmcvs', 'total').':</strong></td>'.
				'<td width="25%" align="right"><strong>'.$total['adds']. '</strong></td>'.
				'<td width="25%" align="right"><strong>'.$total['commits'].'</strong></td>';
			echo '</tr>';
			echo $HTML->listTableBottom();
			echo '<hr size="1" />';
		}
	}

	/**
	 *      getAccountGroupCvswebUrl() - Returns URL for group's CVS interface WWW
	 *
	 *	@param  string  The group name
	 *      @return URL to access CVS over HTTP
	 */
	function getAccountGroupCVSwebUrl($group_id) {
		$project =& group_get_object($group_id);
		//return 'http://'.$project->getSCMBox().'/plugins/scmcvs/cvsweb.php/?cvsroot='.$project->getUnixName();
		// external SCM box is now handled inside cvsweb.php
		return '/plugins/scmcvs/cvsweb.php/?cvsroot='.$project->getUnixName();
	}

/*
	function groupApproved ($params) {
		$group_id = $params['group_id'] ;
	
		$project =& group_get_object($group_id);

		if ($this->enabled_by_default) {
			$group->setPluginUse("scmcvs", 1) ;
		} else {
			$group->setPluginUse("scmcvs", 0) ;
		}
	}
*/
}

// Local Variables:
// mode: php
// c-file-style: "bsd"
// End:

?>
