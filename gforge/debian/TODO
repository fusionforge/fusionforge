This is a TODO list for the packaging.  Some items that used to be
here have been transferred onto the Savannah project, at
<http://savannah.gnu.org/support/?group_id=259>.

* [CB] Make /stats/ work.  [RM] It seems the tables don't get filled
  up, so I'd be tempted to blame the cronjobs.

* [CB] Add documentation pointed in project admin page.  [RM] Has to
  wait for smooth DB upgrade.  [RM] Even though, most of the
  documentation is VA-centric and should not be used as is.

* [CB] ViewCVS instead of CVSWEB?

* [CB] Find how to use libnss-lwres.  [RM] ??? [CB] It is not doing what I 
  was thinking. It may be possible to make the dns server to use directly
  postgres-db or ldap (Look at sdb driver /usr/share/doc/bind9-doc/misc/sdb.gz )

* [CB] Repair /admin/editpackages.php (Create FTP_INCOMING in
  /var/lib/sourceforge/ftp)  [RM] Is this still current? [CB] You can remove

* [CB] language_code is missing in language table.  [RM] Probably a
  matter of data.  Has to wait for smooth DB upgrade. [CB] Will be added in 2.6

* [RM] Decide on whether to use a chroot or not.

* [RM] Implement a (more) secure way of moving the files from the
  incoming dir to the published location.  Probably involves a
  root:root setuid program that checks the availability of some secret
  that's only given to a restricted set of PHP files (for instance,
  the correct database password), and changing said incoming dirs to
  user:user, perms 755.

* [RM] Use update-inetd(8) in install-dns.sh instead of modifying the
  inetd config file by hand.  Less error-prone, and we'll also
  probably get more portable (I'm thinking xinetd here).
  [CB] It's now in install-cvs.sh. Unfortunatly update-inetd
  doesn't seems to do anything for xinetd and it doesn't restore old 
  cvs config. We should contact cvs packager for a sourceforge-friendly install
  cvs install breaks sourceforge cvs replacement.

* [RM] Split CVS-related part from install-dns.sh into an
  install-cvs.sh script. [CB] Done

* [RM] Split DB-related part from sourceforge.postinst into an
  install-db.sh script.

* [RM] Add a cron job to remove released files from the database if
  the file is erased.  (Maybe not needed: if users are chrooted, they
  should not be able to remove files there.)

* [RM] Provide a way to un-release a file, and (why not?) to modify a
  released file afterwards.  Maybe.

# Local variables:
# mode: indented-text
# End:
