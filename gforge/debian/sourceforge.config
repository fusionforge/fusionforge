#!/bin/sh -e

# Source debconf library.
. /usr/share/debconf/confmodule

get_pw () {			# Use Debconf to get a password
    get_pw__pwname=$1
    get_pw__priority=$2
    get_pw__ok=''
    while [ -z "$get_pw__ok" ] ; do
	db_input ${get_pw__priority} ${get_pw__pwname} || get_pw__retcode=$? || true
	db_input ${get_pw__priority} ${get_pw__pwname}_confirm || true
	db_go
	if [ "$get_pw__retcode" = 30 ] ; then
	    get_pw__ok="Not asked"
	else
	    db_get ${get_pw__pwname} || true
	    get_pw__PW1=$RET
	    db_get ${get_pw__pwname}_confirm || true
	    get_pw__PW2=$RET
	    if [ "$get_pw__PW1" = "$get_pw__PW2" ] ; then
		get_pw__ok="Confirmed"
	    else
		db_fset ${get_pw__pwname} seen false
		db_fset ${get_pw__pwname}_confirm seen false
	    fi
	fi
    done
}

gen_random_pw () {		# Generate a random password
    if [ -f /dev/urandom ]; then  # ...using /dev/urandom when possible
	tmp=$(dd if=/dev/urandom count=256 bs=1 2> /dev/null | md5sum | cut -b1-8)
    else			# ...or something else if need be.
	# Last I was told, the Hurd had no /dev/urandom
	# (Correct me if it has changed)
	# Suggestions form something more random than $(date) are welcome
	tmp=$(date | md5sum | cut -b1-8)
    fi
    echo $tmp
}

get_pw sourceforge/db_password low
db_fget sourceforge/db_password seen || true
if [ "$RET" = "false" ]; then
    db_set sourceforge/db_password $(gen_random_pw)
    db_get sourceforge/db_password || true
    echo "Since you asked not to see all the debconf questions, I generated a random"
    echo "password for the database.  Use it if you want to have a peek at the"
    echo "database by hand.  It is '${RET}'.\n" ;
    db_fset sourceforge/db_password seen true
fi
db_input low sourceforge/admin_login || true
get_pw sourceforge/admin_password critical

db_fget sourceforge/domain_name seen || true
[ "$RET" = "false" ] && db_set sourceforge/domain_name $(hostname -f)
db_input medium sourceforge/domain_name || true
db_go || true

db_fget sourceforge/ip_address seen || true
if [ "$RET" = "false" ] ; then
    db_get sourceforge/domain_name
    db_set sourceforge/ip_address $(hostname -i | cut -f1 -d" ")
fi

db_fget sourceforge/server_admin seen || true
if [ "$RET" = "false" ] ; then
  db_get sourceforge/domain_name || true
  db_set sourceforge/server_admin "webmaster@$RET"
fi

db_input medium sourceforge/ip_address || true
db_input medium sourceforge/server_admin || true
db_get sourceforge/domain_name
noreplyaddress="noreply@"${RET}
db_subst sourceforge/noreply_to_bitbucket noreply $noreplyaddress
db_input low sourceforge/noreply_to_bitbucket || true
db_go || true

db_fget sourceforge/cvs_host seen || true
if [ "$RET" = "false" ] ; then
    db_get sourceforge/domain_name
    db_set sourceforge/cvs_host cvs.$RET
fi

db_fget sourceforge/lists_host seen || true
if [ "$RET" = "false" ] ; then
    db_get sourceforge/domain_name
    db_set sourceforge/lists_host lists.$RET
fi

db_fget sourceforge/download_host seen || true
if [ "$RET" = "false" ] ; then
    db_get sourceforge/domain_name
    db_set sourceforge/download_host download.$RET
fi

db_input high sourceforge/pam_ldap_config || true

db_fget sourceforge/ldap_host seen || true
if [ "$RET" = "false" ] ; then
    db_get sourceforge/domain_name
    db_set sourceforge/ldap_host $RET
fi

db_fget sourceforge/ldap_base_dn seen || true
if [ "$RET" = "false" ] ; then
    db_set sourceforge/ldap_base_dn $(/usr/bin/ldapsearch -x -b '' -s base '(objectclass=*)' namingContexts | grep "namingContexts:" | cut -d" " -f2)
fi

db_input low sourceforge/cvs_host || true
db_input low sourceforge/lists_host || true
db_input low sourceforge/download_host || true
db_input medium sourceforge/ldap_host || true
db_input medium sourceforge/ldap_base_dn || true
get_pw sourceforge/ldap_web_add_password medium
db_go || true
#db_fget sourceforge/ldap_web_add_password seen || true
#if [ "$RET" = "false" ]; then
#    if [ -f /etc/ldap.secret ] ; then
#	pwd=$(cat /etc/ldap.secret)
#	db_set sourceforge/ldap_web_add_password $pwd
#    else
#	echo "The package libpam-ldap is not correctly configured."
#	echo "The sourceforge package configuration cannot proceed."
#	echo "Please use \"dpkg-reconfigure libpam-ldap\" to fix the problem."
#	exit 1
#    fi
#fi

db_input low sourceforge/system_name || true
db_input low sourceforge/newsadmin_groupid || true
db_input low sourceforge/skill_list || true
db_input high sourceforge/mod_ssl_cert || true

db_go || true
