#! /bin/sh
# prerm script for sourceforge
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/share/doc/packaging-manual/

if [ \( "$1" = "upgrade" -o "$1" = "remove" \) -a -L /usr/doc/pkg ]; then
    rm -f /usr/doc/pkg
fi

replace_file () {
    file=$1
    cp $file ${file}.sourceforge-old
    mv ${file}.sourceforge-new $file
}

propose_update () {
    file=$1
    if diff -q ${file} ${file}.sourceforge-new &> /dev/null ; then
	# Old file and new file are identical
	rm -f ${file}.sourceforge-new
    else
	db_fset sourceforge/internal/replace_file_remove seen false
	db_subst sourceforge/internal/replace_file_remove file $file
	db_input high sourceforge/internal/replace_file_remove || true
	db_go || true
	db_get sourceforge/internal/replace_file_remove || true
	case "$RET" in
	    "true")
		echo >&2 "Replacing file $file with changed version"
		replace_file $file
		;;
	    "false")
		# Do nothing
		;;
	esac
    fi
}

case "$1" in
    remove)
	. /usr/share/debconf/confmodule

        # Unpatch Apache configuration files
	/usr/lib/sourceforge/bin/install-apache.sh purge-files

	propose_update /etc/apache/httpd.conf

        # Unpatch DB configuration files
	/usr/lib/sourceforge/bin/install-db.sh purge-files

	propose_update /etc/postgresql/pg_hba.conf
	
	# Unpatch Bind configuration files
	/usr/lib/sourceforge/bin/install-dns.sh purge-files

	propose_update /etc/bind/named.conf
	
	# Clean debconf after ourselves
	db_stop

        # FTP config removal
	/usr/lib/sourceforge/bin/install-ftp.sh purge

        # Apache config removal
	/usr/lib/sourceforge/bin/install-apache.sh purge

        # DNS config removal
	/usr/lib/sourceforge/bin/install-dns.sh purge

        # CVS config removal
	/usr/lib/sourceforge/bin/install-cvs.sh purge

        # Exim config removal
	/usr/lib/sourceforge/bin/install-exim.sh purge # Not ready yet

        # SSH config removal
	/usr/lib/sourceforge/bin/install-ssh.sh purge

        # LDAP config removal
	/usr/lib/sourceforge/bin/install-ldap.sh purge

        # DB config removal
	/usr/lib/sourceforge/bin/install-db.sh purge

        if grep -q "### Next line inserted by Sourceforge install" /etc/aliases
        then
                perl -pi -e "s/### Next line inserted by Sourceforge install\n//" /etc/aliases
                perl -pi -e "s/^noreply:.*\n//" /etc/aliases
                perl -pi -e "s/^sourceforge:.*\n//" /etc/aliases
		[ -x /usr/bin/newaliases ] && newaliases
        fi

	rm -f /var/cache/sourceforge/*
	rm -f /etc/sourceforge/local.inc /etc/sourceforge/sf-httpd.conf \
	    /etc/sourceforge/database.inc /etc/sourceforge/sf-httpd.secrets \
	    /etc/sourceforge/local.pl
        # Clean up cruft left over by past buggy versions...
	rm -f /etc/sourceforge/exim.directors
	rm -f /etc/sourceforge/exim.directors.template
	rm -f /usr/lib/sourceforge/www/ldap.php

	;;
    upgrade|deconfigure|failed-upgrade)
        ;;
    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
