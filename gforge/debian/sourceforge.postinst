#! /bin/sh
# postinst script for sourceforge
#
# see: dh_installdeb(1)

set -e
# set -x				# Be verbose, be very verbose.

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/share/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

. /usr/share/debconf/confmodule

case "$1" in
    configure)
	adduser --system --group --home /var/www/sourceforge sourceforge &> /dev/null
	
	pattern=$(basename $0).XXXXXX
	
	# "Fill in the blanks" in config files
        # files="local.inc database.inc sf-httpd.conf sf-httpd.secrets local.pl exim.directors"
        files="local.inc database.inc sf-httpd.conf sf-httpd.secrets local.pl"
        vars="domain_name ip_address server_admin db_password system_name admin_login admin_password cvs_host lists_host download_host newsadmin_groupid ldap_host ldap_base_dn ldap_web_add_password skill_list"
        
	# Invoke our magic script
	# Parameters are input file, output file, debconf prefix, list of vars
	for i in $files ; do
	    perl -w '-MDebconf::Client::ConfModule qw/:all/' /usr/lib/sourceforge/bin/fill-in-the-blanks.pl /etc/sourceforge/$i.template /etc/sourceforge/$i sourceforge/ $vars
	done
	chmod 644 /etc/sourceforge/local.inc
	chmod 644 /etc/sourceforge/sf-httpd.conf
	chown sourceforge:sourceforge /etc/sourceforge/database.inc
	chmod 640 /etc/sourceforge/database.inc
	chown sourceforge:sourceforge /etc/sourceforge/local.pl
	chmod 640 /etc/sourceforge/local.pl
	# chmod 644 /etc/sourceforge/exim.directors
    	
        # Setup our DB
	/usr/lib/sourceforge/bin/install-db.sh configure
	
        # Setup our Apache
	/usr/lib/sourceforge/bin/install-apache.sh configure

	# Prepare a few variables for the DNS stuff
	db_get sourceforge/domain_name
	domain_name=$RET
	db_get sourceforge/ip_address
	ip_address=$RET

	# Clean debconf after ourselves
	db_stop

	# Install the chroot environment
	/usr/lib/sourceforge/bin/install-chroot.sh
	
	# Create the DNS zone
	# echo "Installing Sourceforge DNS zone"
	/usr/lib/sourceforge/bin/install-dns.sh $domain_name $ip_address
	
        # Setup our CVS
	/usr/lib/sourceforge/bin/install-cvs.sh configure

        # Setup our LDAP
	/usr/lib/sourceforge/bin/install-ldap.sh

        # Setup our SSH
	/usr/lib/sourceforge/bin/install-ssh.sh

        # Setup our mail forwarding
	/usr/lib/sourceforge/bin/install-exim.sh configure

        # Setup our FTP
	/usr/lib/sourceforge/bin/install-ftp.sh configure 

        # Setup our FRS
	chown root:root /var/lib/sourceforge/download

	# Setup our CVS
	# Making user group and cvs update from database 
	/usr/lib/sourceforge/bin/update-user-group-cvs.sh
	# logs
	chown root:sourceforge /var/log/sourceforge/cvs
	chmod 775 /var/log/sourceforge/cvs

	# Restart some services
	/etc/init.d/bind9 restart
	# This is equivalent but require some signature, not always there
	#/usr/sbin/rndc reload
	/etc/init.d/ssh start
	/etc/init.d/apache restart
	
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
