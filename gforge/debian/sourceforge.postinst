#! /bin/sh
# postinst script for sourceforge
#
# see: dh_installdeb(1)

set -e
# set -x				# Be verbose, be very verbose.

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/share/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

replace_file () {
    file=$1
    cp $file ${file}.sourceforge-old
    mv ${file}.sourceforge-new $file
}

propose_update () {
    file=$1
    if diff -q ${file} ${file}.sourceforge-new 2>&1 > /dev/null ; then
	# Old file and new file are identical
	rm -f ${file}.sourceforge-new
    else
	db_fset sourceforge/replace_file_install seen false
	db_subst sourceforge/replace_file_install file $file
	db_input high sourceforge/replace_file_install || true
	db_go || true
	db_get sourceforge/replace_file_install || true
	case "$RET" in
	    "true")
		echo >&2 "Replacing file $file with changed version"
		replace_file $file
		;;
	    "false")
		db_fset sourceforge/file_changed seen false
		db_subst sourceforge/file_changed file $file
		db_input high sourceforge/file_changed || true
		db_go || true
		;;
	esac
    fi
}

case "$1" in
    configure)
	adduser --system --group --home /var/www/sourceforge sourceforge 2>&1 > /dev/null
	
	pattern=$(basename $0).XXXXXX
	
	. /usr/share/debconf/confmodule

	# "Fill in the blanks" in main config file
        vars="domain_name ip_address server_admin db_password system_name admin_login admin_password shell_host users_host cvs_host lists_host download_host newsadmin_groupid statsadmin_groupid ldap_host ldap_base_dn ldap_web_add_password skill_list noreply_to_bitbucket simple_dns"
	mainconffile=/etc/sourceforge/sourceforge.conf
        if [ ! -e $mainconffile ] ; then
	    touch $mainconffile
	    chmod 600 $mainconffile
	fi
	for i in $vars ; do
	    if ! grep -q "^$i=" $mainconffile ; then
		db_get sourceforge/$i
		echo "$i=$RET" >> $mainconffile
	    fi
        done
	/usr/sbin/sourceforge-config
    	
        # Patch Apache configuration files
	/usr/lib/sourceforge/bin/install-apache.sh configure-files
	[ -e /etc/apache/httpd.conf ] && propose_update /etc/apache/httpd.conf
	[ -e /etc/apache-ssl/httpd.conf ] && propose_update /etc/apache-ssl/httpd.conf
	propose_update /etc/php4/apache/php.ini
	propose_update /etc/php4/cgi/php.ini

        # Patch DB configuration files
	/usr/lib/sourceforge/bin/install-db.sh configure-files
	propose_update /etc/postgresql/pg_hba.conf
	
	# Patch Bind configuration files
	/usr/lib/sourceforge/bin/install-dns.sh configure-files
	propose_update /etc/bind/named.conf
	
        # Patch Exim configuration files
	/usr/lib/sourceforge/bin/install-exim.sh configure-files
	propose_update /etc/aliases
	propose_update /etc/exim/exim.conf

        # Patch Proftpd configuration files
	/usr/lib/sourceforge/bin/install-ftp.sh configure-files
	propose_update /etc/proftpd.conf

        # Patch Slapd configuration files
	/usr/lib/sourceforge/bin/install-ldap.sh configure-files
	propose_update /etc/libnss-ldap.conf
	propose_update /etc/nsswitch.conf
	propose_update /etc/ldap/slapd.conf

	# Clean debconf after ourselves
	db_stop

        # Setup our DB
	/usr/lib/sourceforge/bin/install-db.sh configure
	
        # Setup our Apache
	/usr/lib/sourceforge/bin/install-apache.sh configure

	# Install the chroot environment
	/usr/lib/sourceforge/bin/install-chroot.sh configure
	
	# Create the DNS zone
	/usr/lib/sourceforge/bin/install-dns.sh configure
	
        # Setup our CVS
	/usr/lib/sourceforge/bin/install-cvs.sh configure

        # Setup our LDAP
	/usr/lib/sourceforge/bin/install-ldap.sh configure

        # Setup our SSH
	/usr/lib/sourceforge/bin/install-ssh.sh configure

        # Setup our mail forwarding
	/usr/lib/sourceforge/bin/install-exim.sh configure

        # Setup our FTP
	/usr/lib/sourceforge/bin/install-ftp.sh configure 

        # Setup our FRS
	chown root:root /var/lib/sourceforge/download

	# Setup our CVS
	# Making user group and cvs update from database 
	/usr/lib/sourceforge/bin/update-user-group-cvs.sh
	# logs
	chown root:sourceforge /var/log/sourceforge/cvs
	chmod 775 /var/log/sourceforge/cvs

	# Restart some services
	invoke-rc.d ssh start
	
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
