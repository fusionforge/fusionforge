<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "../../../dtd/docbookx.dtd" [
	<!ENTITY % authors SYSTEM "../entities/authors.ent">
	%authors;
]>
<article lang="en-US" id="installation_guide">
	<articleinfo>
		<title>GForge Installation Guide</title>
		<authorgroup>
			&reinhard_spisser;
			&tom_copeland;
			&ognyan_kulev;
			&guillaume_smet;
		</authorgroup>
	</articleinfo>
	<section>
		<title>Hardware Requirements</title>
		<para>
			Hardware requirements are dependent on the number of users that will use the system and how active those users are.
		</para>
		<para>	
			For instance, an installation of GForge hosts over 450 users and over 140 projects on a single CPU Pentium 2.4GHz machine with 512 MB of RAM.
		</para>
		<para>
			You can find additionnal information about hardware used by several installations of GForge in the <ulink url="http://gforge.org/docman/view.php/1/52/gforge-sites.html">GForge sites list maintained by Tom Copeland</ulink>.
		</para>
	</section>
	<section>
		<title>Software Requirements</title>
		<para>
			GForge should work correctly on any system configured like this:
		</para>
		<orderedlist>
			<listitem><para>Linux Operating System</para></listitem>
			<listitem><para><ulink url="http://www.postgresql.org/">PostgreSQL</ulink> 7.3 or later</para></listitem>
			<listitem><para><ulink url="http://www.apache.org/">Apache</ulink> 1.3.22 or later</para></listitem>
			<listitem><para><ulink url="http://www.openssl.org/">openssl</ulink> 0.9.4 or later</para></listitem>
			<listitem><para><ulink url="http://www.openssl.org/">mod_ssl</ulink> 2.4.10 or later (included in Apache 2.0 and later)</para></listitem>
			<listitem><para><ulink url="http://www.php.net/">PHP</ulink> 4.0.4 or later (note that you'll need to have PHP built with the command line interface support, which only comes standard with PHP 4.3 or later)</para></listitem>
			<listitem><para>php-pgsql (enable it with <literal>--with-pgsql</literal> when building PHP, or install it as package)</para></listitem>
			<listitem><para>php-mbstring (enable it with <literal>--with-mbstring</literal> when building PHP, or install it as package)</para></listitem>
		</orderedlist>
		<para>
			Optional software:
		</para>
		<orderedlist>
			<listitem><para><ulink url="http://turck-mmcache.sourceforge.net">Turck MMCache</ulink> or <ulink url="http://www.php-accelerator.co.uk/">PHP Accelerator</ulink> or any other PHP accelerator (highly recommended)</para></listitem>
			<listitem><para><ulink url="http://www.gnu.org/software/mailman/">GNU Mailman</ulink> and <ulink url="http://www.python.org/">Python</ulink> (Mailing list support)</para></listitem>
			<listitem><para><ulink url="http://jabberd.jabberstudio.org/">Jabberd</ulink> (Jabber support)</para></listitem>
			<listitem><para><ulink url="http://www.aditus.nu/jpgraph/">JPGraph</ulink> (Gantt Charting and Graphing Support)</para></listitem>
			<listitem><para><ulink url="http://www.perl.org/">Perl</ulink>, <ulink url="http://dbi.perl.org/">DBI module</ulink> and associated <literal>DBD::Pg</literal>.</para></listitem>
		</orderedlist>
		<para>
			Successful installations and operations have been done using the following systems:
		</para>
		<itemizedlist>
			<listitem>
				<para>RedHat Enterprise Linux 3 with bundled packages except for a compiled GNU Mailman</para>
			</listitem>
			<listitem>
				<para>RedHat Linux 9 with bundled packages except for a compiled GNU Mailman</para>
			</listitem>
		</itemizedlist>
	</section>
	<section>
		<title>Installation</title>
		<section>
			<title>Overview</title>
			<para>GForge has a lot of different pieces touching a lot of different components in the system. Cronjobs are required to maintain the system, touching lots of files on a daily and hourly basis, including <filename>/etc/*</filename> system files.</para>
			<para>The plugins that now manage the CVS and SVN functionality have made installation slightly harder because even more files have to be moved into place during installation.</para>
			<para>The manual installation of GForge is documented below. Be sure to follow each step carefully, check the forums for frequently asked questions, and ask your Apache, Mailman, and PostgreSQL installation questions in the corresponding mailing lists rather than on the GForge forums where little help is available.</para>
		</section>
		<section>
			<title>Installing on Debian</title>
			<para>
				You can simply add lines found at <ulink url="http://people.debian.org/~bayle/"/> or <ulink url="http://roland.mas.free.fr/"/> to <filename>/etc/apt/sources.list</filename> and type <command>apt-get install gforge</command> to install a working GForge system, thanks to Christian Bayle and Roland Mas.
			</para>
			<para>
				Note that GForge is now part of official Debian, and so you can find it in all debian mirrors all other the planet. From scratch install snapshot are also available for a guided installation.
			</para>
		</section>
		<section>
			<title>Installing on RPM-based systems</title>
			<para>Guillaume Smet makes <ulink url="http://people.openwide.fr/~gsmet/gforge/rpm/">RPM packages for installing GForge</ulink>. If you are using Fedora Core or Red Hat Enterprise Linux, you may want to try them.</para>
		</section>
		<section>
			<title>Installing GForge</title>
			<section>
				<title>Directory Layout</title>
				<para>Instructions below assume that gforge is unpacked into <filename class="directory"><replaceable>/var/www/gforge</replaceable></filename>.  There are some other directories where GForge stores files. In this installation guide, they are put in <filename class="directory">/var/www</filename> too.</para>
				<note>
					<para>If you want to be <ulink url="http://www.pathname.com/fhs/">FHS</ulink>-compliant, GForge should be unpacked into <filename class="directory">/usr/local/share/gforge</filename>, and directories for storing files should be in <filename class="directory">/var/lib/gforge</filename> or <filename class="directory">/var/local/lib/gforge</filename>.</para>
				</note>
			</section>
			<section>
				<title>Unpacking</title>
				<para>To install GForge, follow these steps (as root):</para>
				<screen>
# <userinput>bzip2 -dc gforge-4.1.tar.bz2 | tar xvf -</userinput>
# <userinput>mv gforge-4.1 <replaceable>/var/www/gforge</replaceable></userinput>
</screen>
			</section>
			<section>
				<title>GForge Config File</title>
				<para>In the GForge distribution, you will find <filename>etc/local.inc</filename>. Copy it to <filename>/etc/gforge/local.inc</filename> and edit all of the settings.  In later sections, there is more information about specific configuration settings.  Usually, you will want to make it readable only by webserver user (see <xref linkend="web-server"/> for <replaceable>apache-user</replaceable>):</para>
				<programlisting>
# <userinput>mkdir /etc/gforge</userinput>
# <userinput>cp <replaceable>/var/www/gforge</replaceable>/etc/local.inc /etc/gforge</userinput>
# <userinput>chown -R root: /etc/gforge</userinput>
# <userinput>chmod -R 644 /etc/gforge</userinput>
# <userinput>chown <replaceable>apache-user</replaceable> /etc/gforge/local.inc</userinput>
# <userinput>chmod 600 /etc/gforge/local.inc</userinput>
</programlisting>
			</section>
			<section>
				<title>Configuring GForge</title>
				<orderedlist>
					<listitem><para>Login as <literal>root</literal> user</para></listitem>
					<listitem>
						<para>Create a directory <filename class="directory">/etc/gforge</filename></para>
					</listitem>
					<listitem>
						<para>Copy the file <filename>local.inc.example</filename> from <filename class="directory"><replaceable>/var/www/gforge</replaceable>/etc/</filename> to <filename class="directory">/etc/gforge/</filename> </para>
					</listitem>
					<listitem>
						<para>Open <filename>/etc/gforge/local.inc</filename>, configuring the following basic parameters:</para>
						<orderedlist>
							<listitem>
								<para>Database configuration:</para>
<programlisting>
$sys_dbhost="localhost" # some folks suggest setting this to "", your mileage may vary
$sys_dbname="gforge"
$sys_dbuser="gforge"
$sys_dbpasswd="gforge"
$sys_server="postgres"
</programlisting>
							</listitem>
							<listitem>
								<para>Change the value of the <varname>$sys_upload_dir</varname> to:</para>
								<programlisting>$sys_upload_dir='/var/www/download/';</programlisting>
							</listitem>
							<listitem>
								<para>Change the value of the <varname>$sys_urlroot</varname> to:</para>
<programlisting>$sys_urlroot="<replaceable>/var/www/gforge</replaceable>/www/";</programlisting>
							</listitem>
							<listitem>
								<para>The directives <varname>$sys_default_domain</varname> and <varname>$sys_fallback_domain</varname> should contain the domain of your server, e.g. <literal>gforge.org</literal>.</para>
							</listitem>
						</orderedlist>
					</listitem>
				</orderedlist>
			</section>
		</section>
		<section>
			<title>Configuring the Database (PostgreSQL)</title>
			<section>
				<title>Initialization of PostgreSQL</title>
				<para>In some distributions, PostgreSQL database cluster is not initialised.  Consult distribution documentation for more information.  If database cluster is not created, you can do so by running:</para>
<screen>
# <userinput>su - postgres</userinput>
$ <userinput>initdb</userinput>
</screen>
				<caution>
					<para>This will wipe out any existing PostgreSQL databases!</para>
				</caution>
			</section>

			<section>
				<title>PostgreSQL Authentication Configuration</title>
				<para>The <literal>postgres</literal> PostgreSQL user is used only during installation.  Usually, it can connect via UNIX socket without password when invoked by <literal>postgresql</literal> system account.  Check by running this:</para>
<screen>
# <userinput>su - postgres</userinput>
$ <userinput>psql template1</userinput>
</screen>
				<para>If connection fails, add the following line to <filename>pg_hba.conf</filename>:</para>
<screen>
local all postgres ident sameuser
</screen>
				<para>GForge uses <literal>gforge</literal> PostgreSQL user to connect to <literal>gforge</literal> database by using password.  (You can change that name by editing <filename>local.inc</filename>.)  In order this to work, assure that you have the following line in your <filename>pg_hba.conf</filename>:</para>
<screen>
host gforge gforge 127.0.0.1 255.255.255.255 md5
</screen>
				<para>This line assumes that GForge will always use local PostgreSQL database (<literal>localhost</literal>).  If this is not the case, consult PostgreSQL manual for ways to allow connection.</para>
				<para>The following option should be set in <filename>postgresql.conf</filename> because connection to <literal>localhost</literal> uses TCP/IP:</para>
<screen>
tcpip_socket = true
</screen>
				<para>After all these changes to PostgreSQL configuration files are made, PostgreSQL should be restarted.  This depends on the distribution.  In Debian, it's like this:</para>
<screen>
# <userinput>/etc/init.d/postgresql restart</userinput>
</screen>
			</section>
			<section>
				<title>Importing Database</title>
				<para>Create GForge database user:</para>
<screen>
# <userinput>su - postgres</userinput>
$ <userinput>psql template1</userinput>
template1=# <userinput>CREATE USER gforge NOCREATEUSER NOCREATEDB</userinput>
template1-# <userinput>PASSWORD '<replaceable>gforge-password</replaceable>';</userinput>
</screen>
				<para>Create GForge database:</para>
<screen>
template1=# <userinput>CREATE DATABASE gforge OWNER gforge ENCODING 'UNICODE';</userinput>
</screen>
				<para>Add PL/pgSQL support using the commands:</para>
<screen>
# <userinput>su - postgres</userinput>
$ <userinput>createlang plpgsql gforge</userinput>
</screen>
				<para>Finally, install the database:</para>
<screen>
$ <userinput>cd <replaceable>/var/www/gforge</replaceable>/db</userinput>
$ <userinput>psql -a -U gforge -f gforge.sql gforge &amp;&gt; /tmp/gforge.sql.log</userinput>
</screen>
			</section>
		</section>
		<section>
			<title>Configuring DNS Server (BIND)</title>
			<para>GForge needs its own domain.  In example GForge configuration file, it's <literal>gforge.<replaceable>company.com</replaceable></literal>.  Here some example configuration files for BIND are presented that can help you if you are not familiar with BIND but it's not meant to be complete. Don't ask BIND-related questions in GForge forums &ndash; consult documentation that come with your distribution and search in Internet.  Distributions put files in different places and so there are no file locations here.  The example configuration below is only quick start example and doesn't include reverse mapping.</para>
			<para>New subdomain in <replaceable>company.com</replaceable> should be created.  In <replaceable>company.com</replaceable> zone file, it may look like that:</para>
<screen>
gforge          IN      NS      ns.gforge.<replaceable>company.com</replaceable>.
ns.gforge       IN      A       <replaceable>1.2.3.4</replaceable>
</screen>
			<para>New zone file for <literal>gforge.<replaceable>company.com</replaceable></literal> may look like this:</para>
<screen>
$TTL    2d
@       IN      SOA     gforge.<replaceable>example.com</replaceable>. hostmaster.gforge.<replaceable>example.com</replaceable>. (
                              1         ; Serial
                         172800         ; Refresh
                            900         ; Update retry
                        2419200         ; Expire
                           3600 )       ; Negative Cache TTL
;
@               IN      NS      ns.gforge.<replaceable>example.com</replaceable>.
@               IN      A       <replaceable>1.2.3.4</replaceable>
ns              IN      A       <replaceable>1.2.3.4</replaceable>

download        IN      A       <replaceable>1.2.3.4</replaceable>
upload          IN      A       <replaceable>1.2.3.4</replaceable>
shell           IN      A       <replaceable>1.2.3.4</replaceable>
users           IN      A       <replaceable>1.2.3.4</replaceable>
gfdocs          IN      A       <replaceable>1.2.3.4</replaceable>
lists           IN      A       <replaceable>1.2.3.4</replaceable>
cvs             IN      A       <replaceable>1.2.3.4</replaceable>
svn             IN      A       <replaceable>1.2.3.4</replaceable>
scm             IN      A       <replaceable>1.2.3.4</replaceable>
ldap            IN      A       <replaceable>1.2.3.4</replaceable>
jabber          IN      A       <replaceable>1.2.3.4</replaceable>
images          IN      A       <replaceable>1.2.3.4</replaceable>
</screen>
			<para>The new zone must be added in main BIND configuration file:</para>
<screen>
zone "gforge.<replaceable>example.com</replaceable>" {
        type master;
        file "<replaceable>/dist-specific/path/to/zone-file</replaceable>";
};
</screen>
			<para>Of course, changes will take effect after reloading BIND.</para>
		</section>
		<section>
			<title>Configuring PHP</title>
			<para>The cronjobs require PHP CLI or PHP CGI to be installed and the <filename>php.ini</filename> file to be properly configured with your <varname>include_path</varname>.  In some systems, one configuration is used for mod_php and PHP CLI (e.g. <filename>/etc/php.ini</filename> in Fedora Core).  In others, there are separate configurations (e.g. <filename>/etc/php4/apache/php.ini</filename> and <filename>/etc/php4/cli/php.ini</filename> in Debian). In the latter case, both configuration files should have correct <literal>include_path</literal>.  Check what <filename>php.ini</filename> is used by PHP CLI by running <command>php4 -i | fgrep php.ini</command>.</para>
			<para>In addition, you may have to symlink <filename>/usr/bin/php</filename> to <filename>/usr/bin/php4</filename>, which is where the cronjobs expect your PHP CLI to be located.</para>
			<orderedlist>
				<listitem>
					<para>Verify the version of PHP installed on your system: <command>php -v</command></para>
				</listitem>
				<listitem><para>Open <filename>/etc/php.ini</filename>.</para></listitem>
				<listitem>
					<para>If the PHP version you're using is 4.2.0 or later, enable the <literal>register_globals</literal> variable:</para>
<programlisting>
register_globals = On
</programlisting>
				</listitem>
				<listitem>
					<para>Ensure that file uploads are allowed:</para>
<programlisting>
file_uploads = On
</programlisting>
				</listitem>
				<listitem>
					<para>Add magic quotes to form fields passed to PHP:</para>
<programlisting>
magic_quotes_gpc = On
</programlisting>
				</listitem>
				<listitem>
					<para>and configure the <literal>include_path</literal> directive as follows (on one line):</para>
<programlisting>
include_path=".:<replaceable>/var/www/gforge</replaceable>:<replaceable>/var/www/gforge</replaceable>/www/include:/etc/gforge"
</programlisting>
				</listitem>
			</orderedlist>
			<note>
				<para>If you want to use other applications on the server hosting your GForge, you may be interested in having GForge specific configuration in the GForge vhost directive.</para>
				<example>
					<title>gforge.conf vhost configuration</title>
<programlisting><![CDATA[
<VirtualHost *>
	DocumentRoot /var/www/gforge/www
	ServerName gforge.company.com
	ErrorDocument 404 /404.php
	php_value include_path ".:/var/www/gforge/:/var/www/gforge/www/include/:/etc/gforge/"
	php_flag register_globals On
	php_flag magic_quotes_gpc On
	php_flag file_uploads On
	AddDefaultCharset UTF-8
	AcceptPathInfo On
	<Location /projects>
		ForceType application/x-httpd-php
	</Location>
	<Location /users>
		ForceType application/x-httpd-php
	</Location>
</VirtualHost>
]]></programlisting>
				</example>
			</note>
			<note>
				<para>To run scripts in command line, you need to invoke the PHP interpreter with the <literal>-f</literal> flag, e.g.:</para>
<screen>
# php -f cronjobs/mailing_lists_create.php
</screen>
			</note>
		</section>
		<section id="web-server">
			<title>Configuring the Web Server (Apache)</title>
			<orderedlist>
				<listitem>
					<para>Open <filename>/etc/httpd/conf/httpd.conf</filename> or better create a <filename>gforge.conf</filename> file in <filename class="directory">/etc/httpd/conf.d/</filename>.  These files and directories may have different names depending on distribution.</para>
					<para>You may want to copy <filename>etc/gforge-httpd.conf.example</filename> to <filename>/etc/httpd/conf.d/gforge.conf</filename> and edit it, instead of entering manually the examples below.</para>
				</listitem>
				<listitem><para>Create the primary virtual host and fill the rest of the directives in it:</para>
<programlisting><![CDATA[
NameVirtualHost 192.168.1.1
<VirtualHost 192.168.1.1>
ServerName gforge.company.com
ServerAdmin webmaster@gforge.company.com

# Put the rest of the directives here.

</VirtualHost>
]]></programlisting>
				</listitem>
				<listitem>
					<para>Change the <literal>DocumentRoot</literal> to point to the <filename class="directory">www</filename> directory:</para>
<programlisting>
DocumentRoot "<replaceable>/var/www/gforge</replaceable>/www"
</programlisting>
				</listitem>
				<listitem>
					<para>Create a <literal>Directory</literal> directive following the <literal>DocumentRoot</literal> as follows:</para>
<programlisting><![CDATA[
<Directory "/var/www/gforge/www">
    Options Indexes FollowSymLinks
    AllowOverride All
    Order allow,deny
    Allow from all
    ErrorDocument 404 /404.php
</Directory>
]]></programlisting>
				</listitem>
				<listitem><para>If you wish to set up a server with HTTPS, you need to configure the <literal>VirtualHost:443</literal> section of <filename>httpd.conf</filename>.</para></listitem>
				<listitem>
					<para>Add several new filenames to the <literal>DirectoryIndex</literal> directive:</para>
<programlisting>
DirectoryIndex index.html index.php
</programlisting>
				</listitem>
				<listitem>
					<para>Configuring PHP for Apache</para>
					<para>The configuration for the PHP module for Apache is different for Apache versions 1.3 and 2.0. Follow the instructions for the version installed on your system.</para>
					<itemizedlist>
						<listitem>
							<para>Configuring PHP for Apache 1.3</para>
							<orderedlist>
								<listitem>
									<para>Open <filename>/etc/httpd/conf/httpd.conf</filename> or <filename>/etc/httpd/conf.d/gforge.conf</filename> and put the rest of the directives in the primary virtual host.</para>
								</listitem>
								<listitem>
									<para>Insert the following instructions after the <literal>DocumentRoot</literal> directive:</para>
<programlisting><![CDATA[
<Location /projects>
  ForceType application/x-httpd-php
</Location>
<Location /users>
  ForceType application/x-httpd-php
</Location> 
]]></programlisting>
									<para>Ensure the following lines are present and not commented out in <filename>/etc/httpd/conf/httpd.conf</filename>:</para>
<programlisting>
LoadModule php_module	modules/libphp.so
AddModule mod_php.c
</programlisting>
								</listitem>
							</orderedlist>
						</listitem>
						<listitem>
							<para>Configuring PHP for Apache 2.0</para>
							<para>For newer versions of Apache 2.0 (RedHat 9 or above), please follow Apache 1.3 instructions above.</para>
							<orderedlist>
								<listitem>
									<para>Open <filename>/etc/httpd/conf.d/php.conf</filename> and put the rest of the directives in the primary virtual host.</para>
								</listitem>
								<listitem>
									<para>Change the existing <literal>Files</literal> directive to:</para>
<programlisting><![CDATA[
<Files *.php>
    SetOutputFilter PHP
    SetInputFilter PHP
    AcceptPathInfo On
    LimitRequestBody 2097152
</Files>
]]></programlisting>
									<para>
										The <literal>LimitRequestBody</literal> directive allows you to limit the maximum number of bytes of a request (including uploads). The default is 524288 (512Kb). This means that you cannot upload files with a size &gt;512Kb. With this directive we set it to 2MB. If you wish to set this value higher than 2MB, you must also edit the <literal>upload_max_filesize</literal> directive in <filename>php.ini</filename>.
									</para>
								</listitem>
								<listitem>
									<para>Add the following lines:</para>
<programlisting><![CDATA[
<Files projects>
SetOutputFilter PHP
SetInputFilter PHP
AcceptPathInfo on
</Files>

<Files users>
SetOutputFilter PHP
SetInputFilter PHP
AcceptPathInfo on
</Files>
]]></programlisting>
								</listitem>
							</orderedlist>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<para>Restart the Apache server: <command>/etc/init.d/httpd restart</command></para>
				</listitem>
			</orderedlist>
			<section>
				<title>Project webs</title>
				<para>Each project can have its own vhost.  Module <literal>vhost_alias</literal> should be enabled and the following directives should be added to <filename>httpd.conf</filename>:</para>
<programlisting><![CDATA[
#
#	WARNING - security is degraded by having this
#	on the same machine as the primary GForge
#
<VirtualHost 192.168.1.1>
  ServerName projects.gforge.company.com
  ServerAlias *.gforge.company.com
  DocumentRoot /var/www/homedirs/groups
  VirtualDocumentRoot /var/www/homedirs/groups/%1
  <Directory /var/www/homedirs/groups>
    Options Indexes
#
#	WARNING - turning on php will allow any user
#	to upload a php file to your server, and include 
#	the gforge local.inc file and get your password to 
#	connect to the database and have total control.
#
    php_flag engine off
    AllowOverride None
    order allow,deny
    allow from all
  </Directory>
  DirectoryIndex index.html index.htm
</VirtualHost>
]]></programlisting>
		      </section>
		</section>
		<section>
			<title>Configuring Mail Transport Agent (Any)</title>
			<para>
				Add the following line to <filename>/etc/aliases</filename> and run <command>newaliases</command>:
			</para>
<programlisting>
noreply: /dev/null
</programlisting>
		</section>
		<section>
			<title>File Release System (FRS)</title>
			<para>
				Create a directory (e.g. <filename class="directory">/var/lib/gforge/download</filename>) and make it owned by the webserver user (e.g. <literal>apache</literal>). Usually <command>chown -R apache:apache /var/lib/gforge/download</command> will do the trick.  This directory will be referenced in the GForge Config File <filename>/etc/gforge/local.inc</filename> as <varname>$sys_upload_dir</varname>.
			</para>
		</section>
		<section>
			<title>Configuring GNU Mailman</title>
			<para>GNU Mailman is used to help manage the GForge mailing lists.  Mailman is frequently installed in <filename class="directory">/var/mailman/</filename> and the sample vhost shown below will work with this setup without any changes.</para>
			<para>Cronjobs for Mailman are located in <filename>cronjobs/mail/*</filename>.</para>
			<para><filename>cronjobs/mail/mailing_lists_create.php</filename> is used obviously to create new mailing lists. You may have to edit the file to change the location of the mailman <filename class="directory">bin/</filename> directory.</para>
			<para>For all problems with mailman installation and use, contact the mailman mailing lists for help.</para>
			<para>To install it:</para>
			<orderedlist>
				<listitem>
					<para>Install a GNU Mailman package or compile it</para>
				</listitem>
				<listitem>
					<para><command>su</command> to <literal>root</literal> and set the Mailman password by using the <command>mmsitepass</command> command</para>
				</listitem>
				<listitem>
					<para>Create directory <filename class="directory">/var/www/mailman/</filename>.</para>
				</listitem>
				<listitem>
					<para>Create in <filename>httpd.conf</filename> virtual host for Mailman, adjusting <literal>ScriptAlias</literal> and <literal>Alias</literal> directives:</para>
<programlisting><![CDATA[
<VirtualHost 192.168.1.1>
ServerName lists.gforge.company.com
ServerAdmin mailman@lists.gforge.company.com
DocumentRoot /var/www/mailman
DirectoryIndex index.php index.cgi index.html index.htm
ScriptAlias   /mailman/ /var/mailman/cgi-bin/
Alias /pipermail/ /var/mailman/archives/public/
</VirtualHost>
]]></programlisting>
				</listitem>
				<listitem>
					<para>Run the script <filename>gforge/cronjobs/mail/mailing_lists_create.php</filename> (with <command>php -f</command>). This creates any lists that are already in the database.</para>
				</listitem>
			</orderedlist>
		</section>
		<section>
			<title>Cron Jobs</title>
			<para>
				Cron jobs are in the <filename class="directory">cronjobs/</filename> directory and the <filename>README</filename> file contains a sample crontab. This gives you the basic cronjobs for updating certain statistics and data on the site.
			</para>
			<para>
				<filename class="directory">cronjobs/cvs-cron/</filename> contains scripts useful for creating blank cvs trees and managing the <filename>/etc/groups</filename>, <filename>/etc/passwd</filename> and <filename>/etc/shadow</filename> files. See <filename>cronjobs/README.root</filename> for more info.
			</para>
			<para>
				<filename class="directory">cronjobs/mail/</filename> contains files useful for the creation of new mailing lists in mailman and creating the <filename>/etc/aliases</filename> file.
			</para>
			<screen>
# adduser anonymous
# cp /etc/aliases /etc/aliases.org
# cp /etc/shadow /etc/shadow.org
# cp /etc/passwd /etc/passwd.org
# cp /etc/group /etc/group.org
</screen>
			<warning>
				<para>
					The following command will blow away any existing root crontab:
				</para>
			</warning>
			<screen>
# crontab cronjobs/crontab.in
</screen>
			<para>Now edit the paths to the cron scripts by setting the value of <varname>GFORGE</varname> and <varname>PHP</varname> variables:</para>
			<screen>
# crontab -e
</screen>
			<caution>
				<para>
					The <filename>cronjobs/cvs-cron/usergroup.php</filename> cron script will meddle with your <filename>/etc/passwd</filename>, <filename>/etc/group</filename>, and <filename>/etc/shadow</filename> files. By default, this cron will save these files with a <literal>.new</literal> extension. You will have to edit the cron script to remove the <literal>.new</literal> extension, but you must make sure that it is properly generating your files or your server could be unusable.
				</para>
			</caution>
		</section>
		<section>
			<title>Verifying the Installation</title>
			<para>To verify if everything was installed correctly, use the browser and connect to GForge. You should see the GForge homepage.</para>
			<note>
				<para>If you get an <computeroutput>Error: Could Not Connect to Database</computeroutput>, check if you have followed all installation instructions for the database.  Also, you can experiment with making the settings in <filename>pg_hba.conf</filename> a bit more trusting - for example, change the last work of the second line from <literal>md5</literal> to <literal>trust</literal>.</para>
			</note>
		</section>
		<section>
			<title>Creating the Admin User</title>
			<para>Site admins are anyone who is an admin of <literal>group_id</literal>=1.</para>
			<orderedlist>
				<listitem><para>Connect to GForge and register a new account.</para></listitem>
				<listitem><para>Insert a valid email address; this will be used for the account confirmation.</para></listitem>
				<listitem><para>Open your e-mail client, wait for the email from GForge site and follow the link that appears on the message.</para></listitem>
				<listitem>
					<para>Verify in Account Maintenance the user id of the user registered.</para>
					<para>Usually this is 102, but you can verify this by running the following SQL query via the PostgreSQL <command>psql</command> utility:</para>
<screen>
$ psql -U gforge gforge
gforge=> SELECT user_id FROM users WHERE user_name='<replaceable>YOUR USER NAME</replaceable>';
</screen>
				</listitem>
				<listitem>
					<para>Now set up the newly added user to be a GForge administrator:</para>
<screen>
gforge=> INSERT INTO user_group (user_id,group_id,admin_flags) VALUES (102,1,'A');
</screen>
				</listitem>
			</orderedlist>
			<note>
				<para>Once you have set up this user as an administrator, you can use GForge web interface to add more administrators.</para>
			</note>
		</section>
		<section>
			<title>Optional Features</title>
			<section>
				<title>JPGraph</title>
				<para>PHP must be compiled with <literal>--with-gd</literal>, or appropriate package must be installed.  Extra fonts for JPGraph are not necessary.  Be sure your <filename>/etc/gforge/local.inc</filename> file contains the proper path to the <filename class="directory">jpgraph/src/</filename> directory.</para>
				<para>Manual installation can be done like this:</para>
<screen>
# tar -xzf jpgraph-1.17.tar.gz
# mkdir /var/www/jpgraph
# mv jpgraph-1.17/src/* /var/www/jpgraph
</screen>
				<para>When you get your preferred version of JPGraph installed, you will have to edit one setting in <filename>jpgraph.php</filename>:</para>
				<programlisting>
DEFINE("USE_CACHE", false);
</programlisting>
				<warning>
					<para>Be careful with JPGraph license: versions > 1.5.2 are not free (as in free speech).</para>
				</warning>
			</section>
			<section>
				<title>Perl</title>
				<para>If you want to use some of the Perl scripts that access the database, you'll need the <literal>DBI</literal> and <literal>DBD::Pg</literal> Perl modules.  On Red Hat systems (and variants), you can get them by installing the <literal>libdbi</literal> and <literal>libdbd-pgsql</literal> packages.  On Debian systems (and variants), the packages are called <literal>libdbi-perl</literal> and <literal>libdbd-pg-perl</literal>.</para>
				<para>You'll also need to install <filename>utils/include.pl</filename> to <filename class="directory">/usr/lib/gforge/lib/</filename>, and put some configuration variables into <filename class="directory">/etc/gforge/local.pl</filename>.  In particular, you'll need something like the following in <filename>local.pl</filename>:</para>
				<programlisting>
$sys_default_domain = 'gforge.company.com' ;
$sys_dbhost = '192.168.12.34' ;
$sys_dbname = 'gforge' ;
$sys_dbuser = 'gforge' ;
$sys_dbpasswd = 'p455w0rd' ;
</programlisting>
			</section>
			<section>
				<title>Jabber Support</title>
				<para>GForge supports the sending of messages to jabber accounts. To accomplish this, you must have a user account setup on the jabber server that gforge can connect to and send messages.</para>
				<para>Once you have that user account, server, and password set up, just edit <filename>/etc/gforge/local.inc</filename> and add the information to the jabber section.</para>
			</section>
			<section>
				<title>Peer Ratings</title>
				<para>Add yourself, and any others you wish, to the <quote>Peer Ratings</quote> project, which should be at <literal>/projects/peerrating/</literal> on the website. Make yourself an admininistrator of the project, and then proceed to <quote>rate</quote> other users on the website.</para>
				<para>Members of the <quote>Peer Ratings</quote> project, who are administrator of the project, become the first trusted users. This is the only way to prime the pump for the peer ratings system.</para>
			</section>
		</section>
	</section>
	<section>
		<title>Plugins</title>
		<note>
			<para>From GForge 4.0, plugins are necessary as source code management is now provided by plugins (SCM* plugins).</para>
		</note>
		<para>For each plugin you can find an <filename>INSTALL</filename> file in the plugin tarball.</para>
		<section>
			<title>CVS</title>
			<section>
				<title>Overview</title>
				<para>CVS is now managed via the scmcvs plugin which is included in the <filename class="directory">plugins/</filename> directory in the tarball downloaded from gforge.org. Most of the files in scmcvs are intended for auto-installation on Debian systems and <emphasis role="strong">do not apply</emphasis> to the majority of users. The scmcvs plugin is activated by default in the <filename>gforge.sql</filename> database and all that you have to do is move the <filename>scmcvs/etc/plugins/*</filename> files to <filename>/etc/gforge/plugins/*</filename> and possibly modify the files slightly. In addition, the <filename>scmcvs/www/*</filename> files should be placed in <filename>gforge/www/plugins/scmcvs/*</filename>.</para>
				<para>Cronjobs for CVS are included in <filename>cronjobs/crontab.in</filename>, but are commented out by default for your security. <filename>cronjobs/cvs-cron/*</filename> contains the files that are executed hourly to build permissions and create blank cvs trees. Make sure these files are executed as root, and have proper execution bits set.  Each of these cronjobs has configuration parameters which you may have to edit manually for your specific system.</para>
			</section>
			<section>
				<title>Installation</title>
<programlisting>
#Create default location for CVS repositories
mkdir /cvsroot

# Optional - Set up basic index.php file for CVS vhost if desired
mkdir /var/www/cvs
cp <replaceable>/var/www/gforge</replaceable>/cronjobs/cvs-cron/www/* /var/www/cvs/

#copy the scmcvs plugin config to /etc/gforge/
cp -R <replaceable>/var/www/gforge</replaceable>/plugins/scmcvs/etc/plugins/ /etc/gforge/

#make sure the cvs crons are executable
cd <replaceable>/var/www/gforge</replaceable>/cronjobs/cvs-cron/
chmod 755 *.php *.sh
</programlisting>
				<para>You will likely have to edit <filename>/etc/gforge/plugins/scmcvs/cvsweb.conf</filename> to change the cvsroot location:</para>
<screen>
'gforge'  => ['GForge-CVS',       '/home/chroot/cvsroot/'],
</screen>
			</section>
			<section>
				<title>Configuring CVS</title>
				<note>
					<para>Since GForge 4.0, CVS is integrated by plugin.  Look at the plugins section below for more information.</para>
				</note>
				<para>GForge uses CVS via <literal>pserver</literal> for anonymous read only access and <literal>ext</literal> for developers to commit to the repositories.  To set it up:</para>
				<para>Download and install the latest CVS package for your distribution.</para>
				<para>Ensure the following info is in <filename>/etc/services</filename>:</para>
				<screen>
$ grep cvspserver /etc/services
cvspserver      2401/tcp                        # CVS client/server operations
cvspserver      2401/udp                        # CVS client/server operations
</screen>
				<para>Ensure the following info is in <filename>/etc/xinetd.d/cvspserver</filename> (if it doesn't exist, create a new file with the following text to enable anonymous access):</para>
<programlisting>
service cvspserver
{
        disable = no
        socket_type  = stream
        protocol  = tcp
        wait   = no
        user    = root
        server   = /usr/bin/cvs
        server_args  = -f --allow-root=/path/to/my/cvsroot pserver
}
</programlisting>
				<para>Now add an <literal>anonymous</literal> user to your system with a blank password, or one of <literal>anonymous</literal></para>
			</section>
			<section>
				<title>Configuring CVSWeb</title>
				<note>
					<para>Since GForge 4.0, a specific version of CVSWeb is bundled in GForge SCM CVS plugin. You don't need to install CVSWeb anymore.</para>
					<para>The following instructions are for GForge &lt; 4.0.</para>
				</note>
				<para>
				You can download the latest official CVSWeb release from <ulink url="http://www.freebsd.org/projects/cvsweb.html"/> but you should consider using the one bundled in GForge SCMCVS plugin.
			</para>
				<para>Copy the tar.gz file into a tmp directory and unzip it:</para>
				<screen>
tar -zxvf cvsweb.tar.gz
</screen>
				<para>CVSWeb consists of a Perl script (<filename>cvsweb.cgi</filename>), a configuration file (<filename>cvsweb.conf</filename>), and some icons (<filename>back.gif</filename>, <filename>dir.gif</filename>, etc).</para>
				<itemizedlist>
					<listitem><para>Copy the <filename>cvsweb.cgi</filename> script into Apache's <filename class="directory">cgi-bin</filename> directory</para></listitem>
					<listitem><para>Copy the <filename>cvsweb.conf</filename> file into Apache's configuration directory (such as <filename class="directory">/etc/httpd/conf.d/</filename> on RedHat 9)</para></listitem>
					<listitem><para>Edit <filename>cvsweb.conf</filename></para></listitem>
					<listitem><para>Change <varname>%CVSROOT</varname> hash to include your repositories - note you'll need to have created a repository first, of course.</para></listitem>
					<listitem><para>Change the <varname>$cvstreedefault</varname> variable to point to a default repository</para></listitem>
					<listitem><para>With GForge specific CVSWeb, you don't need to add manually projects' repositories.</para></listitem>
					<listitem><para>Edit <filename>cvsweb.cgi</filename></para></listitem>
					<listitem><para>Change the <varname>$config</varname> variable to point the <filename>cvsweb.conf</filename> file</para></listitem>
					<listitem><para>Change the <varname>$PATH</varname> variable in <filename>cvsweb.conf</filename> to point to the directory that contains <command>rlog</command></para></listitem>
				</itemizedlist>
				<para>Possible problems:</para>
				<itemizedlist>
					<listitem>
						<para><computeroutput>Error: Configuration not found</computeroutput> - edit <filename>cvsweb.cgi</filename> and point <varname>$config</varname> to the <filename>cvsweb.conf</filename> file</para>
					</listitem>
					<listitem>
						<para><computeroutput>Error: Failed to spawn GNU rlog</computeroutput> - ensure <command>rlog</command> is in the directory pointed to by <varname>$ENV{'PATH'}</varname></para>
					</listitem>
				</itemizedlist>
				<para>Create in <filename>httpd.conf</filename> virtual host for viewing of CVSWeb:</para>
<programlisting><![CDATA[
<VirtualHost 192.168.1.1>
ServerName cvs.gforge.company.com
ServerAdmin webmaster@cvs.gforge.company.com
DocumentRoot /var/www/cvs
DirectoryIndex index.php cvsweb.cgi index.html index.htm
</VirtualHost>
]]></programlisting>
			</section>
		</section>
		<section>
			<title>SVN</title>
			<section>
				<title>Overview</title>
				<para>SVN is also managed via plugin &ndash; the scmsvn plugin is included and activated by default in GForge. As with scmcvs, you have to move the <filename>scmcvs/etc/plugins/*</filename> files to <filename>/etc/gforge/plugins/*</filename> and may have to make minor modifications for your specific setup.</para>
				<para>There are two ways to manage SVN &ndash; one is to have SVN over DAV and the other is to have SVN over SSH just as you do with CVS. If you choose to use DAV, you will need the <filename class="libraryfile">mod_auth_gforge</filename> library compiled and installed in your apache and the appropriate virtual host settings in your <filename>httpd.conf</filename>. <filename class="libraryfile">mod_auth_gforge</filename> is available from gforge.org. The cronjobs to manage SVN are in <filename class="directory">cronjobs/dav-svn/</filename> and so are sample <filename>httpd.conf</filename> virtual host settings. Each of these cronjobs has configuration parameters which you may have to edit manually for your specific system.</para>
				<para>Configuring svnserv for svn-over-ssh:
					<itemizedlist>
						<listitem>
							<para><ulink url="http://svnbook.red-bean.com/en/1.0/ch06s03.html" /></para>
						</listitem>
						<listitem>
							<para><ulink url="http://www.logemann.org/day/archives/000099.html" /></para>
						</listitem>
						<listitem>
							<para><ulink url="http://bitworking.org/news/Getting_subversion_svn_ssh____to_work_with_PuTTY" /></para>
						</listitem>
					</itemizedlist>
				</para>
			</section>
			<section>
				<title>Installation</title>
<programlisting>
#Create default location for SVN repositories
mkdir /var/svn

# Optional - Set up some basic files for SVN-over-DAV only
mkdir /var/www/svn
cp <replaceable>/var/www/gforge</replaceable>/cronjobs/dav-svn/www/* /var/www/svn/

#copy the scmsvn config files to /etc/gforge/
cp -R gforge/plugins/scmsvn/etc/plugins/scmsvn/ /etc/gforge/plugins/
</programlisting>
			</section>
		</section>
		<section>
			<title>CVSTracker Overview</title>
			<para>The cvstracker plugin allows for some integration between CVS commits and the bug tracker and task manager. So, for example, when you commit, you can reference bug and task IDs in your commit message and have the commit linked to the corresponding bug and task.</para>
			<para>See the <filename>plugins/cvstracker/README</filename> file for details. This plugin is enabled by default in the <filename>gforge.sql</filename> database file. As with the other plugins, you may manually place the config files in <filename class="directory">/etc/gforge/plugins/cvstracker/</filename> and uncomment the cronjob in <filename>crontab.in</filename>.</para>
			<para>You will also have to copy the <filename>newcommit.php</filename> file to your gforge <filename class="directory">www/plugins/cvstracker/</filename> dir</para>
		</section>
		<section>
			<title>Installation</title>
<programlisting>
#copy the cvstracker config files to /etc/gforge/
cd <replaceable>/var/www/gforge</replaceable>/plugins/cvstracker/
cp -R etc/plugins/cvstracker/ /etc/gforge/plugins/
cp -R www/ <replaceable>/var/www/gforge</replaceable>/www/plugins/cvstracker/
</programlisting>
		</section>
	</section>
	<section>
		<title>Upgrading Existing Install</title>
		<para>You will upgrade your database from a prior version by applying each database schema change, in order, and applying it only once.  Only apply the schema changes in the <filename class="directory">db/</filename> folder that are dated <emphasis>after</emphasis> your existing installation.</para>
		<para>There may also be migration scripts that have to be run.  In the <filename class="directory">db/</filename> folder, look for php scripts and run them.</para>
		<warning>
			<para>You have to apply database schema changes and to run migration scripts in the right order.</para>
		</warning>
	</section>
	<section>
		<title>Most Common Problems</title>
		<para>Q: I get a blank page when I visit http://gforge.company.com/</para>
		<para>A: Most often you are missing the php-pgsql library that lets PHP talk to the postgres database. Find a php-pgsql RPM or recompile php to have pgql support.</para>
		<para>If you're sure you have php-pgsql support, you can edit common/include/database.php and remove the @ symbol from this line:</para>
<programlisting>
$conn = @pg_connect( 
</programlisting>
		<para>So that it looks like:</para>
<programlisting>
$conn = pg_connect(
</programlisting>
		<para>This will let debug output dump to the screen and may let you find the problem. Search the forums for more solutions.</para>

		<para>Q: <quote>Error Occurred In the Logger</quote> or other database permission problems</para>
		<para>A: As stated in the installation instructions, the database must be created, owned, and accessed by the gforge user. This user is the only one who will have total acess to all the tables. Any other user would have to be specifically granted permissions with the GRANT commands in postgres.</para>

		<para>Q: Reporting or time tracking doesn't work</para>

		<para>A: Go to the reporting tab and scroll down so you can choose <quote>Initialize/Rebuild Reporting Tables</quote></para>

		<para>You may also be missing GD support or be missing JPGraph or have it installed improperly. The <filename class="directory">jpgraph/src/</filename> directory should be specified accurately in your <filename class="directory">local.inc</filename> file, and you should include a <filename>/</filename> at the end of the path specified. In addition, you should modify <filename>jpgraph.php</filename> to set <literal>USE_CACHE=false</literal>.</para>

		<para>Q: How do I upgrade my database?</para>
		<para>A: As stated above, you must apply the changes that are listed in date order in the <filename class="directory">db/</filename> directory to your database. Only the changes that are not already in your old <filename class="directory">db/</filename> directory should be applied, and they should be applied and checked <emphasis>in order</emphasis>.</para>

		<para>Q: I'm getting an error about BaseLanguage.class not being found.</para>
		<para>A: Make sure your localization path is correctly specified in the local.inc file and that it is readable <emphasis>and</emphasis> writable by the apache user.</para>

		<para>Q: When I click on <quote>/projects/</quote> or <quote>/users/</quote> links, I get the source code instead of the page I expected.</para>
		<para>A: As shown in the example <filename>httpd.conf</filename> files above, you may have to switch to using the <literal>&lt;Files&gt;</literal> or <literal>&lt;Location&gt;</literal> directives depending on your server version.</para>

		<para>Q: How do I backup GForge?</para>
		<para>A: The only proper way to backup the gforge database is with <command>pg_dump</command>.  Any attempt to backup the filesystem while pgsql is running will result in a useless and corrupt backup. You can backup CVS trees using <command>tar</command> as long as they are not actively and heavily used during the backup. Mailman and the FRS uploads dir can also be backed up with <command>tar</command>.</para>

		<para>Q: Any time i enter an apostrophe in a text box, i get a parse error</para>
		<para>A: As stated in the instructions above, you should have <literal>magic_quotes_gpc=On</literal> in your <filename>php.ini</filename> file.</para>

		<para>Q: Large uploads into FRS or the doc manager fail.</para>
		<para>A: Apache and the <filename>php.ini</filename> file need to have upload limits and possibly memory limits increased.</para>
	</section>

</article>
