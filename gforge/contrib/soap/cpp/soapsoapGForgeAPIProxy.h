/* soapsoapGForgeAPIProxy.h
   Generated by gSOAP 2.3 rev 1 from SoapAPI.h
   Copyright (C) 2001-2003 Genivia inc.
   All Rights Reserved.
*/

#ifndef soapsoapGForgeAPI_H
#define soapsoapGForgeAPI_H
#include "soapH.h"
SOAP_BEGIN_NAMESPACE(soap)
class soapGForgeAPI
{   public:
	struct soap *soap;
	const char *endpoint;
	soapGForgeAPI() { soap = soap_new(); endpoint = "http://cougaar.org/soap/SoapAPI.php"; };
	~soapGForgeAPI() { if (soap) { soap_destroy(soap); soap_end(soap); soap_done(soap); SOAP_FREE((void*)soap); } };
	int user(char *func, tns__ArrayOfstring *params, tns__userResponse *out) { return soap ? soap_call_tns__user(soap, endpoint, NULL, func, params, out) : SOAP_EOM; };
	int logout(tns__logoutResponse *out) { return soap ? soap_call_tns__logout(soap, endpoint, NULL, out) : SOAP_EOM; };
	int hello(char *parm, tns__helloResponse *out) { return soap ? soap_call_tns__hello(soap, endpoint, NULL, parm, out) : SOAP_EOM; };
	int getNumberOfActiveUsers(tns__getNumberOfActiveUsersResponse *out) { return soap ? soap_call_tns__getNumberOfActiveUsers(soap, endpoint, NULL, out) : SOAP_EOM; };
	int bugList(char *sessionkey, char *project, tns__bugListResponse *out) { return soap ? soap_call_tns__bugList(soap, endpoint, NULL, sessionkey, project, out) : SOAP_EOM; };
	int bugUpdate(char *sessionkey, char *project, char *bugid, char *comment, tns__bugUpdateResponse *out) { return soap ? soap_call_tns__bugUpdate(soap, endpoint, NULL, sessionkey, project, bugid, comment, out) : SOAP_EOM; };
	int group(char *func, tns__ArrayOfstring *params, tns__groupResponse *out) { return soap ? soap_call_tns__group(soap, endpoint, NULL, func, params, out) : SOAP_EOM; };
	int getPublicProjectNames(tns__getPublicProjectNamesResponse *out) { return soap ? soap_call_tns__getPublicProjectNames(soap, endpoint, NULL, out) : SOAP_EOM; };
	int getSiteStats(tns__getSiteStatsResponse *out) { return soap ? soap_call_tns__getSiteStats(soap, endpoint, NULL, out) : SOAP_EOM; };
	int login(char *userid, char *passwd, tns__loginResponse *out) { return soap ? soap_call_tns__login(soap, endpoint, NULL, userid, passwd, out) : SOAP_EOM; };
	int bugAdd(char *sessionkey, char *project, char *summary, char *details, tns__bugAddResponse *out) { return soap ? soap_call_tns__bugAdd(soap, endpoint, NULL, sessionkey, project, summary, details, out) : SOAP_EOM; };
	int getNumberOfHostedProjects(tns__getNumberOfHostedProjectsResponse *out) { return soap ? soap_call_tns__getNumberOfHostedProjects(soap, endpoint, NULL, out) : SOAP_EOM; };
	int bugFetch(char *sessionkey, char *project, char *bugid, tns__bugFetchResponse *out) { return soap ? soap_call_tns__bugFetch(soap, endpoint, NULL, sessionkey, project, bugid, out) : SOAP_EOM; };
};
SOAP_END_NAMESPACE(soap)
#endif
