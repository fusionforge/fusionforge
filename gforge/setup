#! /bin/sh

usage() {
	echo "$0: [-interact] [-help] [-debug] [-confdir confdir] [-input conffile] [-output conffile] [-httpdconf gforgehttpdconf] [-httpdsecrets gforgehttpdsecrets] [-localinc gforgelocalinc] [-example|-fhs] [-clean] [-noapache] [-dovhost] [-home homepath] [-group grouppath]"
}

getval(){
	echo -n $1 \[$2\] ?
	read $1
}

computedefault(){
	echo "Calculating defaults"
	# This is used to make a default working gforge.conf
	DEFAULTsystem_name=MyGForge
	DEFAULTdomain_name=`hostname -f`
	DEFAULTserver_admin=webmaster@$DEFAULTdomain_name
	DEFAULTdb_host=`hostname -i`
	DEFAULTdb_name=gforge
	DEFAULTdb_user=gforge
	DEFAULTdb_password=$(dd if=/dev/urandom count=256 bs=1 2> /dev/null | md5sum | cut -b1-8)
	DEFAULTip_address=`hostname -i`
	DEFAULTcvs_host=cvs.$DEFAULTdomain_name
	DEFAULTshell_host=shell.$DEFAULTdomain_name
	DEFAULTusers_host=users.$DEFAULTdomain_name
	DEFAULTlists_host=lists.$DEFAULTdomain_name
	DEFAULTdocs_host=gfdocs.$DEFAULTdomain_name
	DEFAULTjabber_host=jabber.$DEFAULTdomain_name
	DEFAULTdownload_host=download.$DEFAULTdomain_name
	DEFAULTupload_host=upload.$DEFAULTdomain_name
	DEFAULTstatsadmin_groupid=2
	DEFAULTnewsadmin_groupid=3
	DEFAULTpeerrating_groupid=4
	DEFAULTadmin_login=admin
	DEFAULTadmin_password=$(dd if=/dev/urandom count=256 bs=1 2> /dev/null | md5sum | cut -b1-8)
	DEFAULTskill_list="Ada;C;C++;HTML;LISP;Perl;PHP;Python;SQL"
	DEFAULTdefault_trove_cat=18
	DEFAULTldap_host=localhost
	DEFAULTldap_base_dn="dc=`echo $DEFAULTdomain_name | sed 's/\./,dc=/g'`"
	DEFAULTldap_web_add_password=$(dd if=/dev/urandom count=256 bs=1 2> /dev/null | md5sum | cut -b1-8)
	DEFAULTcgidir=$CGIDIR
	DEFAULTcronolog_path=`which cronolog || echo /usr/sbin/cronolog`
	DEFAULTsys_path_to_jpgraph=/usr/share/jpgraph/
	DEFAULTsys_path_to_cvsweb=/usr/lib/gforge/bin/
	DEFAULTgforge_chroot=$CHROOT
	DEFAULTgforge_etc=$ETCDIR
	DEFAULTsys_custom_path=$ETCDIR/custom
	DEFAULTgroupdir=$GROUPPATH
	DEFAULThomedir=$HOMEPATH
	DEFAULTuploaddir=$GFGDIR/var/lib/gforge/download/
	DEFAULTsys_jabber_pass=$(dd if=/dev/urandom count=256 bs=1 2> /dev/null | md5sum | cut -b1-8)
	DEFAULTusr_share_gforge=$SHAREDIR
	DEFAULTvar_lib_gforge=$GFGDIR/var/lib/gforge
	DEFAULTvar_log_gforge=$GFGDIR/var/log/gforge
	DEFAULTsys_show_source=0
	DEFAULTsys_force_login=0
	DEFAULTsys_session_key=$(dd if=/dev/urandom count=256 bs=1 2> /dev/null | md5sum | cut -b1-32)
	DEFAULTsys_session_expire="60 * 60 * 24 * 7"
	DEFAULTsys_theme=gforge
	DEFAULTsys_default_theme_id=1
	DEFAULTsys_lang=English
	DEFAULTsys_default_timezone=GMT
	DEFAULTsys_default_country_code=US
	DEFAULTsys_use_ldap=0
	DEFAULTsys_use_jabber=0
	DEFAULTsys_use_auth_ldap=1
	DEFAULTsys_ldap_auth_host=localhost
	DEFAULTsys_ldap_auth_port=389
	DEFAULTsys_ldap_auth_version=3
	DEFAULTsys_ldap_auth_dn="dc=`echo $DEFAULTdomain_name | sed 's/\./,dc=/g'`"
	DEFAULTsys_cvs_tarballs_path=$GFGDIR/var/lib/gforge/cvstarballs
	DEFAULTsys_use_cvs=true
	DEFAULTsys_use_tracker=true
	DEFAULTsys_use_forum=true
	DEFAULTsys_use_pm=true
	DEFAULTsys_use_docman=true
	DEFAULTsys_use_news=true
	DEFAULTsys_use_mail=true
	DEFAULTsys_use_survey=true
	DEFAULTsys_use_frs=true
	DEFAULTsys_use_ftp=true
	DEFAULTsys_use_trove=true
	DEFAULTsys_use_snippet=true
	DEFAULTsys_use_ssl=false
	DEFAULTsys_use_people=true
	DEFAULTsys_use_project_vhost=true
	DEFAULTsys_use_project_database=false
	DEFAULTsys_use_project_multimedia=false
	DEFAULTsys_project_reg_restricted=true
	DEFAULTsys_localization_enable_caching=true
	DEFAULTsys_localization_cache_path=$GFGDIR/var/cache/gforge/
	DEFAULTsys_localization_enable_timestamp_checking=true
	DEFAULTsys_localinc=$ETCDIR/local.inc
	DEFAULTsys_jabber_pass=$(dd if=/dev/urandom count=256 bs=1 2> /dev/null | md5sum | cut -b1-8)
	#
	# TODO
	#usr_lib_gforge=$GFGDIR
	#vhost_name
	#docdir
}

writedefault(){
	# Here is the fun
	# This create a default conf file in $1 
	tmpfile=$1.$$computedefault
	echo "cat >$1<<-EOF" > $tmpfile
	cat $0 | grep "^	DEFAULT" | sed 's/	DEFAULT\(.[^=]*\)=.*/\1=\${DEFAULT\1}/' >> $tmpfile
	echo 'EOF' >> $tmpfile
	. $tmpfile
	rm -f $tmpfile
}

readdefault() {
	cat $1 | sed 's/\(.[^=]*\)=\(.*\)/DEFAULT\1="\2"/' > $1.$$readdefault
	. $1.$$readdefault
	rm -f $1.$$readdefault
}

setupinout(){

	computedefault

	writedefault $CONFFILEIN.new

	if [ -f $CONFFILEIN ]
	then
		echo "Reading defaults from $CONFFILEIN"
		readdefault $CONFFILEIN
	else
		readdefault $CONFFILEIN.new
	fi
	
	if [ "$interact" == true ]
	then
		echo "Enter values or type enter for defaults:"
		# Here is the fun II
		# This ask for change of default
		tmpfile=$1.$$getval
		cat $0 | grep "^	DEFAULT" | sed 's/	DEFAULT\(.[^=]*\)=.*/getval \1 "\${DEFAULT\1}"/' > $tmpfile
	else
		cat $0 | grep "^	DEFAULT" | sed 's/	DEFAULT\(.[^=]*\)=.*/\1="\${DEFAULT\1}"/' > $tmpfile
	fi
	. $tmpfile
	rm -f $tmpfile
	
	echo "Creating $CONFFILEOUT"
	[ ! -d `dirname $CONFFILEOUT` ] && (mkdir -p `dirname $CONFFILEOUT` || (echo "Could not create `dirname $CONFFILEOUT`" && exit 1))
	writedefault $CONFFILEOUT.new
	mv $CONFFILEOUT.new $CONFFILEOUT
	
	
	# Remove trailing space
	cat $CONFFILEIN | sed 's/ *$//' > $CONFFILEIN.new
	mv $CONFFILEIN.new $CONFFILEIN
	
	# Fill in the blanks
	if [ "$dovhost" == true ]
	then
		VHOST=$ETCDIR/httpd.d/55vhost
	fi
	for i in $ETCDIR/httpd.d/[0-4][0-9]* $VHOST $ETCDIR/httpd.d/[6-9][0-9]* $ETCDIR/httpd.d/httpd.secrets
	do
		$BINDIR/fill-in-the-blanks.pl $i $ETCDIR/`basename $i`.gforge-new $CONFFILEOUT
	done
	
	echo "Creating $HTTPDCONF"
	ls $ETCDIR/[0-9][0-9]*.gforge-new | sort | xargs cat > $HTTPDCONF
	rm $ETCDIR/[0-9][0-9]*.gforge-new
	echo "Creating $HTTPDSECRETS"
	cat $ETCDIR/httpd.secrets.gforge-new > $HTTPDSECRETS
	rm $ETCDIR/httpd.secrets.gforge-new
	
	echo "Creating $LOCALINC"
	for i in $ETCDIR/local.d/01* $ETCDIR/local.d/10database.$database $ETCDIR/local.d/[2-9]*
	do
		$BINDIR/fill-in-the-blanks.pl $i $ETCDIR/`basename $i` $CONFFILEOUT
	done
	ls $ETCDIR/01* $ETCDIR/10database.$database $ETCDIR/[2-9]* | sort | xargs cat > $LOCALINC
	rm $ETCDIR/01* $ETCDIR/10database.$database $ETCDIR/[2-9]*

	echo "Creating other includes"
	#for i in $ETCDIR/templates/[a-z]*
	find $ETCDIR/templates -name '[a-z]*' -maxdepth 1 -type f | while read i 
	do
		$BINDIR/fill-in-the-blanks.pl $i $ETCDIR/`basename $i` $CONFFILEOUT
	done
	chmod 600 $HTTPDSECRETS $CONFFILEIN $CONFFILEOUT
	chmod 640 $ETCDIR/local.pl $ETCDIR/database.inc
	chown gforge:gforge $ETCDIR/local.pl $ETCDIR/database.inc
}
	
doapache() {	
	APACHECONF=/etc/apache/httpd.conf
	GFORGE_ETC_SEARCH=$HTTPDCONF
	export GFORGE_ETC_SEARCH
	if [ -f $APACHECONF -a -f $BINDIR/install-apache.sh ] ; then
		if [ ! -f /etc/apache/conf.d/gforge.httpd.conf ] ; then
			if ! grep -q "^Include $GFORGE_ETC_SEARCH" $APACHECONF ; then
				$BINDIR/install-apache.sh setup
			else 
				echo "Found Include $GFORGE_ETC_SEARCH in $APACHECONF"
			fi
		else
			LINK=`ls -l /etc/apache/conf.d/gforge.httpd.conf | sed 's/.*-> \(.*\)$/\1/'`
			if [ "$LINK" != "$GFORGE_ETC_SEARCH" ] ; then
				echo Need to readjust Symlink
				$BINDIR/install-apache.sh setup
			fi
			if ! grep -q "^Include $GFORGE_ETC_SEARCH" $APACHECONF ; then
				echo "Found /etc/apache/conf.d/gforge.httpd.conf"
			else 
				# There is a link and an include
				$BINDIR/install-apache.sh setup
			fi
		fi
	fi
}


ETCDIR=`pwd`/etc
BINDIR=`pwd`/utils
CGIDIR=`pwd`/cgi-bin
GFGDIR=`pwd`
CHROOT=''
HOMEPATH=/home
GROUPPATH=/home/groups
SHAREDIR=`pwd`
CONFFILEIN=$ETCDIR/gforge.conf
CONFFILEOUT=$ETCDIR/gforge.conf
LOCALINC=$ETCDIR/local.inc
HTTPDCONF=$ETCDIR/httpd.conf
HTTPDSECRETS=$ETCDIR/httpd.secrets
export ETCDIR BINDIR GFGDIR CONFFILEIN CONFFILEOUT LOCALINC HTTPDCONF HTTPDSECRETS DOAPACHE
interact=false
noapache=false
database=env
dovhost=false

while [ $# -ne 0 ]
do
	case "$1" in
		-interact )
			interact=true
			;;
		-help )
			usage
			exit 0
			;;
		-httpdsecrets )
			shift
			HTTPDSECRETS=$1
			;;
		-httpdconf )
			shift
			HTTPDCONF=$1
			;;
		-localinc )
			shift
			LOCALINC=$1
			;;
		-input )
			shift
			CONFFILEIN=$1
			;;
		-output )
			shift
			CONFFILEOUT=$1
			;;
		-confdir )
			shift
			CONFFILEIN=$1/gforge.conf
			CONFFILEOUT=$1/gforge.conf
			LOCALINC=$1/local.inc
			HTTPDCONF=$1/httpd.conf
			HTTPDSECRETS=$1/httpd.secrets
			echo Using $1 as config directory
			;;
		-fhs )
			shift
			ETCDIR=/etc/gforge
			BINDIR=/usr/lib/gforge/bin
			CGIDIR=/usr/lib/gforge/cgi-bin
			GFGDIR=''
			HOMEPATH=/home/users
			GROUPPATH=/home/groups
			CHROOT=/var/lib/gforge/chroot
			SHAREDIR=/usr/share/gforge
			CONFFILEIN=/etc/gforge/gforge.conf
			CONFFILEOUT=/etc/gforge/gforge.conf
			LOCALINC=/etc/gforge/local.inc
			HTTPDCONF=/etc/gforge/httpd.conf
			HTTPDSECRETS=/etc/gforge/httpd.secrets
			;;
		-simple )
			database=simple
			;;
		-noapache )
			noapache=true
			;;
		-dovhost )
			dovhost=true
			;;
		-example )
			shift
			CONFFILEIN=$ETCDIR/gforge.conf.example
			CONFFILEOUT=$ETCDIR/gforge.conf.example
			LOCALINC=$ETCDIR/local.inc.example
			HTTPDCONF=$ETCDIR/httpd.conf.example
			HTTPDSECRETS=$ETCDIR/httpd.secrets.example
			database=simple
			noapache=true
			;;
		-home )
			shift
			HOMEPATH=$1
			;;
		-group )
			shift
			GROUPPATH=$1
			;;
		-clean )
			[ -f $CONFFILEIN ] && echo Removing $CONFFILEIN && rm -f $CONFFILEIN
			[ -f $CONFFILEOUT ] && echo Removing $CONFFILEOUT && rm -f $CONFFILEOUT
			[ -f $LOCALINC ] && echo Removing $LOCALINC && rm -f $LOCALINC
			[ -f $HTTPDCONF ] && echo Removing $HTTPDCONF && rm -f $HTTPDCONF
			[ -f $HTTPDSECRETS ] && echo Removing $HTTPDSECRETS && rm -f $HTTPDSECRETS
			exit 0
			;;
		-debug )
			set -x
			;;
		*)
			echo "Bad Parameter"
			usage
			exit 1
			;;
	esac
	shift
done
setupinout
[ "$noapache" != true ] && doapache
