<?php

/**
 * GForge Forum Admin Class
 *
 * Portions Copyright 1999-2001 (c) VA Linux Systems
 * The rest Copyright 2002-2004 (c) GForge Team
 * http://gforge.org/
 *
 * @version   
 *
 * This file is part of GForge.
 *
 * GForge is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * GForge is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GForge; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

/* forum admin class
	by Daniel Perez - 2005
*/

require_once('pre.php');

class ForumAdmin extends Error {
	var $group_id;
	var $p,$g;
	
	/**
	 *  PrintAdminOptions - prints the different administrator option for the forums.
	 *
	 */
	
	function PrintAdminOptions() {
		global $Language,$group_id;
		
		echo '
			<p>
			<a href="index.php?group_id='.$group_id.'&amp;add_forum=1">'.$Language->getText('forum_admin','add_forum').'</a>';
		echo '
			| <a href="attachments.php?action=attach_extensions&group_id=' . $group_id . '">' . $Language->getText('forum_admin','manage_attach_types').'</a><br /></p>';
		
	}
	
	
	/**
	 *  Authorized - returns true if the user is authorized as a forum admin for the group, or false.
	 *
	 *  @param  string	 The group id.
	 */
	
	function Authorized($group_id) {
		if (!$group_id) {
			/*
			Not logged in or insufficient privileges
			*/
			$this->setGroupIdError();
			return false;
		}
		$this->group_id = $group_id;
		$this->g =& group_get_object($group_id);
		if (!$this->g || !is_object($this->g) || $this->g->isError()) {
			$this->setGroupIdError();
			return false;
		}
		
		$this->p =& $this->g->getPermission( session_get_user() );
		if (!$this->p || !is_object($this->p) || $this->p->isError()) {
			$this->setPermissionDeniedError();
			return false;
		}
		return true;
	}
	
	function ForumAdmin() {
		global $group_id;
		$this->group_id = $group_id; 
	}
	
	/**
	 *  AttachTypeManagerAM - AMD for add, modify. it returns the structure with the info of one attach type
	 *
	 *  @param  array	 The values to fill
	 */
	function AttachTypeManagerAM($type) {
		global $Language;

		$output = '
				<table cellpadding="4" cellspacing="0" align="center" border="0" width="90%">
				<tr>
					<td align="center" colspan="2">
							<b>' . $Language->getText('forum_admin_attachs','attachtype') .'  : '  . $type['extension'] . '</b>
					</td></tr>
				<tr valign="top">
					<td>' . $Language->getText('forum_admin_attachs','extension') . '</td>
					<td>
						<table cellpadding="0" cellspacing="0" border="0" width="100%">
							<tr valign="top">
								<td>
									<input type="text" name="type[extension]" value="' . $type['extension'] . '" size="35" tabindex="1" /></td>
							</tr>
						</table>
					</td>
				</tr>
				<tr valign="top">
					<td>' . $Language->getText('forum_admin_attachs','maxfilesize') . ' (bytes)</td>
					<td>
						<table cellpadding="0" cellspacing="0" border="0" width="100%">
							<tr valign="top">
								<td>
									<input type="text" name="type[size]" value="' . $type['size'] . '" size="35" tabindex="1" />
								</td>
							</tr>
						</table>
					</td>
				</tr>
				<tr valign="top">
					<td>' . $Language->getText('forum_admin_attachs','maxwidth') . ' (pixels)
					</td>
					<td>
						<table cellpadding="0" cellspacing="0" border="0" width="100%">
							<tr valign="top">
								<td>
									<input type="text" name="type[width]" value="' . $type['width'] . '" size="35" tabindex="1" />
								</td>
							</tr>
						</table>
					</td>
				</tr>
				<tr valign="top">
					<td>' . $Language->getText('forum_admin_attachs','maxheight') . ' (pixels)
					</td>
					<td>
						<table cellpadding="0" cellspacing="0" border="0" width="100%">
							<tr valign="top">
								<td>
									<input type="text" name="type[height]" value="' . $type['height'] . '" size="35" tabindex="1" />
								</td>
							</tr>
						</table>
					</td>
				</tr>
				<tr valign="top">
					<td>' . $Language->getText('forum_admin_attachs','mimetype_advice') . '</td>
					<td>
						<table cellpadding="0" cellspacing="0" border="0" width="100%">
							<tr valign="top">
								<td>
									<textarea name="type[mimetype]" rows="4" cols="40" wrap="virtual" tabindex="1">' . $type['mimetype'] . '</textarea>
								</td>
							</tr>
						</table>
					</td>
				</tr>
				<tr valign="top">
					<td>' . $Language->getText('forum_admin_attachs','enabled') . '</td>
					<td>
						<table cellpadding="0" cellspacing="0" border="0" width="100%">
							<tr valign="top">
								<td><span style="white-space:nowrap">
									<input type="radio" name="type[enabled]" value="1" tabindex="1" '; if ($type['enabled']) $output.= 'checked="checked"'; $output.= ' />Yes
									<input type="radio" name="type[enabled]" value="0" tabindex="1" '; if (!$type['enabled']) $output.= 'checked="checked"'; $output.= ' />No
									</span>
								</td>
							</tr>
						</table>
					</td>
				</tr>
				<tr>
					<td colspan="2" align="center">
						<input type="submit" tabindex="1" value=" Update " />
						<input type="reset" tabindex="1" value=" Reset  " />
					</td>
				</tr>
				</table>';
		return $output;
	}
	
	
	/**
	 *  ExecuteAction - Executes the action passed as parameter
	 *
	 *  @param  string	 action to execute.
	 */
	function ExecuteAction ($action) {
		global $Language,$HTML;
		if ($action=="attach_extensions") {
			//view the attachment type extensions
			$gid = $this->group_id;
			$types = db_query("SELECT * FROM forum_attachment_type ORDER BY extension");
			$this->PrintAdminOptions();
			
			echo '
			<form action="attachments.php" method="post">
			<input type="hidden" name="action" value="add_newattachtype" />
			<input type="hidden" name="form_key" value="' . form_generate_key() . '">
			<input type="hidden" name="group_id" value="' . getIntFromRequest("group_id") . '" />
			<font size = "-3" color="#FF0000">This applies to every project</font>
				<p>
				<p>
			<script type="text/javascript">
		
			function confirmDel($dir) {
				var agree=confirm("Proceed with deletion? ");
				if (agree) {
					window.location = $dir;
				}
			}
			</script>
			
			';
			$title = array();
			$title[] = $Language->getText('forum_admin_attachs','extension');
			$title[] = $Language->getText('forum_admin_attachs','maxfilesize');
			$title[] = $Language->getText('forum_admin_attachs','maxwidth');
			$title[] = $Language->getText('forum_admin_attachs','maxheight');
			$title[] = $Language->getText('forum_admin_attachs','enabled');
			$title[] = $Language->getText('forum_admin_attachs','actions');
			echo $HTML->listTableTop($title);
			$i = 2;
			while ($onetype = db_fetch_array($types)) {
				$onetype['size'] = $onetype['size'] ? $onetype['size']: $Language->getText('include_html','none');
				switch($onetype['extension']) {
					case 'gif':
					case 'bmp':
					case 'jpg':
					case 'jpeg':
					case 'jpe':
					case 'png':
					case 'psd':
					case 'swf':
					case 'tiff':
					case 'tif':
						$onetype['width'] = $onetype['width'] ? $onetype['width'] : $Language->getText('include_html','none');
						$onetype['height'] = $onetype['height'] ? $onetype['height'] : $Language->getText('include_html','none');
						break;
					default:
						$onetype['width'] = '&nbsp;';
						$onetype['height'] = '&nbsp;';
				}
				$onetype['enabled'] = $onetype['enabled'] ? $Language->getText('survey_edit','yes'): $Language->getText('survey_edit','no');
				echo "
				<tr" . $HTML->boxGetAltRowStyle($i++). ">
					<td><b>$onetype[extension]</b></td>
					<td><center>$onetype[size]</center></td>
					<td><center>$onetype[width]</center></td>
					<td><center>$onetype[height]</center></td>
					<td><center>$onetype[enabled]</center></td>
					<td><div align=\"right\"><a href=\"attachments.php?action=update_attach_type&group_id=$gid&extension=$onetype[extension]\"> Edit </a> | 
						<a href=\"javascript:confirmDel('attachments.php?action=remove_attach_type&group_id=$gid&extension=$onetype[extension]'); \"> Delete</a></div></td>
				</tr>";
			}
			echo $HTML->listTableBottom();
			echo "
			<p>
				<center><input type=\"submit\" value=\"Add new\"></center></td>
			</form>
			";

		}
		if ($action == "update_attach_type") {
			//edit the attach type
			$group_id = getIntFromRequest("group_id");
			$extension = getStringFromRequest("extension");
			
			$this->PrintAdminOptions();
			if ($extension) {
				//output modify form
				$type = db_query("SELECT * FROM forum_attachment_type where extension='$extension'");
				$type = db_fetch_array($type);
				if ($type['mimetype']) {
					$type['mimetype'] = implode("\n", unserialize($type['mimetype']));
				}
				
			}
			echo '
				<form action="attachments.php" method="post">
				<input type="hidden" name="action" value="make_update_attach_type" />
				<input type="hidden" name="extension" value="'. $extension .'" />
				<input type="hidden" name="group_id" value="' . $group_id . '" />
				<input type="hidden" name="form_key" value="' . form_generate_key() . '">
				';
			
			echo $this->AttachTypeManagerAM($type);
		}
		if ($action == "add_newattachtype") {
			//add new attach type form
			$this->PrintAdminOptions();
			echo '
				<form action="attachments.php" method="post">
				<input type="hidden" name="action" value="make_update_attach_type" />
				<input type="hidden" name="group_id" value="' . getIntFromRequest("group_id") . '" />
				<input type="hidden" name="form_key" value="' . form_generate_key() . '">
				';
			
			echo $this->AttachTypeManagerAM($type);
		}
		if ($action == "make_update_attach_type") {
			//actually add/update -> add or update attach type
			global $Language;
			$group_id = getIntFromRequest("group_id");
			$extension = getStringFromRequest("extension");
			$type = getArrayFromRequest('type');
			
			if (!form_key_is_valid(getStringFromRequest('form_key'))) {
				exit_form_double_submit();
			}
			
			$type['extension'] = strtolower($type['extension']);

			if (empty($type['extension'])) {
				form_release_key(getStringFromRequest("form_key"));
				exit_error($Language->getText('people_editprofile','all_fields_required'));
			}

			if ( ($extension) && ($extension != $type['extension'] AND db_numrows($test = db_query("SELECT extension FROM forum_attachment_type WHERE extension = '" . addslashes($type['extension']) . "'")) > 0) ) {
				form_release_key(getStringFromRequest("form_key"));
				exit_error($Language->getText('forum_admin_attachs','extension_exists'));
			}	elseif ( (!$extension) AND db_numrows($test = db_query("SELECT extension FROM forum_attachment_type WHERE extension = '" . addslashes($type['extension']) . "'")) > 0)  {
				form_release_key(getStringFromRequest("form_key"));
				exit_error($Language->getText('forum_admin_attachs','extension_exists'));
			}
			
			if ($type['mimetype']) {
				$mimetype = explode("\n", $type['mimetype']);
				foreach($mimetype AS $index => $value) {
					$mimetype["$index"] = trim($value);
				}
			}	else {
				$mimetype = array('Content-type: unknown/unknown');
			}
			
			$type['mimetype'] = serialize($mimetype);

			if ($extension) {
				//update
				$sql = "UPDATE forum_attachment_type SET extension='" . $type['extension'] . "' , size='" . $type['size'] . "' , height='" . $type['height'] . "' , width='" . $type['width'] . "' , mimetype='" . addslashes($type['mimetype']) . "' , enabled='" . $type['enabled'] . "' where extension='$extension'";
				$res = db_query($sql);
				$this->PrintAdminOptions();
				if (!$res) {
					echo db_error();
					echo "<p><p><h3 style=\"color:red\">" . $Language->getText('forum_admin_attachs','updatenot_ok') . "</h3>";
				}	else {
					echo "<p><p><h3 style=\"color:red\">" . $Language->getText('forum_admin_attachs','updateok') . "</h3>";
				}
				
				
			}	else {
				//add new one
				$sql = "
					INSERT INTO forum_attachment_type (extension, size, height, width, mimetype, enabled)
					VALUES
						('" . addslashes($type['extension']) . "', " . intval($type['size']) . ", " . intval($type['height']) . ", " . intval($type['width']) . ", '" . addslashes($type['mimetype']) . "', " . intval($type['enabled']) . " )";
				$res = db_query($sql);
				$this->PrintAdminOptions();
				if (!$res) {
					echo db_error();
					echo "<p><p><h3 style=\"color:red\">" . $Language->getText('forum_admin_attachs','updatenot_ok') . "</h3>";
				}	else {
					echo "<p><p><h3 style=\"color:red\">" . $Language->getText('forum_admin_attachs','updateok') . "</h3>";
				}
				
			}
		}
		if ($action == "remove_attach_type") {
			//delete attachment type
			$extension = getStringFromRequest("extension");
			
			$sql = "DELETE from forum_attachment_type WHERE extension='" . $extension . "'";
			$res = db_query($sql);
			$this->PrintAdminOptions();
			if (!$res) {
				echo db_error();
				echo "<p><p><h3 style=\"color:red\">" . $Language->getText('forum_admin_attachs','deletenot_ok') . "</h3>";
			}	else {
				echo "<p><p><h3 style=\"color:red\">" . $Language->getText('forum_admin_attachs','deleteok') . "</h3>";
			}
			
		}
	}
	
}

?>