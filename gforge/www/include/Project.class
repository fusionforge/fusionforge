<?php

//
// SourceForge: Breaking Down the Barriers to Open Source Development
// Copyright 1999-2000 (c) The SourceForge Crew
// http://sourceforge.net
//
// $Id: Project.class,v 1.21 2000/11/03 19:03:35 tperdue Exp $


/*

	An object wrapper for project (as opposed to foundry) data

	Extends the base object, Group

	Tim Perdue, August 28, 2000



	Example of proper use:

	//get a local handle for the object
	$grp=project_get_object($group_id);

	//now use the object to get the unix_name for the project
	$grp->getUnixName();


*/



/*
	associative array of group objects
	helps prevent the same object from being created more than once
	which would create unnecessary database calls
*/

function &project_get_object($group_id) {
	return group_get_object($group_id);
}

class Project extends Group {

	var $project_data_array;

	/*
		basically just call the parent to set up everything
	*/
	function Project($id,$res=false) {
		//echo "\n\nRows: ".db_numrows($res);
		$this->Group($id,$res);

		//for right now, just point our prefs array at Group's data array
		//this will change later when we split the project_data table off from groups table
		$this->project_data_array=$this->data_array;
	}


	function usesCVS() {
		return $this->project_data_array['use_cvs'];
	}

	function usesBugs() {
		return $this->project_data_array['use_bugs'];
	}

	function usesBugDependencies() {
		return $this->project_data_array['use_bug_depend_box'];
	}

	function usesSupport() {
		return $this->project_data_array['use_support'];
	}

	function usesPatch() {
		return $this->project_data_array['use_patch'];
	}

	function usesPm() {
		return $this->project_data_array['use_pm'];
	}

	function usesPmDependencies() {
		return $this->project_data_array['use_pm_depend_box'];
	}


	/*
		email address to send new 
		bugs/patches/support requests to
	*/
	function getNewBugAddress() {
		return $this->project_data_array['new_bug_address'];
	}

	function getNewSupportAddress() {
		return $this->project_data_array['new_support_address'];
	}

	function getNewPatchAddress() {
		return $this->project_data_array['new_patch_address'];
	}

	function getNewTaskAddress() {
		return $this->project_data_array['new_task_address'];
	}


	/*

		boolean flags to determine whether or not to send
		an email on every bug/patch/support update

	*/
	function sendAllBugUpdates() {
		return $this->project_data_array['send_all_bugs'];
	}

	function sendAllSupportUpdates() {
		return $this->project_data_array['send_all_support'];
	}

	function sendAllPatchUpdates() {
		return $this->project_data_array['send_all_patches'];
	}

	function sendAllTaskUpdates() {
		return $this->project_data_array['send_all_tasks'];
	}


	/*

		Project-specific permissions in addition 
		to those inherited from Group

	*/

	function userIsBugAdmin() {
		return $this->userIsMember('bug_flags',2);
	}
	function userIsSupportAdmin() {
		return $this->userIsMember('support_flags',2);
	}
	function userIsPatchAdmin() {
		return $this->userIsMember('patch_flags',2);
	}
	function userIsPMAdmin() {
		return $this->userIsMember('project_flags',2);
	}
}

/*

	Everything below here is deprecated

*/

//deprecated
function group_getname ($group_id = 0) {
	$grp = &group_get_object($group_id);
	return $grp->getPublicName();
}

//deprecated
function group_getunixname ($group_id) {
	$grp = &group_get_object($group_id);
	return $grp->getUnixName();
}

//deprecated - should be getting objects instead
function &group_get_result($group_id=0) {
	$grp = &group_get_object($group_id);
	return $grp->getData();
}       
	
?>
