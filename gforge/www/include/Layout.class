<?php
/**
 * Base layout class.
 *
 * Extends the basic Error class to add HTML functions
 * for displaying all site dependent HTML, while allowing
 * extendibility/overriding by themes via the Theme class.
 *
 * Make sure browser.php is included _before_ you create an instance of this object.
 *
 * Geoffrey Herteg, August 29, 2000
 *
 * @version   $Id$
 */

class Layout extends Error {

	/**
	 * The default main page content
	 */
	var $rootindex = "index_std.php";

	/**
	 * The root location for images
	 *
	 * @var		string	$imgroot
	 */
	var $imgroot = '/themes/gforge/images/';
	var $COLOR_CONTENT_BACK= 'ffffff';
	var $COLOR_LTBACK1= '#eeeeef';
	var $COLOR_LTBACK2= '#fafafa';
	var $COLOR_HTMLBOX_TITLE = '#d5d5d7';
	var $COLOR_HTMLBOX_BACK = '#eaecef';
	var $FONT_CONTENT = 'helvetica';
	var $FONT_HTMLBOX_TITLE = 'helvetica';
	var $FONTCOLOR_HTMLBOX_TITLE = '#333333';
	var $FONTCOLOR_CONTENT = '#333333';
	var $FONTSIZE = 'small';
	var $FONTSIZE_SMALLER='x-small';
	var $FONTSIZE_SMALLEST='xx-small';
	var $FONTSIZE_HTMLBOX_TITLE = 'small';
	var $bgpri = array();

	/**
	 * Layout() - Constructor
	 */
	function Layout() {
		GLOBAL $bgpri;
		// Constructor for parent class...
		$this->Error();

		/*
		Set up the priority color array one time only
		*/
		$bgpri[1] = '#dadada';
		$bgpri[2] = '#dad0d0';
		$bgpri[3] = '#dacaca';
		$bgpri[4] = '#dac0c0';
		$bgpri[5] = '#dababa';
		$bgpri[6] = '#dab0b0';
		$bgpri[7] = '#daaaaa';
		$bgpri[8] = '#da9090';
		$bgpri[9] = '#da8a8a';

		//determine font for this platform
		if (browser_is_windows() && browser_is_ie()) {

			//ie needs smaller fonts
			$this->FONTSIZE='x-small';
			$this->FONTSIZE_SMALLER='xx-small';
			$this->FONTSIZE_SMALLEST='7pt';

		} else if (browser_is_windows()) {

			//netscape on wintel
			$this->FONTSIZE='small';
			$this->FONTSIZE_SMALLER='x-small';
			$this->FONTSIZE_SMALLEST='x-small';

		} else if (browser_is_mac()){

			//mac users need bigger fonts
			$this->FONTSIZE='medium';
			$this->FONTSIZE_SMALLER='small';
			$this->FONTSIZE_SMALLEST='x-small';

		} else {

			//linux and other users
			$this->FONTSIZE='small';
			$this->FONTSIZE_SMALLER='x-small';
			$this->FONTSIZE_SMALLEST='xx-small';

		}

		$this->FONTSIZE_HTMLBOX_TITLE = $this->FONTSIZE;
	}

	/**
	 *	header() - "steel theme" top of page
	 *
	 * @param	array	Header parameters array
	 */
	function header($params) {
		global $Language;

		if (!$params['title']) {
			$params['title'] =  $GLOBALS['sys_name'];
		} else {
			$params['title'] =  $GLOBALS['sys_name'] . ":" . $params['title'];
		}
		print '<?xml version="1.0" encoding="' . $Language->getEncoding(). '"?>';
		?>

<!DOCTYPE html
	PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="<?php echo $Language->getLanguageCode(); ?>">

  <head>
	<meta http-equiv="Content-Type" content="text/html; charset=<?php echo $Language->getEncoding(); ?>" />
	<title><?php echo $params['title']; ?></title>
	<script language="JavaScript" type="text/javascript">
	<!--
	function help_window(helpurl) {
		HelpWin = window.open( helpurl,'HelpWindow','scrollbars=yes,resizable=yes,toolbar=no,height=400,width=400');
	}
	// -->
	</script>
<?php
/*



	WARNING - changing this font call can affect
	INTERNATIONALIZATION


*/


		//gets font from Language Object
		$site_fonts=$GLOBALS['Language']->getFont();

	?>

<style type="text/css">
	<!--
	BODY {
		margin-top: 3;
		margin-left: 3;
		margin-right: 3;
		margin-bottom: 3;
		background: #01004e;
	}
	ol,ul,p,body,td,tr,th,form { font-family: <?php echo $site_fonts; ?>; font-size:<?php echo $this->FONTSIZE; ?>;
		color: <?php echo $this->FONTCOLOR_CONTENT ?>; }

	h1 { font-size: x-large; font-family: <?php echo $site_fonts; ?>; }
	h2 { font-size: large; font-family: <?php echo $site_fonts; ?>; }
	h3 { font-size: medium; font-family: <?php echo $site_fonts; ?>; }
	h4 { font-size: small; font-family: <?php echo $site_fonts; ?>; }
	h5 { font-size: x-small; font-family: <?php echo $site_fonts; ?>; }
	h6 { font-size: xx-small; font-family: <?php echo $site_fonts; ?>; }

	pre,tt { font-family: courier,sans-serif }

	a:link { text-decoration:none }
	a:visited { text-decoration:none }
	a:active { text-decoration:none }
	a:hover { text-decoration:underline; color:red }

	.titlebar { color: black; text-decoration: none; font-weight: bold; }
	a.tablink { color: black; text-decoration: none; font-weight: bold; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	a.tablink:visited { color: black; text-decoration: none; font-weight: bold; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	a.tablink:hover { text-decoration: none; color: black; font-weight: bold; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	a.tabsellink { color: black; text-decoration: none; font-weight: bold; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	a.tabsellink:visited { color: black; text-decoration: none; font-weight: bold; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	a.tabsellink:hover { text-decoration: none; color: black; font-weight: bold; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	-->
</style>

</head>

<body>

<table border="0" width="100%" cellspacing="0" cellpadding="0">

	<tr>
		<td><a href="/"><?php echo html_image('logo.png',198,52,array('border'=>'0')); ?></a></td>
		<td><?php echo $this->searchBox(); ?></td>
		<td align="right"><?php
			if (session_loggedin()) {
				?>
				<a href="/account/logout.php"><?php echo html_image($Language->getText('image','logout'),74,14,array('border'=>'0')); ?></a><br />
				<a href="/account/"><?php echo html_image($Language->getText('image','myaccount'),74,14,array('border'=>'0')); ?></a>
				<?php
			} else {
				?>
				<a href="/account/login.php"><?php echo html_image($Language->getText('image','login'),74,14,array('border'=>'0')); ?></a><br />
				<a href="/account/register.php"><?php echo html_image($Language->getText('image','newaccount'),74,14,array('border'=>'0')); ?></a>
				<?php
			}

		?></td>
		<td>&nbsp;&nbsp;</td>
	</tr>

</table>

<table border="0" width="100%" cellspacing="0" cellpadding="0">

	<tr>
		<td>&nbsp;</td>
		<td colspan="3">

<?php echo $this->outerTabs($params); ?>

		</td>
		<td>&nbsp;</td>
	</tr>

	<tr>
		<td align="left" bgcolor="#E0E0E0" width="9"><img src="<?php echo $this->imgroot; ?>tabs/topleft.png" height="9" width="9" alt="" /></td>
		<td bgcolor="#E0E0E0" width="30"><img src="<?php echo $this->imgroot; ?>clear.png" width="30" height="1" alt="" /></td>
		<td bgcolor="#E0E0E0"><img src="<?php echo $this->imgroot; ?>clear.png" width="1" height="1" alt="" /></td>
		<td bgcolor="#E0E0E0" width="30"><img src="<?php echo $this->imgroot; ?>clear.png" width="30" height="1" alt="" /></td>
		<td align="right" bgcolor="#E0E0E0" width="9"><img src="<?php echo $this->imgroot; ?>tabs/topright.png" height="9" width="9" alt="" /></td>
	</tr>

	<tr>

		<!-- Outer body row -->

		<td bgcolor="#E0E0E0"><img src="<?php echo $this->imgroot; ?>clear.png" width="10" height="1" alt="" /></td>
		<td valign="top" width="99%" bgcolor="#E0E0E0" colspan="3">

			<!-- Inner Tabs / Shell -->

			<table border="0" width="100%" cellspacing="0" cellpadding="0">
<?php


if ($params['group']) {

			?>
			<tr>
				<td>&nbsp;</td>
				<td>
				<?php

				echo $this->projectTabs($params['toptab'],$params['group']);

				?>
				</td>
				<td>&nbsp;</td>
			</tr>
			<?php

}

?>
			<tr>
				<td align="left" bgcolor="#ffffff" width="9"><img src="<?php echo $this->imgroot; ?>tabs/topleft-inner.png" height="9" width="9" alt="" /></td>
				<td bgcolor="#ffffff"><img src="<?php echo $this->imgroot; ?>clear.png" width="1" height="1" alt="" /></td>
				<td align="right" bgcolor="#ffffff" width="9"><img src="<?php echo $this->imgroot; ?>tabs/topright-inner.png" height="9" width="9" alt="" /></td>
			</tr>

			<tr>
				<td bgcolor="#ffffff"><img src="<?php echo $this->imgroot; ?>clear.png" width="10" height="1" alt="" /></td>
				<td valign="top" width="99%" bgcolor="white">

	<?php

/*

	if ($params['titlevals']) {
		$title =		$Language->getText($params['pagename'],'title',$params['titlevals']);
	} else {
		$title =		$Language->getText($params['pagename'],'title');
	}

	if ($params['sectionvals']) {
		$section =	  $Language->getText($params['pagename'],'section',$params['sectionvals']);
	} else {
		$section =	  $Language->getText($params['pagename'],'section');
	}

	if ($section) {
		print "<strong>$section</strong>\n";
	}

	if ($title) {
		   print "<h2>$title</h2>\n";
	}
*/
	}

	function footer($params) {

	?>

			<!-- end main body row -->


				</td>
				<td width="10" bgcolor="#ffffff"><img src="<?php echo $this->imgroot; ?>clear.png" width="2" height="1" alt="" /></td>
			</tr>
			<tr>
				<td align="left" bgcolor="#E0E0E0" width="9"><img src="<?php echo $this->imgroot; ?>tabs/bottomleft-inner.png" height="11" width="11" alt="" /></td>
				<td bgcolor="#ffffff"><img src="<?php echo $this->imgroot; ?>clear.png" width="1" height="1" alt="" /></td>
				<td align="right" bgcolor="#E0E0E0" width="9"><img src="<?php echo $this->imgroot; ?>tabs/bottomright-inner.png" height="11" width="11" alt="" /></td>
			</tr>
			</table>

		<!-- end inner body row -->

		</td>
		<td width="10" bgcolor="#E0E0E0"><img src="<?php echo $this->imgroot; ?>clear.png" width="2" height="1" alt="" /></td>
	</tr>
	<tr>
		<td align="left" bgcolor="#E0E0E0" width="9"><img src="<?php echo $this->imgroot; ?>tabs/bottomleft.png" height="9" width="9" alt="" /></td>
		<td bgcolor="#E0E0E0" colspan="3"><img src="<?php echo $this->imgroot; ?>clear.png" width="1" height="1" alt="" /></td>
		<td align="right" bgcolor="#E0E0E0" width="9"><img src="<?php echo $this->imgroot; ?>tabs/bottomright.png" height="9" width="9" alt="" /></td>
	</tr>
</table>
<?php
	global $sys_show_source;
	if ($sys_show_source) {
		global $SCRIPT_NAME;
		print '<a class="showsource" href="/source.php?file=' . $SCRIPT_NAME . '"> Show Source</a>';
	}
?>

</body>
</html>
<?php

	}

	function getRootIndex() {
		return $this->rootindex;
	}

	/**
	 * boxTop() - Top HTML box
	 *
	 * @param   string  Box title
	 * @param   bool	Whether to echo or return the results
	 * @param   string  The box background color
	 */
	function boxTop($title) {
		return '
		<table cellspacing="0" cellpadding="1" width="100%" border="0" bgcolor="' .$this->COLOR_HTMLBOX_TITLE.'">
		<tr><td>
			<table cellspacing="0" cellpadding="2" width="100%" border="0" bgcolor="'. $this->COLOR_HTMLBOX_BACK.'">
				<tr style="background-color:'.$this->COLOR_HTMLBOX_TITLE.'" align="center">
					<td colspan="2"><span class="titlebar">'.$title.'</span></td>
				</tr>
				<tr align="left">
					<td colspan="2">';
	}

	/**
	 * boxMiddle() - Middle HTML box
	 *
	 * @param   string  Box title
	 * @param   string  The box background color
	 */
	function boxMiddle($title) {
		return '
					</td>
				</tr>
				<tr style="background-color:'.$this->COLOR_HTMLBOX_TITLE.'" align="center">
					<td colspan="2"><span class="titlebar">'.$title.'</span></td>
				</tr>
				<tr align="left" style="background-color:'. $this->COLOR_HTMLBOX_BACK .'">
					<td colspan="2">';
	}

	/**
	 * boxGetAltRowStyle() - Get an alternating row style for tables
	 *
	 * @param			   int			 Row number
	 */
	function boxGetAltRowStyle($i) {
		if ($i % 2 == 0) {
			return 'style="background-color:white"';
		} else {
			return 'style="background-color:' . $this->COLOR_LTBACK1 . '"';
		}
	}

	/**
	 * boxBottom() - Bottom HTML box
	 *
	 * @param   bool	Whether to echo or return the results
	 */
	function boxBottom() {
		return '
					</td>
				</tr>
			</table>
		</td></tr>
		</table><p>&nbsp;</p>';
	}

	/**
	 * listTableTop() - Takes an array of titles and builds the first row of a new table.
	 *
	 * @param	   array   The array of titles
	 * @param	   array   The array of title links
	 */
	function listTableTop ($title_arr,$links_arr=false) {
		$return = '
		<table cellspacing="0" cellpadding="1" width="100%" border="0" style="background-color:' .$this->COLOR_HTMLBOX_TITLE.'">
		<tr><td>
		<table width="100%" border="0" cellspacing="1" cellpadding="2">
			<tr style="background-color:'. $this->COLOR_HTMLBOX_TITLE .'">';

		$count=count($title_arr);
		if ($links_arr) {
			for ($i=0; $i<$count; $i++) {
				$return .= '
				<td align="center"><a class="sortbutton "href="'.$links_arr[$i].'"><span style="color:'.
				$this->FONTCOLOR_HTMLBOX_TITLE.'"><strong>'.$title_arr[$i].'</strong></span></a></td>';
			}
		} else {
			for ($i=0; $i<$count; $i++) {
				$return .= '
				<td align="center"><span style="color:'.
				$this->FONTCOLOR_HTMLBOX_TITLE.'"><strong>'.$title_arr[$i].'</strong></span></td>';
			}
		}
		return $return.'</tr>';
	}

	function listTableBottom() {
		return '</table></td></tr></table>';
	}

	function outerTabs($params) {
		global $Language;
		$TABS_DIRS[]='/';
		$TABS_DIRS[]='/my/';
		$TABS_DIRS[]='/softwaremap/';
		$TABS_DIRS[]='/snippet/';
		$TABS_DIRS[]='/people/';
		$TABS_TITLES[]=$Language->getText('menu','home');
		$TABS_TITLES[]=$Language->getText('menu','mypage');
		$TABS_TITLES[]=$Language->getText('menu','projectree');
		$TABS_TITLES[]=$Language->getText('menu','code_snippet');
		$TABS_TITLES[]=$Language->getText('menu','project_help_wanted');

		if (user_ismember(1,'A')) {
			$TABS_DIRS[]='/admin/';
			$TABS_TITLES[]=$Language->getText('menu','admin');
		}
		if ($params['group']) {
			// get group info using the common result set
			$project =& group_get_object($params['group']);
			if ($project->isError()) {

			} elseif (!$project->isProject()) {

			} else {
				$TABS_DIRS[]='/projects/'.$project->getUnixName().'/';
				$TABS_TITLES[]=$project->getPublicName();
				$selected=count($TABS_DIRS)-1;
			}
		} elseif (strstr($GLOBALS['REQUEST_URI'],'/my/') || strstr($GLOBALS['REQUEST_URI'],'/account/')) {
			$selected=array_search("/my/", $TABS_DIRS);
		} elseif (strstr($GLOBALS['REQUEST_URI'],'softwaremap')) {
			$selected=array_search("/softwaremap/", $TABS_DIRS);
		} elseif (strstr($GLOBALS['REQUEST_URI'],'/snippet/')) {
			$selected=array_search("/snippet/", $TABS_DIRS);
		} elseif (strstr($GLOBALS['REQUEST_URI'],'/people/')) {
			$selected=array_search("/people/", $TABS_DIRS);
		} elseif (strstr($GLOBALS['REQUEST_URI'],'/admin/') && user_ismember(1,'A')) {
			$selected=(count($TABS_DIRS)-1);
		} else {
			$selected=0;
		}
		echo $this->tabGenerator($TABS_DIRS,$TABS_TITLES,false,$selected,'#E0E0E0','100%');

	}

	/**
	 *	projectTabs() - Prints out the project tabs, contained here in case
	 *		we want to allow it to be overriden
	 *
	 *	@param	string	Is the tab currently selected
	 *	@param	string	Is the group we should look up get title info
	 */
	function projectTabs($toptab,$group) {

		global $Language;

		// get group info using the common result set
		$project =& group_get_object($group);
		if ($project->isError()) {
			//wasn't found or some other problem
			return;
		}
		if (!$project->isProject()) {
			return;
		}

		// Summary
		$TABS_DIRS[]='/projects/'. $project->getUnixName() .'/';
		$TABS_TITLES[]=$Language->getText('group','short_summary');
		(($toptab == 'home') ? $selected=(count($TABS_TITLES)-1) : '' );

		if (user_ismember($group,'A')) {
			// Project Admin
			$TABS_DIRS[]='/project/admin/?group_id='. $group;
			$TABS_TITLES[]=$Language->getText('group','short_admin');
			(($toptab == 'admin') ? $selected=(count($TABS_TITLES)-1) : '' );
		}
		/* Homepage
		$TABS_DIRS[]='http://'. $project->getHomePage();
		$TABS_TITLES[]=$Language->getText('group','short_homepage');
		*/

		// Forums
		if ($project->usesForum()) {
			$TABS_DIRS[]='/forum/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_forum');
			(($toptab == 'forums') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Artifact Tracking
		$TABS_DIRS[]='/tracker/?group_id='.$group;
		$TABS_TITLES[]=$Language->getText('group','short_tracker');
		(($toptab == 'tracker' || $toptab == 'bugs' || $toptab == 'support' || $toptab == 'patch')
				? $selected=(count($TABS_TITLES)-1) : '' );

		// Mailing Lists
		if ($project->usesMail()) {
			$TABS_DIRS[]='/mail/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_mail');
			(($toptab == 'mail') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Project Manager
		if ($project->usesPm()) {
			$TABS_DIRS[]='/pm/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_pm');
			(($toptab == 'pm') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Doc Manager
		if ($project->usesDocman()) {
			$TABS_DIRS[]='/docman/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_docman');
			(($toptab == 'docman') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Surveys
		if ($project->usesSurvey()) {
			$TABS_DIRS[]='/survey/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_survey');
			(($toptab == 'surveys') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		//newsbytes
		if ($project->usesNews()) {
			$TABS_DIRS[]='/news/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_news');
			(($toptab == 'news') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// CVS
		if ($project->usesCVS()) {
			$TABS_DIRS[]='/scm/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_cvs');
			(($toptab == 'cvs') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Downloads
		$TABS_DIRS[]='/project/showfiles.php?group_id='.$group;
		$TABS_TITLES[]=$Language->getText('group','short_files');
		(($toptab == 'downloads') ? $selected=(count($TABS_TITLES)-1) : '' );

		echo $this->tabGenerator($TABS_DIRS,$TABS_TITLES,true,$selected,'white','100%');

	}

	function tabGenerator($TABS_DIRS,$TABS_TITLES,$nested=false,$selected=false,$sel_tab_bgcolor='WHITE',$total_width='100%') {

		$dark='style="background-color:#BBBBBB"';
		$light='style="background-color:'. $sel_tab_bgcolor .'"';

		$count=count($TABS_DIRS);
		$width=intval((100/$count));
		$return .= '

		<!-- start tabs -->

		<table border="0" cellpadding="0" cellspacing="0" width="'.$total_width.'">
		<tr>';
		if ($nested) {
			$inner='-inner';
		} else {
			$inner='';
		}
		for ($i=0; $i<$count; $i++) {
			$bgcolor=(($selected==$i)?$light:$dark);
			$imgcolor=(($selected==$i)?'':'-dark');
			$return .= '
				<td '.$bgcolor.' width="9" valign="top">'.
					'<div align="left">'. html_image('tabs/topleft'.$inner.$imgcolor.'.png',9,9,array()).'</div></td>
				<td '.$bgcolor.' width="'.$width.'%" rowspan="2" align="center">'.
				'<a class="'. (($selected==$i)?'tabsellink':'tablink') .'" href="'. $TABS_DIRS[$i] .
					'">'. $TABS_TITLES[$i] .'</a></td>
				<td '.$bgcolor.' width="9" valign="top">'.
				'<div align="right">'. html_image('tabs/topright'.$inner.$imgcolor.'.png',9,9,array()).'</div></td>';
			if ($i < $count-1) {
				$return .= '<td width="1" rowspan="2"><img src="'.$this->imgroot . 'clear.png" height="2" width="1" alt="" /></td>';
			}
		}

		$return .= '
		</tr>
		<tr>';
		for ($i=0; $i<$count; $i++) {
			$bgcolor=(($selected==$i)?$light:$dark);
			$return .= '<td '.$bgcolor.'>&nbsp;</td>';
			$return .= '<td '.$bgcolor.'>&nbsp;</td>';
		}
		$return .= '
		</tr>
		<tr>';
		for ($i=0; $i<$count; $i++) {
			$bgcolor=(($selected==$i)?$light:'style="background-color:#999999"');
			$return .= '<td '.$bgcolor.' colspan="4"><img src="'.$this->imgroot . 'clear.png" height="2" width="1" alt="" /></td>';
		}

		return $return.'
		</tr>
		</table>';
	}

	function searchBox() {
		global $Language,$words,$forum_id,$group_id,$atid,$exact,$type_of_search;

		// if there is no search currently, set the default
		if ( ! isset($type_of_search) ) {
			$exact = 1;
		}

		print '
		<form action="/search/" method="post"'.$new_window.'>
		<table border="0" cellpadding="0" cellspacing="0">
		<tr><td>
		<div align="center" style="font-size:smaller">

		<select name="type_of_search">';

		if ($atid && $group_id) {
			$group =& group_get_object($group_id);
			if ($group && is_object($group)) {
				$ath = new ArtifactTypeHtml($group,$atid);
				if ($ath && is_object($ath)) {
				print '
				<option value="artifact"'.( $type_of_search == 'artifact' ? ' selected="selected"' : '' ).'>'. $ath->getName() .'</option>';
				}
			}
		} else if ($group_id && $forum_id) {
			print '
			<option value="forums"'.( $type_of_search == 'forums' ? ' selected="selected"' : '' ).'>This Forum</option>';
		}
		print '
			<option value="soft"'.( $type_of_search == 'soft' ? ' selected="selected"' : '' ).'>'.$Language->getText('searchbox','softwaregroup').'</option>';
		print '
			<option value="skill"'.( $type_of_search == 'skill' ? ' selected="selected"' : '' ).'>'.$Language->getText('searchbox','skill').'</option>';
		print '
			<option value="people"'.( $type_of_search == 'people' ? ' selected="selected"' : '' ).'>'.$Language->getText('searchbox','people').'</option>';
		print '
			</select></div>';

//		print '<br />';
//		print '
//		<input type="CHECKBOX" name="exact" value="1"'.( $exact ? ' CHECKED' : ' UNCHECKED' ).'> Require All Words';

		print '</td><td>&nbsp;';
		if ( isset($forum_id) ) {
			print '
			<input type="hidden" value="'.$forum_id.'" name="forum_id" />';
		}
		if ( isset($group_id) ) {
			print '
			<input type="hidden" value="'.$group_id.'" name="group_id" />';
		}
		if ( isset($atid) ) {
			print '
			<input type="hidden" value="'.$atid.'" name="atid" />';
		}
		print '</td><td>';
		print '
		<input type="text" size="12" name="words" value="'.$words.'" />';

		print '</td><td>&nbsp;</td><td>';
		print '<input type="submit" name="Search" value="'.$Language->getText('searchbox','search').'" />';

		print '
		</td></tr></table>';
		print '</form>';

	}

	/**
	 * BeginSubMenu() - Opening a submenu
	 *
	 */
	function BeginSubMenu ($title_arr,$links_arr) {
		$return = '
			<p><strong>';
		return $return;
	}

	/**
	 * EndSubMenu() - Closing a submenu
	 *
	 */
	function EndSubMenu ($title_arr,$links_arr) {
		$return = '</strong></p>';
		return $return;
	}

	/**
	 * PrintSubMenu() - Takes two array of titles and links and builds the contents of a menu
	 *
	 * @param	   array   The array of titles
	 * @param	   array   The array of title links
	 */
	function PrintSubMenu ($title_arr,$links_arr) {
		$count=count($title_arr);
		$count--;
		for ($i=0; $i<$count; $i++) {
			$return .= '
				<a href='.$links_arr[$i].'>'.$title_arr[$i].'</a> | ';
		}
		$return .= '
				<a href='.$links_arr[$i].'>'.$title_arr[$i].'</a>';
		return $return;
	}

	/**
	 * subMenu() - Takes two array of titles and links and build a menu
	 *
	 * @param	   array   The array of titles
	 * @param	   array   The array of title links
	 */
	function subMenu ($title_arr,$links_arr) {
		$return  = BeginSubMenu () ;
		$return .= PrintSubMenu ($title_arr,$links_arr) ;
		$return .= EndSubMenu () ;
		return $return;
	}

	/**
	 * multiTableRow() - create a mutlilevel row in a table
	 *
	 * @param	string	the row attributes
	 * @param	array	the array of cell data, each element is an array,
	 *				  	the first item being the text,
	 *				    the subsequent items are attributes (dont include
	 *					the bgcolor for the title here, that will be
	 *					handled by $istitle
	 * @param	boolean is this row part of the title ?
	 *
	 */
	 function multiTableRow($row_attr, $cell_data, $istitle) {
		$return= '
		<tr '.$row_attr;
		if ( $istitle ) {
			$return .=' align="center" bgcolor="'. $this->COLOR_HTMLBOX_TITLE .'"';
		}
		$return .= '>';
		for ( $c = 0; $c < count($cell_data); $c++ ) {
			$return .='<td ';
			for ( $a=1; $a < count($cell_data[$c]); $a++) {
				$return .= $cell_data[$c][$a].' ';
			}
			$return .= '>';
			if ( $istitle ) {
				$return .='<font color="'.$this->FONTCOLOR_HTMLBOX_TITLE.'"><strong>';
			}
			$return .= $cell_data[$c][0];
			if ( $istitle ) {
				$return .='</strong></font>';
			}
			$return .= '</td>';

		}
		$return .= '</tr>
		';

		return $return;
	 }

}

?>
