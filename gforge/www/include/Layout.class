<?php   
/**
 * Base layout class.
 *
 * Extends the basic Error class to add HTML functions 
 * for displaying all site dependent HTML, while allowing 
 * extendibility/overriding by themes via the Theme class.
 * 
 * Make sure browser.php is included _before_ you create an instance of this object.
 * 
 * Geoffrey Herteg, August 29, 2000
 *
 * @version   $Id$
 */

class Layout extends Error {

	/**
	 * The default main page content
	 */
	var $rootindex = "index_std.php";

	/**
	 * The root location for images
	 *
	 * @var		string	$imgroot
	 */
	var $imgroot = '/themes/gforge/images/';
	var $COLOR_CONTENT_BACK= '#FFFFFF';
	var $COLOR_LTBACK1= '#EEEEEF';
	var $COLOR_LTBACK2= '#FAFAFA';
	var $COLOR_HTMLBOX_TITLE = '#D5D5D7';
	var $COLOR_HTMLBOX_BACK = '#EAECEF';
	var $FONT_CONTENT = 'Helvetica';
	var $FONT_HTMLBOX_TITLE = 'Helvetica';
	var $FONTCOLOR_HTMLBOX_TITLE = '#333333';
	var $FONTCOLOR_CONTENT = '#333333';
	var $FONTSIZE = 'small';
	var $FONTSIZE_SMALLER='x-small';
	var $FONTSIZE_SMALLEST='xx-small';
	var $FONTSIZE_HTMLBOX_TITLE = 'small';
	var $bgpri = array();

	/**
	 * Layout() - Constructor
	 */
	function Layout() {
		GLOBAL $bgpri;
		// Constructor for parent class...
		$this->Error();

		/*
		Set up the priority color array one time only
		*/
		$bgpri[1] = '#dadada';
		$bgpri[2] = '#dad0d0';
		$bgpri[3] = '#dacaca';
		$bgpri[4] = '#dac0c0';
		$bgpri[5] = '#dababa';
		$bgpri[6] = '#dab0b0';
		$bgpri[7] = '#daaaaa';
		$bgpri[8] = '#da9090';
		$bgpri[9] = '#da8a8a';

		//determine font for this platform
		if (browser_is_windows() && browser_is_ie()) {

			//ie needs smaller fonts
			$this->FONTSIZE='x-small';
			$this->FONTSIZE_SMALLER='xx-small';
			$this->FONTSIZE_SMALLEST='7pt';

		} else if (browser_is_windows()) {

			//netscape on wintel
			$this->FONTSIZE='small';
			$this->FONTSIZE_SMALLER='x-small';
			$this->FONTSIZE_SMALLEST='x-small';

		} else if (browser_is_mac()){

			//mac users need bigger fonts
			$this->FONTSIZE='medium';
			$this->FONTSIZE_SMALLER='small';
			$this->FONTSIZE_SMALLEST='x-small';

		} else {

			//linux and other users
			$this->FONTSIZE='small';
			$this->FONTSIZE_SMALLER='x-small';
			$this->FONTSIZE_SMALLEST='xx-small';

		}

		$this->FONTSIZE_HTMLBOX_TITLE = $this->FONTSIZE;
	}

	/**
	 *	header() - "steel theme" top of page
	 *
	 * @param	array	Header parameters array
	 */
	function header($params) {
		global $Language;

		if (!$params['title']) {
			$params['title'] =  $GLOBALS['sys_name'];
		} else {
			$params['title'] =  $GLOBALS['sys_name'] . ":" . $params['title'];
		}

		?>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">

<html lang="<?php echo $Language->getLanguageCode(); ?>">
  <head>
	<meta http-equiv="Content-Type" content="text/html; charset=<?php echo $Language->getEncoding(); ?>">
	<TITLE><?php echo $params['title']; ?></TITLE>
	<SCRIPT language="JavaScript">
	<!--
	function help_window(helpurl) {
		HelpWin = window.open( helpurl,'HelpWindow','scrollbars=yes,resizable=yes,toolbar=no,height=400,width=400');
	}
	// -->
	</SCRIPT>
<?php
/*



	WARNING - changing this font call can affect
	INTERNATIONALIZATION


*/


		//gets font from Language Object
		$site_fonts=$GLOBALS['Language']->getFont();

	?>

<style type="text/css">
	<!--
	OL,UL,P,BODY,TD,TR,TH,FORM { font-family: <?php echo $site_fonts; ?>; font-size:<?php echo $this->FONTSIZE; ?>; color: <?php echo $this->FONTCOLOR_CONTENT ?>; }

	H1 { font-size: x-large; font-family: <?php echo $site_fonts; ?>; }
	H2 { font-size: large; font-family: <?php echo $site_fonts; ?>; }
	H3 { font-size: medium; font-family: <?php echo $site_fonts; ?>; }
	H4 { font-size: small; font-family: <?php echo $site_fonts; ?>; }
	H5 { font-size: x-small; font-family: <?php echo $site_fonts; ?>; }
	H6 { font-size: xx-small; font-family: <?php echo $site_fonts; ?>; }

	PRE,TT { font-family: courier,sans-serif }

	A:link { text-decoration:none }
	A:visited { text-decoration:none }
	A:active { text-decoration:none }
	A:hover { text-decoration:underline; color:#FF0000 }

	.titlebar { color: #000000; text-decoration: none; font-weight: bold; }
	A.tablink { color: #000000; text-decoration: none; font-weight: bold; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	A.tablink:visited { color: #000000; text-decoration: none; font-weight: bold; font-size: <?php
		echo $this->FONTSIZE_SMALLER; ?>; }
	A.tablink:hover { text-decoration: none; color: #000000; font-weight: bold; font-size: <?php
		echo $this->FONTSIZE_SMALLER; ?>; }
	A.tabsellink { color: #000000; text-decoration: none; font-weight: bold; font-size: <?php
		echo $this->FONTSIZE_SMALLER; ?>; }
	A.tabsellink:visited { color: #000000; text-decoration: none; font-weight: bold; font-size: <?php
		echo $this->FONTSIZE_SMALLER; ?>; }
	A.tabsellink:hover { text-decoration: none; color: #000000; font-weight: bold; font-size: <?php
		echo $this->FONTSIZE_SMALLER; ?>; }

	A.showsource { color: #FFFFFF; text-decoration: none; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	A.showsource:visited { color: #FFFFFF; text-decoration: none; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	A.showsource:hover { color: #FFFFFF; text-decoartion: none; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	-->
</style>

</head>

<BODY TOPMARGIN="3" MARGINHEIGHT="3" MARGINWIDTH="3" LEFTMARGIN="3" RIGHTMARGIN="3" BGCOLOR="#01004e">

<TABLE BORDER=0 WIDTH="100%" CELLSPACING="0" CELLPADDING=0>

	<TR>
		<TD><A HREF="/"><?php echo html_image('logo.png',198,52,array('border'=>'0')); ?></A></TD>
		<TD><?php echo $this->searchBox(); ?></TD>
		<TD ALIGN="RIGHT"><?php
			if (session_loggedin()) {
				?>
				<A HREF="/account/logout.php"><?php echo html_image($Language->getText('image','logout'),74,14,array('BORDER'=>'0')); ?></A><BR>
				<A HREF="/account/"><?php echo html_image($Language->getText('image','myaccount'),74,14,array('BORDER'=>'0')); ?></A>
				<?php
			} else {
				?>
				<A HREF="/account/login.php"><?php echo html_image($Language->getText('image','login'),74,14,array('BORDER'=>'0')); ?></A><BR>
				<A HREF="/account/register.php"><?php echo html_image($Language->getText('image','newaccount'),74,14,array('BORDER'=>'0')); ?></A>
				<?php
			}

		?></TD>
		<TD>&nbsp;&nbsp;</TD>
	</TR>

</TABLE>

<TABLE BORDER=0 WIDTH="100%" CELLSPACING="0" CELLPADDING=0>

	<TR>
		<TD>&nbsp;</TD>
		<TD COLSPAN=3>

<?php echo $this->outerTabs($params); ?>

		</TD>
		<TD>&nbsp;</TD>
	</TR>

	<TR>
		<TD ALIGN=LEFT BGCOLOR="#E0E0E0" WIDTH=10><IMG SRC="<?php echo $this->imgroot; ?>tabs/topleft.png" HEIGHT=9 WIDTH=9></TD>
		<TD BGCOLOR="#E0E0E0" WIDTH=30><IMG SRC="<?php echo $this->imgroot; ?>clear.png" WIDTH=30 HEIGHT=1></TD>
		<TD BGCOLOR="#E0E0E0"><IMG SRC="<?php echo $this->imgroot; ?>clear.png" WIDTH=1 HEIGHT=1></TD>
		<TD BGCOLOR="#E0E0E0" WIDTH=30><IMG SRC="<?php echo $this->imgroot; ?>clear.png" WIDTH=30 HEIGHT=1></TD>
		<TD ALIGN=RIGHT BGCOLOR="#E0E0E0" WIDTH=10><IMG SRC="<?php echo $this->imgroot; ?>tabs/topright.png" HEIGHT=9 WIDTH=9></TD>
	</TR>

	<TR>

		<!-- Outer body row -->

		<TD BGCOLOR="#E0E0E0"><IMG SRC="<?php echo $this->imgroot; ?>clear.png" WIDTH=10 HEIGHT=1></TD>
		<TD VALIGN=TOP WIDTH="99%" BGCOLOR="#E0E0E0" COLSPAN=3>

			<!-- Inner Tabs / Shell -->

			<TABLE BORDER=0 WIDTH="100%" CELLSPACING="0" CELLPADDING=0>
<?php


if ($params['group']) {

			?>
			<TR>
				<TD>&nbsp;</TD>
				<TD>
				<?php

				echo $this->projectTabs($params['toptab'],$params['group']);

				?>
				</TD>
				<TD>&nbsp;</TD>
			</TR>
			<?php

}

?>
			<TR>
				<TD ALIGN=LEFT BGCOLOR="#FFFFFF" WIDTH=10><IMG SRC="<?php echo $this->imgroot; ?>tabs/topleft-inner.png" HEIGHT=9 WIDTH=9></TD>
				<TD BGCOLOR=WHITE><IMG SRC="<?php echo $this->imgroot; ?>clear.png" WIDTH=1 HEIGHT=1></TD>
				<TD ALIGN=RIGHT BGCOLOR="#FFFFFF" WIDTH=10><IMG SRC="<?php echo $this->imgroot; ?>tabs/topright-inner.png" HEIGHT=9 WIDTH=9></TD>
			</TR>

			<TR>
				<TD BGCOLOR=WHITE><IMG SRC="<?php echo $this->imgroot; ?>clear.png" WIDTH=10 HEIGHT=1></TD>
				<TD VALIGN=TOP WIDTH="99%" BGCOLOR="WHITE">

	<?php

/*

	if ($params['titlevals']) {
		$title =		$Language->getText($params['pagename'],'title',$params['titlevals']);
	} else {
		$title =		$Language->getText($params['pagename'],'title');
	}

	if ($params['sectionvals']) {
		$section =	  $Language->getText($params['pagename'],'section',$params['sectionvals']);
	} else {
		$section =	  $Language->getText($params['pagename'],'section');
	}

	if ($section) {
		print "<b>$section</b>\n";
	}

	if ($title) {
		   print "<h2>$title</h2>\n";
	}
*/
	}

	function footer($params) {

	?>

			<!-- end main body row -->


				</TD>
				<TD WIDTH=10 BGCOLOR="WHITE"><IMG SRC="<?php echo $this->imgroot; ?>clear.png" width=2 height=1></TD>
			</TR>
			<TR>
				<TD ALIGN=LEFT BGCOLOR="#E0E0E0" WIDTH=10"><IMG SRC="<?php echo $this->imgroot; ?>tabs/bottomleft-inner.png" HEIGHT=11 WIDTH=11></TD>
				<TD BGCOLOR=WHITE><IMG SRC="<?php echo $this->imgroot; ?>clear.png" WIDTH="1" HEIGHT=1></TD>
				<TD ALIGN=RIGHT BGCOLOR="#E0E0E0" WIDTH=10><IMG SRC="<?php echo $this->imgroot; ?>tabs/bottomright-inner.png" HEIGHT=11 WIDTH=11></TD>
			</TR>
			</TABLE>

		<!-- end inner body row -->

		</TD>
		<TD WIDTH=10 BGCOLOR="#E0E0E0"><IMG SRC="<?php echo $this->imgroot; ?>clear.png" width=2 height=1></TD>
	</TR>
	<TR>
		<TD ALIGN=LEFT BGCOLOR="#E0E0E0" WIDTH=10><IMG SRC="<?php echo $this->imgroot; ?>tabs/bottomleft.png" HEIGHT=9 WIDTH=9></TD>
		<TD BGCOLOR="#E0E0E0" COLSPAN=3><IMG SRC="<?php echo $this->imgroot; ?>clear.png" WIDTH="1" HEIGHT=1></TD>
		<TD ALIGN=RIGHT BGCOLOR="#E0E0E0" WIDTH=10><IMG SRC="<?php echo $this->imgroot; ?>tabs/bottomright.png" HEIGHT=9 WIDTH=9></TD>
	</TR>
</TABLE>
<?php
	global $sys_show_source;
	if ($sys_show_source) {
		global $SCRIPT_NAME;
		print '<A CLASS=showsource HREF="/source.php?file=' . $SCRIPT_NAME . '"> Show Source</A>\n';
	}
?>
</body>
</html>
<?php

	}

	function getRootIndex() {
		return $this->rootindex;
	}

	/**
	 * boxTop() - Top HTML box
	 *
	 * @param   string  Box title
	 * @param   bool	Whether to echo or return the results
	 * @param   string  The box background color
	 */
	function boxTop($title) {
		return '
		<TABLE cellspacing="0" cellpadding="1" width="100%" border="0" bgcolor="' .$this->COLOR_HTMLBOX_TITLE.'">
		<TR><TD>
			<TABLE cellspacing="0" cellpadding="2" width="100%" border="0" bgcolor="'. $this->COLOR_HTMLBOX_BACK.'">
				<TR BGCOLOR="'.$this->COLOR_HTMLBOX_TITLE.'" align="center">
					<TD colspan=2><SPAN class=titlebar>'.$title.'</SPAN></TD>
				</TR>
				<TR align=left>
					<TD colspan=2>';
	}

	/**
	 * boxMiddle() - Middle HTML box
	 *
	 * @param   string  Box title
	 * @param   string  The box background color
	 */
	function boxMiddle($title) {
		return '
					</TD>
				</TR>
				<TR BGCOLOR="'.$this->COLOR_HTMLBOX_TITLE.'" align="center">
					<TD colspan=2><SPAN class=titlebar>'.$title.'</SPAN></TD>
				</TR>
				<TR align=left bgcolor="'. $this->COLOR_HTMLBOX_BACK .'">
					<TD colspan=2>';
	}

	/**
	 * boxGetAltRowStyle() - Get an alternating row style for tables
	 *
	 * @param			   int			 Row number
	 */
	function boxGetAltRowStyle($i) {
		if ($i % 2 == 0) {
			return 'BGCOLOR="#FFFFFF"';
		} else {
			return 'BGCOLOR="' . $this->COLOR_LTBACK1 . '"';
		}
	}

	/**
	 * boxBottom() - Bottom HTML box
	 *
	 * @param   bool	Whether to echo or return the results
	 */
	function boxBottom() {
		return '
					</TD>
				</TR>
			</TABLE>
		</TD></TR>
		</TABLE><P>';
	}

	/**
	 * listTableTop() - Takes an array of titles and builds the first row of a new table.
	 *
	 * @param	   array   The array of titles
	 * @param	   array   The array of title links
	 */
	function listTableTop ($title_arr,$links_arr=false) {
		$return = '
		<TABLE cellspacing="0" cellpadding="1" width="100%" border="0" bgcolor="' .$this->COLOR_HTMLBOX_TITLE.'">
        <TR><TD>
		<TABLE WIDTH="100%" BORDER="0" CELLSPACING="1" CELLPADDING="2">
			<TR BGCOLOR="'. $this->COLOR_HTMLBOX_TITLE .'">';

		$count=count($title_arr);
		if ($links_arr) {
			for ($i=0; $i<$count; $i++) {
				$return .= '
				<TD ALIGN="MIDDLE"><a class=sortbutton href="'.$links_arr[$i].'"><FONT COLOR="'.
				$this->FONTCOLOR_HTMLBOX_TITLE.'"><B>'.$title_arr[$i].'</B></FONT></A></TD>';
			}
		} else {
			for ($i=0; $i<$count; $i++) {
				$return .= '
				<TD ALIGN="MIDDLE"><FONT COLOR="'.
				$this->FONTCOLOR_HTMLBOX_TITLE.'"><B>'.$title_arr[$i].'</B></FONT></TD>';
			}
		}
		return $return.'</TR>';
	}

	function listTableBottom() {
		return '</TABLE></TD></TR></TABLE>';
	}

	function outerTabs($params) {
		global $Language;
		$TABS_DIRS[]='/';
		$TABS_DIRS[]='/my/';
		$TABS_DIRS[]='/softwaremap/';
		$TABS_DIRS[]='/snippet/';
		$TABS_DIRS[]='/people/';
		$TABS_TITLES[]=$Language->getText('menu','home');
		$TABS_TITLES[]=$Language->getText('menu','mypage');
		$TABS_TITLES[]=$Language->getText('menu','projectree');
		$TABS_TITLES[]=$Language->getText('menu','code_snippet');
		$TABS_TITLES[]=$Language->getText('menu','project_help_wanted');

		if (user_ismember(1,'A')) {
			$TABS_DIRS[]='/admin/';
			$TABS_TITLES[]=$Language->getText('menu','admin');
		}
		if ($params['group']) {
			// get group info using the common result set
			$project =& group_get_object($params['group']);
			if ($project->isError()) {
		
			} elseif (!$project->isProject()) {
			
			} else {
				$TABS_DIRS[]='/projects/'.$project->getUnixName().'/';
				$TABS_TITLES[]=$project->getPublicName();
				$selected=count($TABS_DIRS)-1;
			}
		} elseif (strstr($GLOBALS['REQUEST_URI'],'/my/') || strstr($GLOBALS['REQUEST_URI'],'/account/')) {
			$selected=1;
		} elseif (strstr($GLOBALS['REQUEST_URI'],'softwaremap')) {
			$selected=2;
		} elseif (strstr($GLOBALS['REQUEST_URI'],'/snippet/')) {
			$selected=3;
		} elseif (strstr($GLOBALS['REQUEST_URI'],'/people/')) {
			$selected=4;
		} elseif (strstr($GLOBALS['REQUEST_URI'],'/admin/') && user_ismember(1,'A')) {
			$selected=(count($TABS_DIRS)-1);
		} else {
			$selected=0;
		}
		echo $this->tabGenerator($TABS_DIRS,$TABS_TITLES,false,$selected,'#E0E0E0','100%');

	}

	/**
	 *	projectTabs() - Prints out the project tabs, contained here in case
	 *		we want to allow it to be overriden
	 *
	 *	@param	string	Is the tab currently selected
	 *	@param	string	Is the group we should look up get title info
	 */
	function projectTabs($toptab,$group) {

		global $Language;

		// get group info using the common result set
		$project =& group_get_object($group);
		if ($project->isError()) {
			//wasn't found or some other problem
			return;
		}
		if (!$project->isProject()) {
			return;
		}

		// Summary
		$TABS_DIRS[]='/projects/'. $project->getUnixName() .'/';
		$TABS_TITLES[]=$Language->getText('group','short_summary');
		(($toptab == 'home') ? $selected=(count($TABS_TITLES)-1) : '' );

		if (user_ismember($group,'A')) {
			// Project Admin 
			$TABS_DIRS[]='/project/admin/?group_id='. $group;
			$TABS_TITLES[]=$Language->getText('group','short_admin');
			(($toptab == 'admin') ? $selected=(count($TABS_TITLES)-1) : '' );
		}
		/* Homepage
		$TABS_DIRS[]='http://'. $project->getHomePage();
		$TABS_TITLES[]=$Language->getText('group','short_homepage');
		*/

		// Forums
		if ($project->usesForum()) {
			$TABS_DIRS[]='/forum/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_forum');
			(($toptab == 'forums') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Artifact Tracking
		$TABS_DIRS[]='/tracker/?group_id='.$group;
		$TABS_TITLES[]=$Language->getText('group','short_tracker');
		(($toptab == 'tracker' || $toptab == 'bugs' || $toptab == 'support' || $toptab == 'patch') 
				? $selected=(count($TABS_TITLES)-1) : '' );

		// Mailing Lists
		if ($project->usesMail()) {
			$TABS_DIRS[]='/mail/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_mail');
			(($toptab == 'mail') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Project Manager
		if ($project->usesPm()) {
			$TABS_DIRS[]='/pm/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_pm');
			(($toptab == 'pm') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Doc Manager
		if ($project->usesDocman()) {
			$TABS_DIRS[]='/docman/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_docman');
			(($toptab == 'docman') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Surveys
		if ($project->usesSurvey()) {
			$TABS_DIRS[]='/survey/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_survey');
			(($toptab == 'surveys') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		//newsbytes
		if ($project->usesNews()) {
			$TABS_DIRS[]='/news/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_news');
			(($toptab == 'news') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// CVS
		if ($project->usesCVS()) {
			$TABS_DIRS[]='/cvs/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_cvs');
			(($toptab == 'cvs') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Downloads
		$TABS_DIRS[]='/project/showfiles.php?group_id='.$group;
		$TABS_TITLES[]=$Language->getText('group','short_files');
		(($toptab == 'downloads') ? $selected=(count($TABS_TITLES)-1) : '' );

		echo $this->tabGenerator($TABS_DIRS,$TABS_TITLES,true,$selected,'#FFFFFF','100%');

	}

	function tabGenerator($TABS_DIRS,$TABS_TITLES,$nested=false,$selected=false,$sel_tab_bgcolor='WHITE',$total_width='100%') {

		$dark='BGCOLOR="#BBBBBB"';
		$light='BGCOLOR="'. $sel_tab_bgcolor .'"';

		$count=count($TABS_DIRS);
		$width=intval((100/$count));
		$return .= '

		<!-- start tabs -->

		<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="'.$total_width.'">
		<TR>';
		if ($nested) {
			$inner='-inner';
		} else {
			$inner='';
		}
		for ($i=0; $i<$count; $i++) {
			$bgcolor=(($selected==$i)?$light:$dark);
			$imgcolor=(($selected==$i)?'':'-dark');
			$return .= '
				<TD '.$bgcolor.' width=9 ALIGN=TOP VALIGN=TOP>'.
					'<DIV ALIGN="LEFT">'. html_image('tabs/topleft'.$inner.$imgcolor.'.png',9,9,array()).'</DIV></TD>
				<TD '.$bgcolor.' width="'.$width.'%" ROWSPAN=2 ALIGN="MIDDLE">'.
				'<A class="'. (($selected==$i)?'tabsellink':'tablink') .'" HREF="'. $TABS_DIRS[$i] .
					'">'. $TABS_TITLES[$i] .'</A></TD>
				<TD '.$bgcolor.' width=9 ALIGN="TOP" VALIGN="TOP">'.
				'<DIV ALIGN="RIGHT">'. html_image('tabs/topright'.$inner.$imgcolor.'.png',9,9,array()).'</DIV></TD>';
			if ($i < $count-1) {
				$return .= '<TD WIDTH=1 ROWSPAN=2><IMG SRC="'.$this->imgroot . 'clear.png" HEIGHT=2 WIDTH=1></TD>';
			}
		}

		$return .= '
		</TR>
		<TR>';
		for ($i=0; $i<$count; $i++) {
			$bgcolor=(($selected==$i)?$light:$dark);
			$return .= '<TD '.$bgcolor.'>&nbsp;</TD>';
			$return .= '<TD '.$bgcolor.'>&nbsp;</TD>';
		}
		$return .= '
		</TR>
		<TR>';
		for ($i=0; $i<$count; $i++) {
			$bgcolor=(($selected==$i)?$light:'BGCOLOR="#999999"');
			$return .= '<TD '.$bgcolor.' COLSPAN=4><IMG SRC="'.$this->imgroot . 'clear.png" HEIGHT=2 WIDTH=1></TD>';
		}

		return $return.'
		</TR>
		</TABLE>';
	}

	function searchBox() {
		global $Language,$words,$forum_id,$group_id,$atid,$exact,$type_of_search;

		// if there is no search currently, set the default
		if ( ! isset($type_of_search) ) {
			$exact = 1;
		}

		print '
		<FORM action="/search/" method="POST"'.$new_window.'>
		<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0>
		<TR><TD>
		<CENTER>
		<FONT SIZE="1">

		<SELECT name="type_of_search">';

		if ($atid && $group_id) {
			$group =& group_get_object($group_id);
			if ($group && is_object($group)) {
				$ath = new ArtifactTypeHtml($group,$atid);
				if ($ath && is_object($ath)) {
				print '
				<OPTION value="artifact"'.( $type_of_search == 'artifact' ? ' SELECTED' : '' ).'>'. $ath->getName() .'</OPTION>';
				}
			}
		} else if ($group_id && $forum_id) {
			print '
			<OPTION value="forums"'.( $type_of_search == 'forums' ? ' SELECTED' : '' ).'>This Forum</OPTION>';
		}
		print '
			<OPTION value="soft"'.( $type_of_search == 'soft' ? ' SELECTED' : '' ).'>'.$Language->getText('searchbox','softwaregroup').'</OPTION>';
		print '
			<OPTION value="skill"'.( $type_of_search == 'skill' ? ' SELECTED' : '' ).'>'.$Language->getText('searchbox','skill').'</OPTION>';
		print '
			<OPTION value="people"'.( $type_of_search == 'people' ? ' SELECTED' : '' ).'>'.$Language->getText('searchbox','people').'</OPTION>';
		print '
			</SELECT>';

//		print '<BR>';
//		print '
//		<INPUT TYPE="CHECKBOX" NAME="exact" VALUE="1"'.( $exact ? ' CHECKED' : ' UNCHECKED' ).'> Require All Words';

		print '</TD><TD>&nbsp;</TD>';
		if ( isset($forum_id) ) {
			print '
			<INPUT TYPE="HIDDEN" VALUE="'.$forum_id.'" NAME="forum_id">';
		}
		if ( isset($group_id) ) {
			print '
			<INPUT TYPE="HIDDEN" VALUE="'.$group_id.'" NAME="group_id">';
		}
		if ( isset($atid) ) {
			print '
			<INPUT TYPE="HIDDEN" VALUE="'.$atid.'" NAME="atid">';
		}
		print '<TD>';
		print '
		<INPUT TYPE="text" SIZE="12" NAME="words" VALUE="'.$words.'">';

		print '</TD><TD>&nbsp;</TD><TD>';
		print '<INPUT TYPE="submit" NAME="Search" VALUE="'.$Language->getText('searchbox','search').'">';

		print '
		</TD></TR></TABLE>';
		print '</FORM></FONT>';

	}

	/**
	 * subMenu() - Takes two array of titles and links and build a menu 
	 *
	 * @param	   array   The array of titles
	 * @param	   array   The array of title links
	 */
	function subMenu ($title_arr,$links_arr) {
		$return = '
			<P><B>';

		$count=count($title_arr);
		$count--;
		for ($i=0; $i<$count; $i++) {
			$return .= '
				<A HREF='.$links_arr[$i].'>'.$title_arr[$i].'</A> | ';
		} 
		$return .= '
				<A HREF='.$links_arr[$i].'>'.$title_arr[$i].'</A>
			</B><P>';
		return $return;
	}

}

?>
