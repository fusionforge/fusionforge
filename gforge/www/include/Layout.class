<?php
/**
 * Base layout class.
 *
 * Extends the basic Error class to add HTML functions
 * for displaying all site dependent HTML, while allowing
 * extendibility/overriding by themes via the Theme class.
 *
 * Make sure browser.php is included _before_ you create an instance of this object.
 *
 * Geoffrey Herteg, August 29, 2000
 *
 * @version   $Id$
 */
require_once ('www/search/include/SearchManager.class');

class Layout extends Error {

	/**
	 * The default main page content
	 */
	var $rootindex = 'index_std.php';

	/**
	 * The root location for images
	 *
	 * @var		string	$imgroot
	 */
	var $imgroot = '/themes/gforge/images/';
	var $COLOR_CONTENT_BACK= '#ffffff';
	var $COLOR_LTBACK1= '#eeeeef';
	var $COLOR_LTBACK2= '#fafafa';
	var $COLOR_SELECTED_TAB= '#e0e0e0';
	var $COLOR_HTMLBOX_TITLE = '#bbbbbb';
	var $COLOR_HTMLBOX_BACK = '#eaecef';
	var $FONT_CONTENT = 'helvetica';
	var $FONT_HTMLBOX_TITLE = 'helvetica';
	var $FONTCOLOR_HTMLBOX_TITLE = '#333333';
	var $FONTCOLOR_CONTENT = '#333333';
	var $FONTSIZE = 'small';
	var $FONTSIZE_SMALLER='x-small';
	var $FONTSIZE_SMALLEST='xx-small';
	var $FONTSIZE_HTMLBOX_TITLE = 'small';
	var $bgpri = array();

	/**
	 * Layout() - Constructor
	 */
	function Layout() {
		GLOBAL $bgpri;
		// Constructor for parent class...
		if ( file_exists($GLOBALS['sys_custom_path'] . '/index_std.php') )
			$this->rootindex = $GLOBALS['sys_custom_path'] . '/index_std.php';
		$this->Error();

		/*
		Set up the priority color array one time only
		*/
		$bgpri[1] = '#dadada';
		$bgpri[2] = '#dacaca';
		$bgpri[3] = '#dababa';
		$bgpri[4] = '#daaaaa';
		$bgpri[5] = '#da8a8a';

		//determine font for this platform
		if (browser_is_windows() && browser_is_ie()) {

			//ie needs smaller fonts
			$this->FONTSIZE='x-small';
			$this->FONTSIZE_SMALLER='xx-small';
			$this->FONTSIZE_SMALLEST='7pt';

		} else if (browser_is_windows()) {

			//netscape on wintel
			$this->FONTSIZE='small';
			$this->FONTSIZE_SMALLER='x-small';
			$this->FONTSIZE_SMALLEST='x-small';

		} else if (browser_is_mac()){

			//mac users need bigger fonts
			$this->FONTSIZE='medium';
			$this->FONTSIZE_SMALLER='small';
			$this->FONTSIZE_SMALLEST='x-small';

		} else {

			//linux and other users
			$this->FONTSIZE='small';
			$this->FONTSIZE_SMALLER='x-small';
			$this->FONTSIZE_SMALLEST='xx-small';

		}

		$this->FONTSIZE_HTMLBOX_TITLE = $this->FONTSIZE;
	}

	/**
	 *	createLinkToUserHome() - Creates a link to a user's home page	
	 * 
	 *	@param	string	The user's user_name
	 *	@param	string	The user's realname
	 */
	function createLinkToUserHome($user_name, $realname) {
		return '<a href="/users/'.$user_name.'/">'.$realname.'</a>';
	}

	/**
	 *	header() - "steel theme" top of page
	 *
	 * @param	array	Header parameters array
	 */
	function header($params) {
		global $Language;

		if (!$params['title']) {
			$params['title'] =  $GLOBALS['sys_name'];
		} else {
			$params['title'] =  $GLOBALS['sys_name'] . ': ' . $params['title'];
		}
		print '<?xml version="1.0" encoding="' . $Language->getEncoding(). '"?>';
		?>

<!DOCTYPE html
	PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="<?php echo $Language->getLanguageCode(); ?>">

  <head>
	<meta http-equiv="Content-Type" content="text/html; charset=<?php echo $Language->getEncoding(); ?>" />
	<title><?php echo $params['title']; ?></title>
	<link rel="alternate" title="<?php echo $GLOBALS['sys_name']; ?> - Project News Highlights RSS" href="/export/rss_sfnews.php" type="application/rss+xml"/>
	<link rel="alternate" title="<?php echo $GLOBALS['sys_name']; ?> - New Projects RSS" href="/export/rss_sfprojects.php" type="application/rss+xml"/>

	<script language="JavaScript" type="text/javascript">
	<!--

	function admin_window(adminurl) {
		AdminWin = window.open( adminurl, 'AdminWindow','scrollbars=yes,resizable=yes, toolbar=yes, height=400, width=400, top=2, left=2');
		AdminWin.focus();
	}
	function help_window(helpurl) {
		HelpWin = window.open( helpurl,'HelpWindow','scrollbars=yes,resizable=yes,toolbar=no,height=400,width=400');
	}
	// -->
	<?php plugin_hook ("javascript",false) ; ?>
	</script>
<?php
/*



	WARNING - changing this font call can affect
	INTERNATIONALIZATION


*/


		//gets font from Language Object
		$site_fonts=$GLOBALS['Language']->getFont();

	?>

<style type="text/css">
	<!--
	BODY {
		margin-top: 3;
		margin-left: 3;
		margin-right: 3;
		margin-bottom: 3;
		background-image: url("<?php echo $this->imgroot; ?>theme-top-blue.png");
	}
	ol,ul,p,body,td,tr,th,form { font-family: <?php echo $site_fonts; ?>; font-size:<?php echo $this->FONTSIZE; ?>;
		color: <?php echo $this->FONTCOLOR_CONTENT ?>; }

	h1 { font-size: x-large; font-family: <?php echo $site_fonts; ?>; }
	h2 { font-size: large; font-family: <?php echo $site_fonts; ?>; }
	h3 { font-size: medium; font-family: <?php echo $site_fonts; ?>; }
	h4 { font-size: small; font-family: <?php echo $site_fonts; ?>; }
	h5 { font-size: x-small; font-family: <?php echo $site_fonts; ?>; }
	h6 { font-size: xx-small; font-family: <?php echo $site_fonts; ?>; }

	pre,tt { font-family: courier,sans-serif }

	a:link { text-decoration:none; color: #0000be }
	a:visited { text-decoration:none; color: #0000be }
	a:active { text-decoration:none }
	a:hover { text-decoration:underline; color:red }

	.titlebar { color: black; text-decoration: none; font-weight: bold; }
	a.tablink { color: black; text-decoration: none; font-weight: bold; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	a.tablink:visited { color: black; text-decoration: none; font-weight: bold; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	a.tablink:hover { text-decoration: none; color: black; font-weight: bold; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	a.tabsellink { color: #0000be; text-decoration: none; font-weight: bold; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	a.tabsellink:visited { color: #0000be; text-decoration: none; font-weight: bold; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	a.tabsellink:hover { text-decoration: none; color: #0000be; font-weight: bold; font-size: <?php echo $this->FONTSIZE_SMALLER; ?>; }
	<?php plugin_hook ("cssstyle",$this) ; ?>
	-->
</style>
<?php plugin_hook ('cssfile',$this); ?>
</head>

<body>

<table border="0" width="100%" cellspacing="0" cellpadding="0">

	<tr>
		<td><a href="/"><?php echo html_image('logo.png',198,52,array('border'=>'0')); ?></a></td>
		<td><?php echo $this->searchBox(); ?></td>
		<td align="right"><?php
			if (session_loggedin()) {
				?>
				<b><a style="color: #FFFFFF" href="/account/logout.php"><?php echo $Language->getText('common','logout'); ?></a></b><br />
				<b><a style="color: #FFFFFF" href="/account/"><?php echo $Language->getText('common','myaccount'); ?></a></b>
				<?php
			} else {
				?>
				<b><a style="color: #FFFFFF" href="/account/login.php"><?php echo $Language->getText('common','login'); ?></a></b><br />
				<b><a style="color: #FFFFFF" href="/account/register.php"><?php echo $Language->getText('common','newaccount'); ?></a></b>
				<?php
			}

		?></td>
		<td>&nbsp;&nbsp;</td>
	</tr>

</table>

<table border="0" width="100%" cellspacing="0" cellpadding="0">

	<tr>
		<td>&nbsp;</td>
		<td colspan="3">

<?php echo $this->outerTabs($params); ?>

		</td>
		<td>&nbsp;</td>
	</tr>

	<tr>
		<td align="left" bgcolor="#E0E0E0" width="9"><img src="<?php echo $this->imgroot; ?>tabs/topleft.png" height="9" width="9" alt="" /></td>
		<td bgcolor="#E0E0E0" width="30"><img src="<?php echo $this->imgroot; ?>clear.png" width="30" height="1" alt="" /></td>
		<td bgcolor="#E0E0E0"><img src="<?php echo $this->imgroot; ?>clear.png" width="1" height="1" alt="" /></td>
		<td bgcolor="#E0E0E0" width="30"><img src="<?php echo $this->imgroot; ?>clear.png" width="30" height="1" alt="" /></td>
		<td align="right" bgcolor="#E0E0E0" width="9"><img src="<?php echo $this->imgroot; ?>tabs/topright.png" height="9" width="9" alt="" /></td>
	</tr>

	<tr>

		<!-- Outer body row -->

		<td bgcolor="#E0E0E0"><img src="<?php echo $this->imgroot; ?>clear.png" width="10" height="1" alt="" /></td>
		<td valign="top" width="99%" bgcolor="#E0E0E0" colspan="3">

			<!-- Inner Tabs / Shell -->

			<table border="0" width="100%" cellspacing="0" cellpadding="0">
<?php


if (isset($params['group']) && $params['group']) {

			?>
			<tr>
				<td>&nbsp;</td>
				<td>
				<?php

				echo $this->projectTabs($params['toptab'],$params['group']);

				?>
				</td>
				<td>&nbsp;</td>
			</tr>
			<?php

}

?>
			<tr>
				<td align="left" bgcolor="#ffffff" width="9"><img src="<?php echo $this->imgroot; ?>tabs/topleft-inner.png" height="9" width="9" alt="" /></td>
				<td bgcolor="#ffffff"><img src="<?php echo $this->imgroot; ?>clear.png" width="1" height="1" alt="" /></td>
				<td align="right" bgcolor="#ffffff" width="9"><img src="<?php echo $this->imgroot; ?>tabs/topright-inner.png" height="9" width="9" alt="" /></td>
			</tr>

			<tr>
				<td bgcolor="#ffffff"><img src="<?php echo $this->imgroot; ?>clear.png" width="10" height="1" alt="" /></td>
				<td valign="top" width="99%" bgcolor="white">

	<?php

	}

	function footer($params) {

	?>

			<!-- end main body row -->


				</td>
				<td width="10" bgcolor="#ffffff"><img src="<?php echo $this->imgroot; ?>clear.png" width="2" height="1" alt="" /></td>
			</tr>
			<tr>
				<td align="left" bgcolor="#E0E0E0" width="9"><img src="<?php echo $this->imgroot; ?>tabs/bottomleft-inner.png" height="11" width="11" alt="" /></td>
				<td bgcolor="#ffffff"><img src="<?php echo $this->imgroot; ?>clear.png" width="1" height="1" alt="" /></td>
				<td align="right" bgcolor="#E0E0E0" width="9"><img src="<?php echo $this->imgroot; ?>tabs/bottomright-inner.png" height="11" width="11" alt="" /></td>
			</tr>
			</table>

		<!-- end inner body row -->

		</td>
		<td width="10" bgcolor="#E0E0E0"><img src="<?php echo $this->imgroot; ?>clear.png" width="2" height="1" alt="" /></td>
	</tr>
	<tr>
		<td align="left" bgcolor="#E0E0E0" width="9"><img src="<?php echo $this->imgroot; ?>tabs/bottomleft.png" height="9" width="9" alt="" /></td>
		<td bgcolor="#E0E0E0" colspan="3"><img src="<?php echo $this->imgroot; ?>clear.png" width="1" height="1" alt="" /></td>
		<td align="right" bgcolor="#E0E0E0" width="9"><img src="<?php echo $this->imgroot; ?>tabs/bottomright.png" height="9" width="9" alt="" /></td>
	</tr>
</table>

<!-- PLEASE LEAVE "Powered By GForge" on your site -->
<br />
<center>
<a href="http://gforge.org/"><img src="/images/pow-gforge.png" alt="Powered By GForge Collaborative Development Environment" border="0" /></a>
</center>

<?php
	global $sys_show_source;
	global $Language;
	if ($sys_show_source) {
		global $SCRIPT_NAME;
		print '<a class="showsource" href="/source.php?file=' . $SCRIPT_NAME . '"> '.$Language->getText('source','show_source').' </a>';
	}
?>

</body>
</html>
<?php

	}

	function getRootIndex() {
		return $this->rootindex;
	}

	/**
	 * boxTop() - Top HTML box
	 *
	 * @param   string  Box title
	 * @param   bool	Whether to echo or return the results
	 * @param   string  The box background color
	 */
	function boxTop($title) {
		return '
		<!-- Box Top Start -->

		<table cellspacing="0" cellpadding="0" width="100%" border="0" background="'.$this->imgroot.'vert-grad.png">
		<tr align="center">
			<td valign="top" align="right" width="10" background="'.$this->imgroot.'box-topleft.png"><img src="'.$this->imgroot.'clear.png" width="10" height="20" /></td>
			<td width="100%" background="'.$this->imgroot.'box-grad.png"><span class="titlebar">'.$title.'</span></td>
			<td valign="top" width="10" background="'.$this->imgroot.'box-topright.png"><img src="'.$this->imgroot.'clear.png" width="10" height="20" /></td>
		</tr>
		<tr>
			<td colspan="3">
			<table cellspacing="2" cellpadding="2" width="100%" border="0">
				<tr align="left">
					<td colspan="2">

		<!-- Box Top End -->';
	}

	/**
	 * boxMiddle() - Middle HTML box
	 *
	 * @param   string  Box title
	 * @param   string  The box background color
	 */
	function boxMiddle($title) {
		return '
		<!-- Box Middle Start -->
					</td>
				</tr>
				<tr align="center">
					<td colspan="2" background="'.$this->imgroot.'box-grad.png"><span class="titlebar">'.$title.'</span></td>
				</tr>
				<tr align="left">
					<td colspan="2">
		<!-- Box Middle End -->';
	}

	/**
	 * boxBottom() - Bottom HTML box
	 *
	 * @param   bool	Whether to echo or return the results
	 */
	function boxBottom() {
		return '
			<!-- Box Bottom Start -->
					</td>
				</tr>
			</table>
			</td>
		</tr>
		</table><br />
		<!-- Box Bottom End -->';
	}

	/**
	 * boxGetAltRowStyle() - Get an alternating row style for tables
	 *
	 * @param			   int			 Row number
	 */
	function boxGetAltRowStyle($i) {
		if ($i % 2 == 0) {
			return 'background="'.$this->imgroot.'vert-grad.png"';
		} else {
			return 'background="'.$this->imgroot.'box-grad.png"';
		}
	}

	/**
	 * listTableTop() - Takes an array of titles and builds the first row of a new table.
	 *
	 * @param	   array   The array of titles
	 * @param	   array   The array of title links
	 */
	function listTableTop ($title_arr,$links_arr=false) {
		$return = '
		<table cellspacing="0" cellpadding="0" width="100%" border="0">
		<tr align="center">
	<!--		<td valign="top" align="right" width="10" background="'.$this->imgroot.'box-grad.png"><img src="'.$this->imgroot.'box-topleft.png" width="10" height="75" /></td> -->
			<td background="'.$this->imgroot.'box-grad.png">
		<table width="100%" border="0" cellspacing="1" cellpadding="2">
			<tr>';

		$count=count($title_arr);
		if ($links_arr) {
			for ($i=0; $i<$count; $i++) {
				$return .= '
				<td align="center"><a class="sortbutton" href="'.$links_arr[$i].'"><span style="color:'.
				$this->FONTCOLOR_HTMLBOX_TITLE.'"><strong>'.$title_arr[$i].'</strong></span></a></td>';
			}
		} else {
			for ($i=0; $i<$count; $i++) {
				$return .= '
				<td align="center"><span style="color:'.
				$this->FONTCOLOR_HTMLBOX_TITLE.'"><strong>'.$title_arr[$i].'</strong></span></td>';
			}
		}
		return $return.'</tr>';
	}

	function listTableBottom() {
		return '</table></td>
			<!-- <td valign="top" align="right" width="10" background="'.$this->imgroot.'box-grad.png"><img src="'.$this->imgroot.'box-topright.png" width="10" height="75" /></td> -->
			</tr></table>';
	}

	function outerTabs($params) {
		global $Language,$sys_use_trove,$sys_use_snippet,$sys_use_people;

		$TABS_DIRS[]='/';
		$TABS_DIRS[]='/my/';
		if ($sys_use_trove) {
			$TABS_DIRS[]='/softwaremap/';
		}
		if ($sys_use_snippet) {
			$TABS_DIRS[]='/snippet/';
		}
		if ($sys_use_people) {
			$TABS_DIRS[]='/people/';
		}
		$TABS_TITLES[]=$Language->getText('menu','home');
		$TABS_TITLES[]=$Language->getText('menu','mypage');
		if ($sys_use_trove) {
			$TABS_TITLES[]=$Language->getText('menu','projectree');
		}
		if ($sys_use_snippet) {
			$TABS_TITLES[]=$Language->getText('menu','code_snippet');
		}
		if ($sys_use_people) {
			$TABS_TITLES[]=$Language->getText('menu','project_help_wanted');
		}
		if (user_ismember(1,'A')) {
			$TABS_DIRS[]='/admin/';
			$TABS_TITLES[]=$Language->getText('menu','admin');
		}
		if (user_ismember($GLOBALS['sys_stats_group'])) {
			$TABS_DIRS[]='/reporting/';
			$TABS_TITLES[]=$Language->getText('menu','reporting');
		}
		if(isset($params['group']) && $params['group']) {
			// get group info using the common result set
			$project =& group_get_object($params['group']);
			if ($project && is_object($project)) {
				if ($project->isError()) {

				} elseif (!$project->isProject()) {

				} else {
					$TABS_DIRS[]='/projects/'.$project->getUnixName().'/';
					$TABS_TITLES[]=$project->getPublicName();
					$selected=count($TABS_DIRS)-1;
				}
			}
		} elseif (strstr($GLOBALS['REQUEST_URI'],'/my/') || strstr($GLOBALS['REQUEST_URI'],'/account/') || 
				strstr($GLOBALS['REQUEST_URI'],'/themes/') ) {
			$selected=array_search("/my/", $TABS_DIRS);
		} elseif (strstr($GLOBALS['REQUEST_URI'],'softwaremap')) {
			$selected=array_search("/softwaremap/", $TABS_DIRS);
		} elseif (strstr($GLOBALS['REQUEST_URI'],'/snippet/')) {
			$selected=array_search("/snippet/", $TABS_DIRS);
		} elseif (strstr($GLOBALS['REQUEST_URI'],'/people/')) {
			$selected=array_search("/people/", $TABS_DIRS);
		} elseif (strstr($GLOBALS['REQUEST_URI'],'/reporting/')) {
			$selected=array_search('/reporting/',$TABS_DIRS);
		} elseif (strstr($GLOBALS['REQUEST_URI'],'/admin/') && user_ismember(1,'A')) {
			$selected=array_search('/admin/',$TABS_DIRS);;
		} else {
			$selected=0;
		}
		if (!$this->COLOR_SELECTED_TAB) {
			$this->COLOR_SELECTED_TAB= '#e0e0e0';
		}
		echo $this->tabGenerator($TABS_DIRS,$TABS_TITLES,false,$selected,$this->COLOR_SELECTED_TAB,'100%');

	}

	/**
	 *	projectTabs() - Prints out the project tabs, contained here in case
	 *		we want to allow it to be overriden
	 *
	 *	@param	string	Is the tab currently selected
	 *	@param	string	Is the group we should look up get title info
	 */
	function projectTabs($toptab,$group) {

		global $Language;

		// get group info using the common result set
		$project =& group_get_object($group);
		if (!$project || !is_object($project)) {
			return;
		}
		if ($project->isError()) {
			//wasn't found or some other problem
			return;
		}
		if (!$project->isProject()) {
			return;
		}

		// Summary
		$TABS_DIRS[]='/projects/'. $project->getUnixName() .'/';
		$TABS_TITLES[]=$Language->getText('group','short_summary');
		(($toptab == 'home') ? $selected=(count($TABS_TITLES)-1) : '' );

		if (user_ismember($group,'A')) {
			// Project Admin
			$TABS_DIRS[]='/project/admin/?group_id='. $group;
			$TABS_TITLES[]=$Language->getText('group','short_admin');
			(($toptab == 'admin') ? $selected=(count($TABS_TITLES)-1) : '' );
		}
		/* Homepage
		$TABS_DIRS[]='http://'. $project->getHomePage();
		$TABS_TITLES[]=$Language->getText('group','short_homepage');
		*/

		// Forums
		if ($project->usesForum()) {
			$TABS_DIRS[]='/forum/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_forum');
			(($toptab == 'forums') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Artifact Tracking
		if ($project->usesTracker()) {
			$TABS_DIRS[]='/tracker/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_tracker');
			(($toptab == 'tracker' || $toptab == 'bugs' || $toptab == 'support' || $toptab == 'patch')
				? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Mailing Lists
		if ($project->usesMail()) {
			$TABS_DIRS[]='/mail/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_mail');
			(($toptab == 'mail') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Project Manager
		if ($project->usesPm()) {
			$TABS_DIRS[]='/pm/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_pm');
			(($toptab == 'pm') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Doc Manager
		if ($project->usesDocman()) {
			$TABS_DIRS[]='/docman/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_docman');
			(($toptab == 'docman') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// Surveys
		if ($project->usesSurvey()) {
			$TABS_DIRS[]='/survey/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_survey');
			(($toptab == 'surveys') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		//newsbytes
		if ($project->usesNews()) {
			$TABS_DIRS[]='/news/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_news');
			(($toptab == 'news') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// SCM systems
		if ($project->usesSCM()) {
			$TABS_DIRS[]='/scm/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_scm');
			(($toptab == 'scm') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// groupmenu_after_scm hook
		$hookParams['DIRS'] = &$TABS_DIRS;
		$hookParams['TITLES'] = &$TABS_TITLES;
		$hookParams['toptab'] = &$toptab;
		$hookParams['selected'] = &$selected;
		$hookParams['group_id'] = $group ;
				
		plugin_hook ("groupmenu_scm", $hookParams) ; 

		// Downloads
		if ($project->usesFRS()) {
			$TABS_DIRS[]='/frs/?group_id='.$group;
			$TABS_TITLES[]=$Language->getText('group','short_files');
			(($toptab == 'frs') ? $selected=(count($TABS_TITLES)-1) : '' );
		}

		// groupmenu hook
		$hookParams['DIRS'] = &$TABS_DIRS;
		$hookParams['TITLES'] = &$TABS_TITLES;
		$hookParams['toptab'] = &$toptab;
		$hookParams['selected'] = &$selected;
		$hookParams['group'] = $group;
				
		plugin_hook ("groupmenu", $hookParams) ; 

		echo $this->tabGenerator($TABS_DIRS,$TABS_TITLES,true,$selected,'white','100%');

	}

	function tabGenerator($TABS_DIRS,$TABS_TITLES,$nested=false,$selected=false,$sel_tab_bgcolor='WHITE',$total_width='100%') {

		$count=count($TABS_DIRS);
		$width=intval((100/$count));
		
		$return = '';
		
		$return .= '

		<!-- start tabs -->

		<table border="0" cellpadding="0" cellspacing="0" width="'.$total_width.'">
		<tr>';
		if ($nested) {
			$inner='bottomtab';
		} else {
			$inner='toptab';
		}
		$rowspan = '';
		for ($i=0; $i<$count; $i++) {
			if ($i == 0) {
				//
				//	this is the first tab, choose an image with end-name
				//
				$wassel=false;
				$issel=($selected==$i);
				$bgimg=(($issel)?'theme-'.$inner.'-selected-bg.png':'theme-'.$inner.'-notselected-bg.png');
		//		$rowspan=(($issel)?'rowspan="2" ' : '');

				$return .= '
					<td '.$rowspan.'valign="top" width="10" background="'.$this->imgroot . 'theme-'.$inner.'-end-'.(($issel) ? '' : 'not').'selected.png">'.
						'<img src="'.$this->imgroot . 'clear.png" height="25" width="10" alt="" /></td>'.
						'<td '.$rowspan.'background="'.$this->imgroot . $bgimg.'" width="'.$width.'%" align="center"><a class="'. (($issel)?'tabsellink':'tablink') .'" href="'.$TABS_DIRS[$i].'">'.$TABS_TITLES[$i].'</a></td>';
			} elseif ($i==$count-1) {
				//
				//	this is the last tab, choose an image with name-end
				//
				$wassel=($selected==$i-1);
				$issel=($selected==$i);
				$bgimg=(($issel)?'theme-'.$inner.'-selected-bg.png':'theme-'.$inner.'-notselected-bg.png');
		//		$rowspan=(($issel)?'rowspan="2" ' : '');
				//
				//	Build image between current and prior tab
				//
				$return .= '
					<td '.$rowspan.'colspan="2" valign="top" width="20" background="'.$this->imgroot . 'theme-'.$inner.'-'.(($wassel) ? '' : 'not').'selected-'.(($issel) ? '' : 'not').'selected.png">'.
						'<img src="'.$this->imgroot . 'clear.png" height="2" width="20" alt="" /></td>'.
						'<td '.$rowspan.'background="'.$this->imgroot . $bgimg.'" width="'.$width.'%" align="center"><a class="'. (($issel)?'tabsellink':'tablink') .'" href="'.$TABS_DIRS[$i].'">'.$TABS_TITLES[$i].'</a></td>';
				//
				//	Last graphic on right-side
				//
				$return .= '
					<td '.$rowspan.'valign="top" width="10" background="'.$this->imgroot . 'theme-'.$inner.'-'.(($issel) ? '' : 'not').'selected-end.png">'.
						'<img src="'.$this->imgroot . 'clear.png" height="2" width="10" alt="" /></td>';

			} else {
				//
				//	middle tabs
				//
				$wassel=($selected==$i-1);
				$issel=($selected==$i);
				$bgimg=(($issel)?'theme-'.$inner.'-selected-bg.png':'theme-'.$inner.'-notselected-bg.png');
		//		$rowspan=(($issel)?'rowspan="2" ' : '');
				//
				//	Build image between current and prior tab
				//
				$return .= '
					<td '.$rowspan.'colspan="2" valign="top" width="20" background="'.$this->imgroot . 'theme-'.$inner.'-'.(($wassel) ? '' : 'not').'selected-'.(($issel) ? '' : 'not').'selected.png">'.
						'<img src="'.$this->imgroot . 'clear.png" height="2" width="20" alt="" /></td>'.
						'<td '.$rowspan.'background="'.$this->imgroot . $bgimg.'" width="'.$width.'%" align="center"><a class="'. (($issel)?'tabsellink':'tablink') .'" href="'.$TABS_DIRS[$i].'">'.$TABS_TITLES[$i].'</a></td>';

			}
		}
		$return .= '</tr>';

		//
		//	Building a bottom row in this table, which will be darker
		//
		if ($selected == 0) {
			$beg_cols=0;
			$end_cols=((count($TABS_DIRS)*3)-3);
		} elseif ($selected == (count($TABS_DIRS)-1)) {
			$beg_cols=((count($TABS_DIRS)*3)-3);
			$end_cols=0;
		} else {
			$beg_cols=($selected*3);
			$end_cols=(((count($TABS_DIRS)*3)-3)-$beg_cols);
		}
		$return .= '<tr>';
		if ($beg_cols > 0) {
			$return .= '<td colspan="'.$beg_cols.'" height="1" bgcolor="#909090"><img src="'.$this->imgroot.'clear.png" height="1" width="10" /></td>';
		}
		$return .= '<td colspan="3" height="1" bgcolor="'.$sel_tab_bgcolor.'"><img src="'.$this->imgroot.'clear.png" height="1" width="10" /></td>';
		if ($end_cols > 0) {
			$return .= '<td colspan="'.$end_cols.'" height="1" bgcolor="#909090"><img src="'.$this->imgroot.'clear.png" height="1" width="10" /></td>';
		}
		$return .= '</tr>';


/*
			$bgcolor=(($selected==$i)?$light:$dark);
			$imgcolor=(($selected==$i)?'':'-dark');
			$return .= '
				<td '.$bgcolor.' width="9" valign="top">'.
					'<div align="left">'. html_image('tabs/topleft'.$inner.$imgcolor.'.png',9,9,array()).'</div></td>
				<td '.$bgcolor.' width="'.$width.'%" rowspan="2" align="center">'.
				'<a class="'. (($selected==$i)?'tabsellink':'tablink') .'" href="'. $TABS_DIRS[$i] .
					'">'. $TABS_TITLES[$i] .'</a></td>
				<td '.$bgcolor.' width="9" valign="top">'.
				'<div align="right">'. html_image('tabs/topright'.$inner.$imgcolor.'.png',9,9,array()).'</div></td>';
			if ($i < $count-1) {
				$return .= '<td width="1" rowspan="2"><img src="'.$this->imgroot . 'clear.png" height="2" width="1" alt="" /></td>';
			}
		}

		$return .= '
		</tr>
		<tr>';
		for ($i=0; $i<$count; $i++) {
			$bgcolor=(($selected==$i)?$light:$dark);
			$return .= '<td '.$bgcolor.'>&nbsp;</td>';
			$return .= '<td '.$bgcolor.'>&nbsp;</td>';
		}
		$return .= '
		</tr>
		<tr>';
		for ($i=0; $i<$count; $i++) {
			$bgcolor=(($selected==$i)?$light:'style="background-color:#999999"');
			$return .= '<td '.$bgcolor.' colspan="4"><img src="'.$this->imgroot . 'clear.png" height="2" width="1" alt="" /></td>';
		}
*/
		return $return.'
		</table> 

		<!-- end tabs -->
';
	}

	function searchBox() {
		global $Language,$words,$forum_id,$group_id,$group_project_id,$atid,$exact,$type_of_search;

		// if there is no search currently, set the default
		if ( ! isset($type_of_search) ) {
			$exact = 1;
		}

		print '
		<form action="/search/" method="get">
		<table border="0" cellpadding="0" cellspacing="0">
		<tr><td>
		<div align="center" style="font-size:smaller">';
		$parameters = array(
			SEARCH__PARAMETER_GROUP_ID => $group_id,
			SEARCH__PARAMETER_ARTIFACT_ID => $atid,
			SEARCH__PARAMETER_FORUM_ID => $forum_id,
			SEARCH__PARAMETER_GROUP_PROJECT_ID => $group_project_id
		);
		
		$searchManager =& getSearchManager();
		$searchManager->setParametersValues($parameters);
		$searchEngines =& $searchManager->getAvailableSearchEngines();
		
		echo '<select name="type_of_search">';
		for($i = 0, $max = count($searchEngines); $i < $max; $i++) {
			$searchEngine =& $searchEngines[$i];
			echo '<option value="'.$searchEngine->getType().'"'.( $type_of_search == $searchEngine->getType() ? ' selected="selected"' : '' ).'>'.$searchEngine->getLabel($parameters).'</option>'."\n";
		}
		echo '</select></div>';

//		print '<br />';
//		print '
//		<input type="CHECKBOX" name="exact" value="1"'.( $exact ? ' CHECKED' : ' UNCHECKED' ).'> Require All Words';

		print '</td><td>&nbsp;';
		$parameters = $searchManager->getParameters();
		foreach($parameters AS $name => $value) {
			print '<input type="hidden" value="'.$value.'" name="'.$name.'" />';
		}
		print '</td><td>';
		print '<input type="text" size="12" name="words" value="'.$words.'" />';

		print '</td><td>&nbsp;</td><td>';
		print '<input type="submit" name="Search" value="'.$Language->getText('searchbox','search').'" />';
		print '</td>';

		if (isset($group_id)) {
			print '
					<td width="10">&nbsp;</td>
					<td><b><a style="color: #FFFFFF" href="/search/advanced_search.php?group_id='.$group_id.'"> '.$Language->getText('searchbox', 'advanced_search').'</a></b></td>';
		}
		print '</tr></table>';
		print '</form>';

	}
	
	function advancedSearchBox($sectionsArray, $group_id, $words, $isExact) {
		global $Language;
		 // display the searchmask
		print '
		<form name="advancedsearch" action="'.$PHP_SELF.'" method="post">
		<input type="hidden" name="search" value="1"/>
		<input type="hidden" name="group_id" value="'.$group_id.'"/>
		<div align="center"><br />
			<table border="0">
				<tr>
					<td colspan ="2">
						<input type="text" size="60" name="words" value="'.stripslashes(htmlspecialchars($words)).'" />
						<input type="submit" name="submitbutton" value="'.$Language->getText('advanced_search', 'search_button').'" />
					</td>
				</tr>
				<tr>
					<td valign="top">
						<input type="radio" name="mode" value="'.SEARCH__MODE_AND.'" '.($isExact ? 'checked="checked"' : '').' />'.$Language->getText('advanced_search', 'and_search').'
					</td>
					<td>
						<input type="radio" name="mode" value="'.SEARCH__MODE_OR.'" '.(!$isExact ? 'checked="checked"' : '').' />'.$Language->getText('advanced_search', 'or_search').'
					</td>
				</tr>
			</table><br /></div>'
		.$this->createUnderSections($sectionsArray).'
		</form>';


		//create javascript methods for select none/all
		print '
		<script type="text/javascript">
			<!-- method for disable/enable checkboxes
			function setCheckBoxes(parent, checked) {


				for (var i = 0; i < document.advancedsearch.elements.length; i++)
					if (document.advancedsearch.elements[i].type == "checkbox") 
							if (document.advancedsearch.elements[i].name.substr(0, parent.length) == parent)
								document.advancedsearch.elements[i].checked = checked;
				}
			//-->
		</script>
		';

	}
	
	function createUnderSections($sectionsArray) {
		global $Language;
		$countLines = 0;
		foreach ($sectionsArray as $section) {
			if(is_array($section)) {
				$countLines += (3 + count ($section));
			} else {
				//2 lines one for section name and one for checkbox
				$countLines += 3;
			}
		}
		$breakLimit = round($countLines/3);
		$break = $breakLimit;
		$countLines = 0;
		$return = '
			<table width="100%" border="0" cellspacing="0" cellpadding="2" style="background-color:'. $this->COLOR_HTMLBOX_TITLE .'">
				<tr>
					<td>
						<table width="100%" cellspacing="0" border="0">
							<tr style="font-weight: bold; background-color:'. $this->COLOR_HTMLBOX_TITLE .'">
								<td colspan="2">'.$Language->getText('advanced_search', 'search_in').':</td>
								<td align="right">'.$Language->getText('advanced_search', 'select').' <a href="javascript:setCheckBoxes(\'\', true)">'.$Language->getText('advanced_search', 'all').'</a> / <a href="javascript:setCheckBoxes(\'\', false)">'.$Language->getText('advanced_search', 'none').'</a></td>
							</tr>
							<tr height="20" style="background-color:'. $this->COLOR_CONTENT_BACK .'">
								<td colspan="3">&nbsp;</td>
							</tr>
							<tr align="center" valign="top" style="background-color:'. $this->COLOR_CONTENT_BACK .'">
								<td>';
		foreach($sectionsArray as $key => $section) {
			$oldcountlines = $countLines;
			if (is_array($section)) {
				$countLines += (3 + count ($section));
			} else {
				$countLines += 3;
			}
				
			if ($countLines >= $break) {
				//if the next block is so large that shifting it to the next column hits the breakpoint better
				//the second part of statement (behind &&) proofs, that no 4th column is added
				if ((($countLines - $break) >= ($break - $countLines)) && ((($break + $breakLimit)/$breakLimit) <= 3)) {
					$return .= '</td><td>';
					$break += $breakLimit;
				}
			}
		
			$return .= '<table width="90%" border="0" cellpadding="1" cellspacing="0" style="background-color:'. $this->COLOR_HTMLBOX_TITLE.'">
							<tr><td><table width="100%" border="0" cellspacing="0" cellpadding="3">
							<tr style="background-color:'. $this->COLOR_HTMLBOX_TITLE .'; font-weight: bold">
								<td cellspacing="0">
									<a href="#'.$key.'">'.$Language->getText('group', $key).'</a>'
							.'	</td>
								<td align="right">'
								.$Language->getText('advanced_search', 'select').' <a href="javascript:setCheckBoxes(\''.$key.'\', true)">'.$Language->getText('advanced_search', 'all').'</a> / <a href="javascript:setCheckBoxes(\''.$key.'\', false)">'.$Language->getText('advanced_search', 'none').'</a>
								</td>
							</tr>
							<tr style="background-color:'. $this->COLOR_CONTENT_BACK.'">
								<td colspan="2">';
								
			if (!is_array($section)) {
				$return .= '		<input type="checkbox" name="'.urlencode($key).'"';
				if (isset($GLOBALS[urlencode($key)]))
					$return .= ' checked="checked" ';
				$return .= ' /></input>'.$Language->getText('group', $key).'<br />';
			}
			else
				foreach($section as $underkey => $undersection) {
					$return .= '	<input type="checkbox" name="'.urlencode($key.$underkey).'"';
					if (isset($GLOBALS[urlencode($key.$underkey)]))
						$return .= ' checked ';
					$return .= '></input>'.$undersection.'<br />';				
					
				}
				
			$return .=		'	</td>
							</tr>
						</table></td></tr></table><br />';
						
			if ($countLines >= $break) {
				if (($countLines - $break) < ($break - $countLines)) {
					$return .= '</td><td width="33%">';
					$break += $breakLimit;
				}
			}
		}
		
		return $return.'		</td>
							</tr>
						</table></td></tr></table>';
	}

	/**
	 * beginSubMenu() - Opening a submenu.
	 *
	 * @return	string	Html to start a submenu.
	 */
	function beginSubMenu () {
		$return = '
			<p><strong>';
		return $return;
	}

	/**
	 * endSubMenu() - Closing a submenu.
	 *
	 * @return	string	Html to end a submenu.
	 */
	function endSubMenu () {
		$return = '</strong></p>';
		return $return;
	}

	/**
	 * printSubMenu() - Takes two array of titles and links and builds the contents of a menu.
	 *
	 * @param	   array   The array of titles.
	 * @param	   array   The array of title links.
	 * @return	string	Html to build a submenu.
	 */
	function printSubMenu ($title_arr,$links_arr) {
		$count=count($title_arr);
		$count--;
		
		$return = '';
		
		for ($i=0; $i<$count; $i++) {
			$return .= '
				<a href="'.$links_arr[$i].'">'.$title_arr[$i].'</a> | ';
		}
		$return .= '
				<a href="'.$links_arr[$i].'">'.$title_arr[$i].'</a>';
		return $return;
	}

	/**
	 * subMenu() - Takes two array of titles and links and build a menu.
	 *
	 * @param	   array   The array of titles.
	 * @param	   array   The array of title links.
	 * @return	string	Html to build a submenu.
	 */
	function subMenu ($title_arr,$links_arr) {
		$return  = $this->beginSubMenu () ;
		$return .= $this->printSubMenu ($title_arr,$links_arr) ;
		$return .= $this->endSubMenu () ;
		return $return;
	}

	/**
	 * multiTableRow() - create a mutlilevel row in a table
	 *
	 * @param	string	the row attributes
	 * @param	array	the array of cell data, each element is an array,
	 *				  	the first item being the text,
	 *					the subsequent items are attributes (dont include
	 *					the bgcolor for the title here, that will be
	 *					handled by $istitle
	 * @param	boolean is this row part of the title ?
	 *
	 */
	 function multiTableRow($row_attr, $cell_data, $istitle) {
		$return= '
		<tr '.$row_attr;
		if ( $istitle ) {
			$return .=' align="center" bgcolor="'. $this->COLOR_HTMLBOX_TITLE .'"';
		}
		$return .= '>';
		for ( $c = 0; $c < count($cell_data); $c++ ) {
			$return .='<td ';
			for ( $a=1; $a < count($cell_data[$c]); $a++) {
				$return .= $cell_data[$c][$a].' ';
			}
			$return .= '>';
			if ( $istitle ) {
				$return .='<font color="'.$this->FONTCOLOR_HTMLBOX_TITLE.'"><strong>';
			}
			$return .= $cell_data[$c][0];
			if ( $istitle ) {
				$return .='</strong></font>';
			}
			$return .= '</td>';

		}
		$return .= '</tr>
		';

		return $return;
	}
	
	/**
	 * feedback() - returns the htmlized feedback string when an action is performed.
	 *
	 * @param string feedback string
	 * @return string htmlized feedback
	 */
	function feedback($feedback) {
		if (!$feedback) {
			return '';
		} else {
			return '
				<h3 style="color:red">'.strip_tags($feedback, '<br>').'</h3>';
		}
	}

	/**
	 * getThemeIdFromName()
	 *
	 * @param	string  the dirname of the theme
	 * @return	integer the theme id	
	 */
	function getThemeIdFromName($dirname) {
	 	$res=db_query("SELECT theme_id FROM themes WHERE dirname='$dirname'");
	        return db_result($res,0,'theme_id');
	}
}

// Local Variables:
// mode: php
// c-file-style: "bsd"
// End:

?>
