--
-- mysql2pgsql
--

--  MySQL dump 8.10
-- 
--  Host: localhost    Database: alexandria
-- --------------------------------------------------------
--  Server version	3.23.25-beta

-- 
--  Table structure for table 'activity_log'
-- 

create table activity_log (
  day integer DEFAULT '0' NOT NULL,
  hour integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  browser varchar(8) DEFAULT 'OTHER' NOT NULL,
  ver float(10) DEFAULT '0.00' NOT NULL,
  platform varchar(8) DEFAULT 'OTHER' NOT NULL,
  time integer DEFAULT '0' NOT NULL,
  page text,
  type integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'activity_log_old'
-- 

create table activity_log_old (
  day integer DEFAULT '0' NOT NULL,
  hour integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  browser varchar(8) DEFAULT 'OTHER' NOT NULL,
  ver float(10) DEFAULT '0.00' NOT NULL,
  platform varchar(8) DEFAULT 'OTHER' NOT NULL,
  time integer DEFAULT '0' NOT NULL,
  page text,
  type integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'activity_log_old_old'
-- 

create table activity_log_old_old (
  day integer DEFAULT '0' NOT NULL,
  hour integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  browser varchar(8) DEFAULT 'OTHER' NOT NULL,
  ver float(10) DEFAULT '0.00' NOT NULL,
  platform varchar(8) DEFAULT 'OTHER' NOT NULL,
  time integer DEFAULT '0' NOT NULL,
  page text,
  type integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'bug'
-- 

CREATE SEQUENCE bug_pk_seq;

create table bug (
  bug_id integer default nextval('bug_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  status_id integer DEFAULT '0' NOT NULL,
  priority integer DEFAULT '0' NOT NULL,
  category_id integer DEFAULT '0' NOT NULL,
  submitted_by integer DEFAULT '0' NOT NULL,
  assigned_to integer DEFAULT '0' NOT NULL,
  date integer DEFAULT '0' NOT NULL,
  summary text,
  details text,
  close_date integer,
  bug_group_id integer DEFAULT '0' NOT NULL,
  resolution_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (bug_id)
);

-- 
--  Table structure for table 'bug_bug_dependencies'
-- 

CREATE SEQUENCE bug_bug_dependencies_pk_seq;

create table bug_bug_dependencies (
  bug_depend_id integer default nextval('bug_bug_dependencies_pk_seq') NOT NULL,
  bug_id integer DEFAULT '0' NOT NULL,
  is_dependent_on_bug_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (bug_depend_id)
);

-- 
--  Table structure for table 'bug_canned_responses'
-- 

CREATE SEQUENCE bug_canned_responses_pk_seq;

create table bug_canned_responses (
  bug_canned_id integer default nextval('bug_canned_responses_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  title text,
  body text,
  PRIMARY KEY (bug_canned_id)
);

-- 
--  Table structure for table 'bug_category'
-- 

CREATE SEQUENCE bug_category_pk_seq;

create table bug_category (
  bug_category_id integer default nextval('bug_category_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  category_name text,
  PRIMARY KEY (bug_category_id)
);

-- 
--  Table structure for table 'bug_filter'
-- 

CREATE SEQUENCE bug_filter_pk_seq;

create table bug_filter (
  filter_id integer default nextval('bug_filter_pk_seq') NOT NULL,
  user_id integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  sql_clause text DEFAULT '' NOT NULL,
  is_active integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (filter_id)
);

-- 
--  Table structure for table 'bug_group'
-- 

CREATE SEQUENCE bug_group_pk_seq;

create table bug_group (
  bug_group_id integer default nextval('bug_group_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  group_name text DEFAULT '' NOT NULL,
  PRIMARY KEY (bug_group_id)
);

-- 
--  Table structure for table 'bug_history'
-- 

CREATE SEQUENCE bug_history_pk_seq;

create table bug_history (
  bug_history_id integer default nextval('bug_history_pk_seq') NOT NULL,
  bug_id integer DEFAULT '0' NOT NULL,
  field_name text DEFAULT '' NOT NULL,
  old_value text DEFAULT '' NOT NULL,
  mod_by integer DEFAULT '0' NOT NULL,
  date integer,
  PRIMARY KEY (bug_history_id)
);

-- 
--  Table structure for table 'bug_resolution'
-- 

CREATE SEQUENCE bug_resolution_pk_seq;

create table bug_resolution (
  resolution_id integer default nextval('bug_resolution_pk_seq') NOT NULL,
  resolution_name text DEFAULT '' NOT NULL,
  PRIMARY KEY (resolution_id)
);

-- 
--  Table structure for table 'bug_status'
-- 

CREATE SEQUENCE bug_status_pk_seq;

create table bug_status (
  status_id integer default nextval('bug_status_pk_seq') NOT NULL,
  status_name text,
  PRIMARY KEY (status_id)
);

-- 
--  Table structure for table 'bug_task_dependencies'
-- 

CREATE SEQUENCE bug_task_dependencies_pk_seq;

create table bug_task_dependencies (
  bug_depend_id integer default nextval('bug_task_dependencies_pk_seq') NOT NULL,
  bug_id integer DEFAULT '0' NOT NULL,
  is_dependent_on_task_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (bug_depend_id)
);

-- 
--  Table structure for table 'canned_responses'
-- 

CREATE SEQUENCE canned_responses_pk_seq;

create table canned_responses (
  response_id integer default nextval('canned_responses_pk_seq') NOT NULL,
  response_title varchar(25),
  response_text text,
  PRIMARY KEY (response_id)
);

-- 
--  Table structure for table 'db_images'
-- 

CREATE SEQUENCE db_images_pk_seq;

create table db_images (
  id integer default nextval('db_images_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  description text DEFAULT '' NOT NULL,
  bin_data text DEFAULT '' NOT NULL,
  filename text DEFAULT '' NOT NULL,
  filesize integer DEFAULT '0' NOT NULL,
  filetype text DEFAULT '' NOT NULL,
  width integer DEFAULT '0' NOT NULL,
  height integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (id)
);

-- 
--  Table structure for table 'doc_data'
-- 

CREATE SEQUENCE doc_data_pk_seq;

create table doc_data (
  docid integer default nextval('doc_data_pk_seq') NOT NULL,
  stateid integer DEFAULT '0' NOT NULL,
  title varchar(255) DEFAULT '' NOT NULL,
  data text DEFAULT '' NOT NULL,
  updatedate integer DEFAULT '0' NOT NULL,
  createdate integer DEFAULT '0' NOT NULL,
  created_by integer DEFAULT '0' NOT NULL,
  doc_group integer DEFAULT '0' NOT NULL,
  description text,
  language_id integer DEFAULT '1' NOT NULL,
  PRIMARY KEY (docid)
);

-- 
--  Table structure for table 'doc_groups'
-- 

CREATE SEQUENCE doc_groups_pk_seq;

create table doc_groups (
  doc_group integer default nextval('doc_groups_pk_seq') NOT NULL,
  groupname varchar(255) DEFAULT '' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (doc_group)
);

-- 
--  Table structure for table 'doc_states'
-- 

CREATE SEQUENCE doc_states_pk_seq;

create table doc_states (
  stateid integer default nextval('doc_states_pk_seq') NOT NULL,
  name varchar(255) DEFAULT '' NOT NULL,
  PRIMARY KEY (stateid)
);

-- 
--  Table structure for table 'filemodule_monitor'
-- 

CREATE SEQUENCE filemodule_monitor_pk_seq;

create table filemodule_monitor (
  id integer default nextval('filemodule_monitor_pk_seq') NOT NULL,
  filemodule_id integer DEFAULT '0' NOT NULL,
  user_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (id)
);

-- 
--  Table structure for table 'forum'
-- 

CREATE SEQUENCE forum_pk_seq;

create table forum (
  msg_id integer default nextval('forum_pk_seq') NOT NULL,
  group_forum_id integer DEFAULT '0' NOT NULL,
  posted_by integer DEFAULT '0' NOT NULL,
  subject text DEFAULT '' NOT NULL,
  body text DEFAULT '' NOT NULL,
  date integer DEFAULT '0' NOT NULL,
  is_followup_to integer DEFAULT '0' NOT NULL,
  thread_id integer DEFAULT '0' NOT NULL,
  has_followups integer DEFAULT '0',
  most_recent_date integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (msg_id)
);

-- 
--  Table structure for table 'forum_agg_msg_count'
-- 

create table forum_agg_msg_count (
  group_forum_id integer DEFAULT '0' NOT NULL,
  count integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (group_forum_id)
);

-- 
--  Table structure for table 'forum_group_list'
-- 

CREATE SEQUENCE forum_group_list_pk_seq;

create table forum_group_list (
  group_forum_id integer default nextval('forum_group_list_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  forum_name text DEFAULT '' NOT NULL,
  is_public integer DEFAULT '0' NOT NULL,
  description text,
  allow_anonymous integer DEFAULT '0' NOT NULL,
  send_all_posts_to text,
  PRIMARY KEY (group_forum_id)
);

-- 
--  Table structure for table 'forum_monitored_forums'
-- 

CREATE SEQUENCE forum_monitored_forums_pk_seq;

create table forum_monitored_forums (
  monitor_id integer default nextval('forum_monitored_forums_pk_seq') NOT NULL,
  forum_id integer DEFAULT '0' NOT NULL,
  user_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (monitor_id)
);

-- 
--  Table structure for table 'forum_saved_place'
-- 

CREATE SEQUENCE forum_saved_place_pk_seq;

create table forum_saved_place (
  saved_place_id integer default nextval('forum_saved_place_pk_seq') NOT NULL,
  user_id integer DEFAULT '0' NOT NULL,
  forum_id integer DEFAULT '0' NOT NULL,
  save_date integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (saved_place_id)
);

-- 
--  Table structure for table 'forum_thread_id'
-- 

CREATE SEQUENCE forum_thread_id_pk_seq;

create table forum_thread_id (
  thread_id integer default nextval('forum_thread_id_pk_seq') NOT NULL,
  PRIMARY KEY (thread_id)
);

-- 
--  Table structure for table 'foundry_data'
-- 

create table foundry_data (
  foundry_id integer DEFAULT '0' NOT NULL,
  freeform1_html text,
  freeform2_html text,
  sponsor1_html text,
  sponsor2_html text,
  guide_image_id integer DEFAULT '0' NOT NULL,
  logo_image_id integer DEFAULT '0' NOT NULL,
  trove_categories text,
  PRIMARY KEY (foundry_id)
);

-- 
--  Table structure for table 'foundry_news'
-- 

CREATE SEQUENCE foundry_news_pk_seq;

create table foundry_news (
  foundry_news_id integer default nextval('foundry_news_pk_seq') NOT NULL,
  foundry_id integer DEFAULT '0' NOT NULL,
  news_id integer DEFAULT '0' NOT NULL,
  approve_date integer DEFAULT '0' NOT NULL,
  is_approved integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (foundry_news_id)
);

-- 
--  Table structure for table 'foundry_preferred_projects'
-- 

-- serial identifier foundry_preferred_projects_pk_seq will likely be truncated
-- serial identifier foundry_preferred_projec_pk_seq was truncated
CREATE SEQUENCE foundry_preferred_projec_pk_seq;

create table foundry_preferred_projects (
  foundry_project_id integer default nextval('foundry_preferred_projec_pk_seq') NOT NULL,
  foundry_id integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  rank integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (foundry_project_id)
);

-- 
--  Table structure for table 'foundry_projects'
-- 

CREATE SEQUENCE foundry_projects_pk_seq;

create table foundry_projects (
  id integer default nextval('foundry_projects_pk_seq') NOT NULL,
  foundry_id integer DEFAULT '0' NOT NULL,
  project_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (id)
);

-- 
--  Table structure for table 'frs_dlstats_agg'
-- 

create table frs_dlstats_agg (
  file_id integer DEFAULT '0' NOT NULL,
  day integer DEFAULT '0' NOT NULL,
  downloads_http integer DEFAULT '0' NOT NULL,
  downloads_ftp integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'frs_dlstats_file_agg'
-- 

create table frs_dlstats_file_agg (
  file_id integer DEFAULT '0' NOT NULL,
  day integer DEFAULT '0' NOT NULL,
  downloads integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'frs_dlstats_filetotal_agg'
-- 

create table frs_dlstats_filetotal_agg (
  file_id integer DEFAULT '0' NOT NULL,
  downloads integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (file_id)
);

-- 
--  Table structure for table 'frs_dlstats_filetotal_agg_old'
-- 

-- stats_agr_tmp_fid already exists; use frs_dlstats_filetotal_agg_old_file_id instead
create table frs_dlstats_filetotal_agg_old (
  file_id integer DEFAULT '0' NOT NULL,
  downloads integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'frs_dlstats_group_agg'
-- 

-- day_idx already exists; use frs_dlstats_group_agg_day instead
create table frs_dlstats_group_agg (
  group_id integer DEFAULT '0' NOT NULL,
  day integer DEFAULT '0' NOT NULL,
  downloads integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'frs_dlstats_grouptotal_agg'
-- 

create table frs_dlstats_grouptotal_agg (
  group_id integer DEFAULT '0' NOT NULL,
  downloads integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'frs_file'
-- 

CREATE SEQUENCE frs_file_pk_seq;

create table frs_file (
  file_id integer default nextval('frs_file_pk_seq') NOT NULL,
  filename text,
  release_id integer DEFAULT '0' NOT NULL,
  type_id integer DEFAULT '0' NOT NULL,
  processor_id integer DEFAULT '0' NOT NULL,
  release_time integer DEFAULT '0' NOT NULL,
  file_size integer DEFAULT '0' NOT NULL,
  post_date integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (file_id)
);

-- 
--  Table structure for table 'frs_filetype'
-- 

CREATE SEQUENCE frs_filetype_pk_seq;

create table frs_filetype (
  type_id integer default nextval('frs_filetype_pk_seq') NOT NULL,
  name text,
  PRIMARY KEY (type_id)
);

-- 
--  Table structure for table 'frs_package'
-- 

CREATE SEQUENCE frs_package_pk_seq;

create table frs_package (
  package_id integer default nextval('frs_package_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  name text,
  status_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (package_id)
);

-- 
--  Table structure for table 'frs_processor'
-- 

CREATE SEQUENCE frs_processor_pk_seq;

create table frs_processor (
  processor_id integer default nextval('frs_processor_pk_seq') NOT NULL,
  name text,
  PRIMARY KEY (processor_id)
);

-- 
--  Table structure for table 'frs_release'
-- 

CREATE SEQUENCE frs_release_pk_seq;

create table frs_release (
  release_id integer default nextval('frs_release_pk_seq') NOT NULL,
  package_id integer DEFAULT '0' NOT NULL,
  name text,
  notes text,
  changes text,
  status_id integer DEFAULT '0' NOT NULL,
  preformatted integer DEFAULT '0' NOT NULL,
  release_date integer DEFAULT '0' NOT NULL,
  released_by integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (release_id)
);

-- 
--  Table structure for table 'frs_status'
-- 

CREATE SEQUENCE frs_status_pk_seq;

create table frs_status (
  status_id integer default nextval('frs_status_pk_seq') NOT NULL,
  name text,
  PRIMARY KEY (status_id)
);

-- 
--  Table structure for table 'group_cvs_history'
-- 

CREATE SEQUENCE group_cvs_history_pk_seq;

-- group_id_idx already exists; use group_cvs_history_group_id instead
create table group_cvs_history (
  id integer default nextval('group_cvs_history_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  user_name varchar(80) DEFAULT '' NOT NULL,
  cvs_commits integer DEFAULT '0' NOT NULL,
  cvs_commits_wk integer DEFAULT '0' NOT NULL,
  cvs_adds integer DEFAULT '0' NOT NULL,
  cvs_adds_wk integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (id)
);

-- 
--  Table structure for table 'group_history'
-- 

CREATE SEQUENCE group_history_pk_seq;

create table group_history (
  group_history_id integer default nextval('group_history_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  field_name text DEFAULT '' NOT NULL,
  old_value text DEFAULT '' NOT NULL,
  mod_by integer DEFAULT '0' NOT NULL,
  date integer,
  PRIMARY KEY (group_history_id)
);

-- 
--  Table structure for table 'group_type'
-- 

CREATE SEQUENCE group_type_pk_seq;

create table group_type (
  type_id integer default nextval('group_type_pk_seq') NOT NULL,
  name text,
  PRIMARY KEY (type_id)
);

-- 
--  Table structure for table 'groups'
-- 

CREATE SEQUENCE groups_pk_seq;

create table groups (
  group_id integer default nextval('groups_pk_seq') NOT NULL,
  group_name varchar(40),
  homepage varchar(128),
  is_public integer DEFAULT '0' NOT NULL,
  status char(1) DEFAULT 'A' NOT NULL,
  unix_group_name varchar(30) DEFAULT '' NOT NULL,
  unix_box varchar(20) DEFAULT 'shell1' NOT NULL,
  http_domain varchar(80),
  short_description varchar(255),
  cvs_box varchar(20) DEFAULT 'cvs1' NOT NULL,
  license varchar(16),
  register_purpose text,
  license_other text,
  register_time integer DEFAULT '0' NOT NULL,
  use_bugs integer DEFAULT '1' NOT NULL,
  rand_hash text,
  use_mail integer DEFAULT '1' NOT NULL,
  use_survey integer DEFAULT '1' NOT NULL,
  use_patch integer DEFAULT '1' NOT NULL,
  use_forum integer DEFAULT '1' NOT NULL,
  use_pm integer DEFAULT '1' NOT NULL,
  use_cvs integer DEFAULT '1' NOT NULL,
  use_news integer DEFAULT '1' NOT NULL,
  use_support integer DEFAULT '1' NOT NULL,
  new_bug_address text DEFAULT '' NOT NULL,
  new_patch_address text DEFAULT '' NOT NULL,
  new_support_address text DEFAULT '' NOT NULL,
  type integer DEFAULT '1' NOT NULL,
  use_docman integer DEFAULT '1' NOT NULL,
  send_all_bugs integer DEFAULT '0' NOT NULL,
  send_all_patches integer DEFAULT '0' NOT NULL,
  send_all_support integer DEFAULT '0' NOT NULL,
  new_task_address text DEFAULT '' NOT NULL,
  send_all_tasks integer DEFAULT '0' NOT NULL,
  use_bug_depend_box integer DEFAULT '1' NOT NULL,
  use_pm_depend_box integer DEFAULT '1' NOT NULL,
  PRIMARY KEY (group_id)
);

-- 
--  Table structure for table 'intel_agreement'
-- 

create table intel_agreement (
  user_id integer DEFAULT '0' NOT NULL,
  message text,
  is_approved integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (user_id)
);

-- 
--  Table structure for table 'mail_group_list'
-- 

CREATE SEQUENCE mail_group_list_pk_seq;

create table mail_group_list (
  group_list_id integer default nextval('mail_group_list_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  list_name text,
  is_public integer DEFAULT '0' NOT NULL,
  password varchar(16),
  list_admin integer DEFAULT '0' NOT NULL,
  status integer DEFAULT '0' NOT NULL,
  description text,
  PRIMARY KEY (group_list_id)
);

-- 
--  Table structure for table 'news_bytes'
-- 

CREATE SEQUENCE news_bytes_pk_seq;

create table news_bytes (
  id integer default nextval('news_bytes_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  submitted_by integer DEFAULT '0' NOT NULL,
  is_approved integer DEFAULT '0' NOT NULL,
  date integer DEFAULT '0' NOT NULL,
  forum_id integer DEFAULT '0' NOT NULL,
  summary text,
  details text,
  PRIMARY KEY (id)
);

-- 
--  Table structure for table 'patch'
-- 

CREATE SEQUENCE patch_pk_seq;

create table patch (
  patch_id integer default nextval('patch_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  patch_status_id integer DEFAULT '0' NOT NULL,
  patch_category_id integer DEFAULT '0' NOT NULL,
  submitted_by integer DEFAULT '0' NOT NULL,
  assigned_to integer DEFAULT '0' NOT NULL,
  open_date integer DEFAULT '0' NOT NULL,
  summary text,
  code text,
  close_date integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (patch_id)
);

-- 
--  Table structure for table 'patch_category'
-- 

CREATE SEQUENCE patch_category_pk_seq;

create table patch_category (
  patch_category_id integer default nextval('patch_category_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  category_name text DEFAULT '' NOT NULL,
  PRIMARY KEY (patch_category_id)
);

-- 
--  Table structure for table 'patch_history'
-- 

CREATE SEQUENCE patch_history_pk_seq;

create table patch_history (
  patch_history_id integer default nextval('patch_history_pk_seq') NOT NULL,
  patch_id integer DEFAULT '0' NOT NULL,
  field_name text DEFAULT '' NOT NULL,
  old_value text DEFAULT '' NOT NULL,
  mod_by integer DEFAULT '0' NOT NULL,
  date integer,
  PRIMARY KEY (patch_history_id)
);

-- 
--  Table structure for table 'patch_status'
-- 

CREATE SEQUENCE patch_status_pk_seq;

create table patch_status (
  patch_status_id integer default nextval('patch_status_pk_seq') NOT NULL,
  status_name text,
  PRIMARY KEY (patch_status_id)
);

-- 
--  Table structure for table 'people_job'
-- 

CREATE SEQUENCE people_job_pk_seq;

create table people_job (
  job_id integer default nextval('people_job_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  created_by integer DEFAULT '0' NOT NULL,
  title text,
  description text,
  date integer DEFAULT '0' NOT NULL,
  status_id integer DEFAULT '0' NOT NULL,
  category_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (job_id)
);

-- 
--  Table structure for table 'people_job_category'
-- 

CREATE SEQUENCE people_job_category_pk_seq;

create table people_job_category (
  category_id integer default nextval('people_job_category_pk_seq') NOT NULL,
  name text,
  private_flag integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (category_id)
);

-- 
--  Table structure for table 'people_job_inventory'
-- 

CREATE SEQUENCE people_job_inventory_pk_seq;

create table people_job_inventory (
  job_inventory_id integer default nextval('people_job_inventory_pk_seq') NOT NULL,
  job_id integer DEFAULT '0' NOT NULL,
  skill_id integer DEFAULT '0' NOT NULL,
  skill_level_id integer DEFAULT '0' NOT NULL,
  skill_year_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (job_inventory_id)
);

-- 
--  Table structure for table 'people_job_status'
-- 

CREATE SEQUENCE people_job_status_pk_seq;

create table people_job_status (
  status_id integer default nextval('people_job_status_pk_seq') NOT NULL,
  name text,
  PRIMARY KEY (status_id)
);

-- 
--  Table structure for table 'people_skill'
-- 

CREATE SEQUENCE people_skill_pk_seq;

create table people_skill (
  skill_id integer default nextval('people_skill_pk_seq') NOT NULL,
  name text,
  PRIMARY KEY (skill_id)
);

-- 
--  Table structure for table 'people_skill_inventory'
-- 

CREATE SEQUENCE people_skill_inventory_pk_seq;

create table people_skill_inventory (
  skill_inventory_id integer default nextval('people_skill_inventory_pk_seq') NOT NULL,
  user_id integer DEFAULT '0' NOT NULL,
  skill_id integer DEFAULT '0' NOT NULL,
  skill_level_id integer DEFAULT '0' NOT NULL,
  skill_year_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (skill_inventory_id)
);

-- 
--  Table structure for table 'people_skill_level'
-- 

CREATE SEQUENCE people_skill_level_pk_seq;

create table people_skill_level (
  skill_level_id integer default nextval('people_skill_level_pk_seq') NOT NULL,
  name text,
  PRIMARY KEY (skill_level_id)
);

-- 
--  Table structure for table 'people_skill_year'
-- 

CREATE SEQUENCE people_skill_year_pk_seq;

create table people_skill_year (
  skill_year_id integer default nextval('people_skill_year_pk_seq') NOT NULL,
  name text,
  PRIMARY KEY (skill_year_id)
);

-- 
--  Table structure for table 'project_assigned_to'
-- 

CREATE SEQUENCE project_assigned_to_pk_seq;

create table project_assigned_to (
  project_assigned_id integer default nextval('project_assigned_to_pk_seq') NOT NULL,
  project_task_id integer DEFAULT '0' NOT NULL,
  assigned_to_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (project_assigned_id)
);

-- 
--  Table structure for table 'project_counts_tmp'
-- 

create table project_counts_tmp (
  group_id integer,
  type text,
  count float(8)
);

-- 
--  Table structure for table 'project_counts_weekly_tmp'
-- 

create table project_counts_weekly_tmp (
  group_id integer,
  type text,
  count float(8)
);

-- 
--  Table structure for table 'project_dependencies'
-- 

CREATE SEQUENCE project_dependencies_pk_seq;

create table project_dependencies (
  project_depend_id integer default nextval('project_dependencies_pk_seq') NOT NULL,
  project_task_id integer DEFAULT '0' NOT NULL,
  is_dependent_on_task_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (project_depend_id)
);

-- 
--  Table structure for table 'project_group_list'
-- 

CREATE SEQUENCE project_group_list_pk_seq;

create table project_group_list (
  group_project_id integer default nextval('project_group_list_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  project_name text DEFAULT '' NOT NULL,
  is_public integer DEFAULT '0' NOT NULL,
  description text,
  PRIMARY KEY (group_project_id)
);

-- 
--  Table structure for table 'project_history'
-- 

CREATE SEQUENCE project_history_pk_seq;

create table project_history (
  project_history_id integer default nextval('project_history_pk_seq') NOT NULL,
  project_task_id integer DEFAULT '0' NOT NULL,
  field_name text DEFAULT '' NOT NULL,
  old_value text DEFAULT '' NOT NULL,
  mod_by integer DEFAULT '0' NOT NULL,
  date integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (project_history_id)
);

-- 
--  Table structure for table 'project_metric'
-- 

CREATE SEQUENCE project_metric_pk_seq;

create table project_metric (
  ranking integer default nextval('project_metric_pk_seq') NOT NULL,
  percentile float(8),
  group_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (ranking)
);

-- 
--  Table structure for table 'project_metric_tmp1'
-- 

CREATE SEQUENCE project_metric_tmp1_pk_seq;

create table project_metric_tmp1 (
  ranking integer default nextval('project_metric_tmp1_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  value float(8),
  PRIMARY KEY (ranking)
);

-- 
--  Table structure for table 'project_metric_weekly_tmp1'
-- 

-- serial identifier project_metric_weekly_tmp1_pk_seq will likely be truncated
-- serial identifier project_metric_weekly_tm_pk_seq was truncated
CREATE SEQUENCE project_metric_weekly_tm_pk_seq;

create table project_metric_weekly_tmp1 (
  ranking integer default nextval('project_metric_weekly_tm_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  value float(8),
  PRIMARY KEY (ranking)
);

-- 
--  Table structure for table 'project_status'
-- 

CREATE SEQUENCE project_status_pk_seq;

create table project_status (
  status_id integer default nextval('project_status_pk_seq') NOT NULL,
  status_name text DEFAULT '' NOT NULL,
  PRIMARY KEY (status_id)
);

-- 
--  Table structure for table 'project_task'
-- 

CREATE SEQUENCE project_task_pk_seq;

create table project_task (
  project_task_id integer default nextval('project_task_pk_seq') NOT NULL,
  group_project_id integer DEFAULT '0' NOT NULL,
  summary text DEFAULT '' NOT NULL,
  details text DEFAULT '' NOT NULL,
  percent_complete integer DEFAULT '0' NOT NULL,
  priority integer DEFAULT '0' NOT NULL,
  hours float(10) DEFAULT '0.00' NOT NULL,
  start_date integer DEFAULT '0' NOT NULL,
  end_date integer DEFAULT '0' NOT NULL,
  created_by integer DEFAULT '0' NOT NULL,
  status_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (project_task_id)
);

-- 
--  Table structure for table 'project_weekly_metric'
-- 

CREATE SEQUENCE project_weekly_metric_pk_seq;

create table project_weekly_metric (
  ranking integer default nextval('project_weekly_metric_pk_seq') NOT NULL,
  percentile float(8),
  group_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (ranking)
);

-- 
--  Table structure for table 'session'
-- 

create table session (
  user_id integer DEFAULT '0' NOT NULL,
  session_hash char(32) DEFAULT '' NOT NULL,
  ip_addr char(15) DEFAULT '' NOT NULL,
  time integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (session_hash)
);

-- 
--  Table structure for table 'snippet'
-- 

CREATE SEQUENCE snippet_pk_seq;

create table snippet (
  snippet_id integer default nextval('snippet_pk_seq') NOT NULL,
  created_by integer DEFAULT '0' NOT NULL,
  name text,
  description text,
  type integer DEFAULT '0' NOT NULL,
  language integer DEFAULT '0' NOT NULL,
  license text DEFAULT '' NOT NULL,
  category integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (snippet_id)
);

-- 
--  Table structure for table 'snippet_package'
-- 

CREATE SEQUENCE snippet_package_pk_seq;

create table snippet_package (
  snippet_package_id integer default nextval('snippet_package_pk_seq') NOT NULL,
  created_by integer DEFAULT '0' NOT NULL,
  name text,
  description text,
  category integer DEFAULT '0' NOT NULL,
  language integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (snippet_package_id)
);

-- 
--  Table structure for table 'snippet_package_item'
-- 

CREATE SEQUENCE snippet_package_item_pk_seq;

create table snippet_package_item (
  snippet_package_item_id integer default nextval('snippet_package_item_pk_seq') NOT NULL,
  snippet_package_version_id integer DEFAULT '0' NOT NULL,
  snippet_version_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (snippet_package_item_id)
);

-- 
--  Table structure for table 'snippet_package_version'
-- 

CREATE SEQUENCE snippet_package_version_pk_seq;

create table snippet_package_version (
  snippet_package_version_id integer default nextval('snippet_package_version_pk_seq') NOT NULL,
  snippet_package_id integer DEFAULT '0' NOT NULL,
  changes text,
  version text,
  submitted_by integer DEFAULT '0' NOT NULL,
  date integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (snippet_package_version_id)
);

-- 
--  Table structure for table 'snippet_version'
-- 

CREATE SEQUENCE snippet_version_pk_seq;

create table snippet_version (
  snippet_version_id integer default nextval('snippet_version_pk_seq') NOT NULL,
  snippet_id integer DEFAULT '0' NOT NULL,
  changes text,
  version text,
  submitted_by integer DEFAULT '0' NOT NULL,
  date integer DEFAULT '0' NOT NULL,
  code text,
  PRIMARY KEY (snippet_version_id)
);

-- 
--  Table structure for table 'stats_agg_logo_by_day'
-- 

create table stats_agg_logo_by_day (
  day integer,
  count integer
);

-- 
--  Table structure for table 'stats_agg_logo_by_group'
-- 

create table stats_agg_logo_by_group (
  day integer,
  group_id integer,
  count integer
);

-- 
--  Table structure for table 'stats_agg_pages_by_browser'
-- 

create table stats_agg_pages_by_browser (
  browser varchar(8),
  count integer
);

-- 
--  Table structure for table 'stats_agg_pages_by_day'
-- 

create table stats_agg_pages_by_day (
  day integer DEFAULT '0' NOT NULL,
  count integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'stats_agg_pages_by_day_old'
-- 

create table stats_agg_pages_by_day_old (
  day integer,
  count integer
);

-- 
--  Table structure for table 'stats_agg_site_by_day'
-- 

create table stats_agg_site_by_day (
  day integer DEFAULT '0' NOT NULL,
  count integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'stats_agg_site_by_group'
-- 

create table stats_agg_site_by_group (
  day integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  count integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'stats_agr_filerelease'
-- 

-- stats_agr_tmp_fid already exists; use stats_agr_filerelease_filerelease_id instead
-- stats_agr_tmp_gid already exists; use stats_agr_filerelease_group_id instead
create table stats_agr_filerelease (
  filerelease_id integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  downloads integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'stats_agr_project'
-- 

create table stats_agr_project (
  group_id integer DEFAULT '0' NOT NULL,
  group_ranking integer DEFAULT '0' NOT NULL,
  group_metric float(8) DEFAULT '0.00000' NOT NULL,
  developers integer DEFAULT '0' NOT NULL,
  file_releases integer DEFAULT '0' NOT NULL,
  downloads integer DEFAULT '0' NOT NULL,
  site_views integer DEFAULT '0' NOT NULL,
  logo_views integer DEFAULT '0' NOT NULL,
  msg_posted integer DEFAULT '0' NOT NULL,
  msg_uniq_auth integer DEFAULT '0' NOT NULL,
  bugs_opened integer DEFAULT '0' NOT NULL,
  bugs_closed integer DEFAULT '0' NOT NULL,
  support_opened integer DEFAULT '0' NOT NULL,
  support_closed integer DEFAULT '0' NOT NULL,
  patches_opened integer DEFAULT '0' NOT NULL,
  patches_closed integer DEFAULT '0' NOT NULL,
  tasks_opened integer DEFAULT '0' NOT NULL,
  tasks_closed integer DEFAULT '0' NOT NULL,
  help_requests integer DEFAULT '0' NOT NULL,
  cvs_checkouts integer DEFAULT '0' NOT NULL,
  cvs_commits integer DEFAULT '0' NOT NULL,
  cvs_adds integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'stats_ftp_downloads'
-- 

create table stats_ftp_downloads (
  day integer DEFAULT '0' NOT NULL,
  filerelease_id integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  downloads integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'stats_http_downloads'
-- 

create table stats_http_downloads (
  day integer DEFAULT '0' NOT NULL,
  filerelease_id integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  downloads integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'stats_project'
-- 

create table stats_project (
  month integer DEFAULT '0' NOT NULL,
  week integer DEFAULT '0' NOT NULL,
  day integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  group_ranking integer DEFAULT '0' NOT NULL,
  group_metric float(8) DEFAULT '0.00000' NOT NULL,
  developers integer DEFAULT '0' NOT NULL,
  file_releases integer DEFAULT '0' NOT NULL,
  downloads integer DEFAULT '0' NOT NULL,
  site_views integer DEFAULT '0' NOT NULL,
  subdomain_views integer DEFAULT '0' NOT NULL,
  msg_posted integer DEFAULT '0' NOT NULL,
  msg_uniq_auth integer DEFAULT '0' NOT NULL,
  bugs_opened integer DEFAULT '0' NOT NULL,
  bugs_closed integer DEFAULT '0' NOT NULL,
  support_opened integer DEFAULT '0' NOT NULL,
  support_closed integer DEFAULT '0' NOT NULL,
  patches_opened integer DEFAULT '0' NOT NULL,
  patches_closed integer DEFAULT '0' NOT NULL,
  tasks_opened integer DEFAULT '0' NOT NULL,
  tasks_closed integer DEFAULT '0' NOT NULL,
  help_requests integer DEFAULT '0' NOT NULL,
  cvs_checkouts integer DEFAULT '0' NOT NULL,
  cvs_commits integer DEFAULT '0' NOT NULL,
  cvs_adds integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'stats_project_tmp'
-- 

-- project_log_group already exists; use stats_project_tmp_group_id instead
create table stats_project_tmp (
  month integer DEFAULT '0' NOT NULL,
  week integer DEFAULT '0' NOT NULL,
  day integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  group_ranking integer DEFAULT '0' NOT NULL,
  group_metric float(8) DEFAULT '0.00000' NOT NULL,
  developers integer DEFAULT '0' NOT NULL,
  file_releases integer DEFAULT '0' NOT NULL,
  downloads integer DEFAULT '0' NOT NULL,
  site_views integer DEFAULT '0' NOT NULL,
  subdomain_views integer DEFAULT '0' NOT NULL,
  msg_posted integer DEFAULT '0' NOT NULL,
  msg_uniq_auth integer DEFAULT '0' NOT NULL,
  bugs_opened integer DEFAULT '0' NOT NULL,
  bugs_closed integer DEFAULT '0' NOT NULL,
  support_opened integer DEFAULT '0' NOT NULL,
  support_closed integer DEFAULT '0' NOT NULL,
  patches_opened integer DEFAULT '0' NOT NULL,
  patches_closed integer DEFAULT '0' NOT NULL,
  tasks_opened integer DEFAULT '0' NOT NULL,
  tasks_closed integer DEFAULT '0' NOT NULL,
  help_requests integer DEFAULT '0' NOT NULL,
  cvs_checkouts integer DEFAULT '0' NOT NULL,
  cvs_commits integer DEFAULT '0' NOT NULL,
  cvs_adds integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'stats_site'
-- 

create table stats_site (
  month integer DEFAULT '0' NOT NULL,
  week integer DEFAULT '0' NOT NULL,
  day integer DEFAULT '0' NOT NULL,
  site_views integer DEFAULT '0' NOT NULL,
  subdomain_views integer DEFAULT '0' NOT NULL,
  downloads integer DEFAULT '0' NOT NULL,
  uniq_users integer DEFAULT '0' NOT NULL,
  sessions integer DEFAULT '0' NOT NULL,
  total_users integer DEFAULT '0' NOT NULL,
  new_users integer DEFAULT '0' NOT NULL,
  new_projects integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'support'
-- 

CREATE SEQUENCE support_pk_seq;

create table support (
  support_id integer default nextval('support_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  support_status_id integer DEFAULT '0' NOT NULL,
  support_category_id integer DEFAULT '0' NOT NULL,
  priority integer DEFAULT '0' NOT NULL,
  submitted_by integer DEFAULT '0' NOT NULL,
  assigned_to integer DEFAULT '0' NOT NULL,
  open_date integer DEFAULT '0' NOT NULL,
  summary text,
  close_date integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (support_id)
);

-- 
--  Table structure for table 'support_canned_responses'
-- 

CREATE SEQUENCE support_canned_responses_pk_seq;

create table support_canned_responses (
  support_canned_id integer default nextval('support_canned_responses_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  title text,
  body text,
  PRIMARY KEY (support_canned_id)
);

-- 
--  Table structure for table 'support_category'
-- 

CREATE SEQUENCE support_category_pk_seq;

create table support_category (
  support_category_id integer default nextval('support_category_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  category_name text DEFAULT '' NOT NULL,
  PRIMARY KEY (support_category_id)
);

-- 
--  Table structure for table 'support_history'
-- 

CREATE SEQUENCE support_history_pk_seq;

create table support_history (
  support_history_id integer default nextval('support_history_pk_seq') NOT NULL,
  support_id integer DEFAULT '0' NOT NULL,
  field_name text DEFAULT '' NOT NULL,
  old_value text DEFAULT '' NOT NULL,
  mod_by integer DEFAULT '0' NOT NULL,
  date integer,
  PRIMARY KEY (support_history_id)
);

-- 
--  Table structure for table 'support_messages'
-- 

CREATE SEQUENCE support_messages_pk_seq;

create table support_messages (
  support_message_id integer default nextval('support_messages_pk_seq') NOT NULL,
  support_id integer DEFAULT '0' NOT NULL,
  from_email text,
  date integer DEFAULT '0' NOT NULL,
  body text,
  PRIMARY KEY (support_message_id)
);

-- 
--  Table structure for table 'support_status'
-- 

CREATE SEQUENCE support_status_pk_seq;

create table support_status (
  support_status_id integer default nextval('support_status_pk_seq') NOT NULL,
  status_name text,
  PRIMARY KEY (support_status_id)
);

-- 
--  Table structure for table 'supported_languages'
-- 

CREATE SEQUENCE supported_languages_pk_seq;

create table supported_languages (
  language_id integer default nextval('supported_languages_pk_seq') NOT NULL,
  name text,
  filename text,
  classname text,
  language_code char(2),
  PRIMARY KEY (language_id)
);

-- 
--  Table structure for table 'survey_question_types'
-- 

CREATE SEQUENCE survey_question_types_pk_seq;

create table survey_question_types (
  id integer default nextval('survey_question_types_pk_seq') NOT NULL,
  type text DEFAULT '' NOT NULL,
  PRIMARY KEY (id)
);

-- 
--  Table structure for table 'survey_questions'
-- 

CREATE SEQUENCE survey_questions_pk_seq;

create table survey_questions (
  question_id integer default nextval('survey_questions_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  question text DEFAULT '' NOT NULL,
  question_type integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (question_id)
);

-- 
--  Table structure for table 'survey_rating_aggregate'
-- 

create table survey_rating_aggregate (
  type integer DEFAULT '0' NOT NULL,
  id integer DEFAULT '0' NOT NULL,
  response float DEFAULT '0' NOT NULL,
  count integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'survey_rating_response'
-- 

create table survey_rating_response (
  user_id integer DEFAULT '0' NOT NULL,
  type integer DEFAULT '0' NOT NULL,
  id integer DEFAULT '0' NOT NULL,
  response integer DEFAULT '0' NOT NULL,
  date integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'survey_responses'
-- 

create table survey_responses (
  user_id integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  survey_id integer DEFAULT '0' NOT NULL,
  question_id integer DEFAULT '0' NOT NULL,
  response text DEFAULT '' NOT NULL,
  date integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'surveys'
-- 

CREATE SEQUENCE surveys_pk_seq;

create table surveys (
  survey_id integer default nextval('surveys_pk_seq') NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  survey_title text DEFAULT '' NOT NULL,
  survey_questions text DEFAULT '' NOT NULL,
  is_active integer DEFAULT '1' NOT NULL,
  PRIMARY KEY (survey_id)
);

-- 
--  Table structure for table 'system_history'
-- 

CREATE SEQUENCE system_history_pk_seq;

create table system_history (
  id integer default nextval('system_history_pk_seq') NOT NULL,
  system_news_id integer DEFAULT '0' NOT NULL,
  field_name text,
  old_value text,
  PRIMARY KEY (id)
);

-- 
--  Table structure for table 'system_machines'
-- 

CREATE SEQUENCE system_machines_pk_seq;

create table system_machines (
  id integer default nextval('system_machines_pk_seq') NOT NULL,
  machine_name text,
  description text,
  PRIMARY KEY (id)
);

-- 
--  Table structure for table 'system_news'
-- 

CREATE SEQUENCE system_news_pk_seq;

create table system_news (
  id integer default nextval('system_news_pk_seq') NOT NULL,
  status_id integer DEFAULT '0' NOT NULL,
  service_id integer DEFAULT '0' NOT NULL,
  machine_id integer DEFAULT '0' NOT NULL,
  priority integer DEFAULT '0' NOT NULL,
  posted_by integer DEFAULT '0' NOT NULL,
  summary text,
  details text,
  PRIMARY KEY (id)
);

-- 
--  Table structure for table 'system_services'
-- 

CREATE SEQUENCE system_services_pk_seq;

create table system_services (
  id integer default nextval('system_services_pk_seq') NOT NULL,
  service_name text,
  PRIMARY KEY (id)
);

-- 
--  Table structure for table 'system_status'
-- 

CREATE SEQUENCE system_status_pk_seq;

create table system_status (
  id integer default nextval('system_status_pk_seq') NOT NULL,
  status_name text,
  PRIMARY KEY (id)
);

-- 
--  Table structure for table 'theme_prefs'
-- 

create table theme_prefs (
  user_id integer DEFAULT '0' NOT NULL,
  user_theme integer DEFAULT '0' NOT NULL,
  BODY_font char(80) DEFAULT '',
  BODY_size char(5) DEFAULT '',
  TITLEBAR_font char(80) DEFAULT '',
  TITLEBAR_size char(5) DEFAULT '',
  COLOR_TITLEBAR_BACK char(7) DEFAULT '',
  COLOR_LTBACK1 char(7) DEFAULT '',
  PRIMARY KEY (user_id)
);

-- 
--  Table structure for table 'themes'
-- 

CREATE SEQUENCE themes_pk_seq;

create table themes (
  theme_id integer default nextval('themes_pk_seq') NOT NULL,
  dirname varchar(80),
  fullname varchar(80),
  PRIMARY KEY (theme_id)
);

-- 
--  Table structure for table 'tmp_projs_releases_tmp'
-- 

create table tmp_projs_releases_tmp (
  year integer DEFAULT '0' NOT NULL,
  month integer DEFAULT '0' NOT NULL,
  total_proj integer DEFAULT '0' NOT NULL,
  total_releases integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'top_group'
-- 

create table top_group (
  group_id integer DEFAULT '0' NOT NULL,
  group_name varchar(40),
  downloads_all integer DEFAULT '0' NOT NULL,
  rank_downloads_all integer DEFAULT '0' NOT NULL,
  rank_downloads_all_old integer DEFAULT '0' NOT NULL,
  downloads_week integer DEFAULT '0' NOT NULL,
  rank_downloads_week integer DEFAULT '0' NOT NULL,
  rank_downloads_week_old integer DEFAULT '0' NOT NULL,
  userrank integer DEFAULT '0' NOT NULL,
  rank_userrank integer DEFAULT '0' NOT NULL,
  rank_userrank_old integer DEFAULT '0' NOT NULL,
  forumposts_week integer DEFAULT '0' NOT NULL,
  rank_forumposts_week integer DEFAULT '0' NOT NULL,
  rank_forumposts_week_old integer DEFAULT '0' NOT NULL,
  pageviews_proj integer DEFAULT '0' NOT NULL,
  rank_pageviews_proj integer DEFAULT '0' NOT NULL,
  rank_pageviews_proj_old integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'trove_cat'
-- 

CREATE SEQUENCE trove_cat_pk_seq;

create table trove_cat (
  trove_cat_id integer default nextval('trove_cat_pk_seq') NOT NULL,
  version integer DEFAULT '0' NOT NULL,
  parent integer DEFAULT '0' NOT NULL,
  root_parent integer DEFAULT '0' NOT NULL,
  shortname varchar(80),
  fullname varchar(80),
  description varchar(255),
  count_subcat integer DEFAULT '0' NOT NULL,
  count_subproj integer DEFAULT '0' NOT NULL,
  fullpath text DEFAULT '' NOT NULL,
  fullpath_ids text,
  PRIMARY KEY (trove_cat_id)
);

-- 
--  Table structure for table 'trove_group_link'
-- 

CREATE SEQUENCE trove_group_link_pk_seq;

create table trove_group_link (
  trove_group_id integer default nextval('trove_group_link_pk_seq') NOT NULL,
  trove_cat_id integer DEFAULT '0' NOT NULL,
  trove_cat_version integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  trove_cat_root integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (trove_group_id)
);

-- 
--  Table structure for table 'trove_treesums'
-- 

CREATE SEQUENCE trove_treesums_pk_seq;

create table trove_treesums (
  trove_treesums_id integer default nextval('trove_treesums_pk_seq') NOT NULL,
  trove_cat_id integer DEFAULT '0' NOT NULL,
  limit_1 integer DEFAULT '0' NOT NULL,
  subprojects integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (trove_treesums_id)
);

-- 
--  Table structure for table 'unix_uids'
-- 

CREATE SEQUENCE unix_uids_pk_seq;

create table unix_uids (
  id integer default nextval('unix_uids_pk_seq') NOT NULL,
  PRIMARY KEY (id)
);

-- 
--  Table structure for table 'user_bookmarks'
-- 

CREATE SEQUENCE user_bookmarks_pk_seq;

create table user_bookmarks (
  bookmark_id integer default nextval('user_bookmarks_pk_seq') NOT NULL,
  user_id integer DEFAULT '0' NOT NULL,
  bookmark_url text,
  bookmark_title text,
  PRIMARY KEY (bookmark_id)
);

-- 
--  Table structure for table 'user_diary'
-- 

CREATE SEQUENCE user_diary_pk_seq;

create table user_diary (
  id integer default nextval('user_diary_pk_seq') NOT NULL,
  user_id integer DEFAULT '0' NOT NULL,
  date_posted integer DEFAULT '0' NOT NULL,
  summary text,
  details text,
  is_public integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (id)
);

-- 
--  Table structure for table 'user_diary_monitor'
-- 

CREATE SEQUENCE user_diary_monitor_pk_seq;

create table user_diary_monitor (
  monitor_id integer default nextval('user_diary_monitor_pk_seq') NOT NULL,
  monitored_user integer DEFAULT '0' NOT NULL,
  user_id integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (monitor_id)
);

-- 
--  Table structure for table 'user_group'
-- 

CREATE SEQUENCE user_group_pk_seq;

create table user_group (
  user_group_id integer default nextval('user_group_pk_seq') NOT NULL,
  user_id integer DEFAULT '0' NOT NULL,
  group_id integer DEFAULT '0' NOT NULL,
  admin_flags char(16) DEFAULT '' NOT NULL,
  bug_flags integer DEFAULT '0' NOT NULL,
  forum_flags integer DEFAULT '0' NOT NULL,
  project_flags integer DEFAULT '2' NOT NULL,
  patch_flags integer DEFAULT '1' NOT NULL,
  support_flags integer DEFAULT '1' NOT NULL,
  doc_flags integer DEFAULT '0' NOT NULL,
  cvs_flags integer DEFAULT '1' NOT NULL,
  member_role integer DEFAULT '100' NOT NULL,
  release_flags integer DEFAULT '0' NOT NULL,
  PRIMARY KEY (user_group_id)
);

-- 
--  Table structure for table 'user_metric'
-- 

CREATE SEQUENCE user_metric_pk_seq;

create table user_metric (
  ranking integer default nextval('user_metric_pk_seq') NOT NULL,
  user_id integer DEFAULT '0' NOT NULL,
  times_ranked integer DEFAULT '0' NOT NULL,
  avg_raters_importance float(10) DEFAULT '0.00000000' NOT NULL,
  avg_rating float(10) DEFAULT '0.00000000' NOT NULL,
  metric float(10) DEFAULT '0.00000000' NOT NULL,
  percentile float(10) DEFAULT '0.00000000' NOT NULL,
  importance_factor float(10) DEFAULT '0.00000000' NOT NULL,
  PRIMARY KEY (ranking)
);

-- 
--  Table structure for table 'user_metric0'
-- 

CREATE SEQUENCE user_metric0_pk_seq;

create table user_metric0 (
  ranking integer default nextval('user_metric0_pk_seq') NOT NULL,
  user_id integer DEFAULT '0' NOT NULL,
  times_ranked integer DEFAULT '0' NOT NULL,
  avg_raters_importance float(10) DEFAULT '0.00000000' NOT NULL,
  avg_rating float(10) DEFAULT '0.00000000' NOT NULL,
  metric float(10) DEFAULT '0.00000000' NOT NULL,
  percentile float(10) DEFAULT '0.00000000' NOT NULL,
  importance_factor float(10) DEFAULT '0.00000000' NOT NULL,
  PRIMARY KEY (ranking)
);

-- 
--  Table structure for table 'user_preferences'
-- 

create table user_preferences (
  user_id integer DEFAULT '0' NOT NULL,
  preference_name varchar(20),
  preference_value varchar(20),
  set_date integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'user_ratings'
-- 

create table user_ratings (
  rated_by integer DEFAULT '0' NOT NULL,
  user_id integer DEFAULT '0' NOT NULL,
  rate_field integer DEFAULT '0' NOT NULL,
  rating integer DEFAULT '0' NOT NULL
);

-- 
--  Table structure for table 'users'
-- 

CREATE SEQUENCE users_pk_seq;

create table users (
  user_id integer default nextval('users_pk_seq') NOT NULL,
  user_name text DEFAULT '' NOT NULL,
  email text DEFAULT '' NOT NULL,
  user_pw varchar(32) DEFAULT '' NOT NULL,
  realname varchar(32) DEFAULT '' NOT NULL,
  status char(1) DEFAULT 'A' NOT NULL,
  shell varchar(20) DEFAULT '/bin/bash' NOT NULL,
  unix_pw varchar(40) DEFAULT '' NOT NULL,
  unix_status char(1) DEFAULT 'N' NOT NULL,
  unix_uid integer DEFAULT '0' NOT NULL,
  unix_box varchar(10) DEFAULT 'shell1' NOT NULL,
  add_date integer DEFAULT '0' NOT NULL,
  confirm_hash varchar(32),
  mail_siteupdates integer DEFAULT '0' NOT NULL,
  mail_va integer DEFAULT '0' NOT NULL,
  authorized_keys text,
  email_new text,
  people_view_skills integer DEFAULT '0' NOT NULL,
  people_resume text DEFAULT '' NOT NULL,
  timezone varchar(64) DEFAULT 'GMT',
  language integer DEFAULT '1' NOT NULL,
  PRIMARY KEY (user_id)
);

