Installation of GForge has been made much easier than the old SF2.x
codebase.  A great deal of unnecessary code and scalability hacks have
been removed to make the installation and use of GForge practical for
just about any Linux admin.

*
*  PROFESSIONAL SUPPORT
*
*  If you need professional support, customization,  
*  or advanced reporting tools for GForge, visit 
*  http://gforgegroup.com/
*

BASICS OF INSTALLATION
----------------------

You will need: 
	PostgreSQL 7.3 or higher ( http://postgresql.org/ )
	PHP 4.x or higher ( http://www.php.net/ )
	Apache 1.2x or higher ( http://www.apache.org/ )

	Optional (but highly recommended)
	PHP Accelerator ( http://www.php-accelerator.co.uk/ )

	Optional Mailing list support:
	GNU MailMan ( http://www.gnu.org/software/mailman/ )
	Python ( http://www.python.org/ )

	Optional Gantt Charting and Graphing Support:
	JPGraph: ( http://www.aditus.nu/jpgraph/ )

        Optional (required for some plugins):
        Perl ( http://www.perl.org/ )
        the DBI module ( http://dbi.perl.org/ ) and associated DBD::Pg

Compile and install PostgreSQL, then PHP/Apache as per the
instructions. PHP should be compiled into Apache, as well as compiled
as a separate CGI. When compiling PHP, don't forget the --with-pgsql
option for PostgreSQL support.

If you are going to use Gantt charting and other graphing features,
your PHP must be compiled --with-gd. Follow the JPGraph installation
instructions (extra fonts for JPGraph are not necessary). Be sure your
/etc/gforge/local.inc file contains the proper path to the jpgraph/src/
directory.

Install Python and MailMan as per the instructions.

OVERVIEW
--------

GForge has a lot of different pieces touching a lot of different components
in the system. Cronjobs are required to maintain the system, touching lots 
of files on a daily and hourly basis, including /etc/* system files.

The plugins that now manage the CVS and SVN functionality have made 
installation slightly harder because even more files have to be moved into
place during installation.

The manual installation of gforge is documented below. Be sure to follow 
each step carefully, check the forums for frequently asked questions, 
and ask your Apache, mailman, and postgresql installation questions in the
corresponding mailing lists rather than on the gforge forums where little
help is available.

  CVS Overview
  ------------
  CVS is now managed via the scmcvs plugin which is included in the 
plugins/ directory in the tarball downloaded from gforge.org. Most 
of the files in scmcvs are intended for auto-installation on debian 
systems and DO NOT APPLY to the majority of users. The scmcvs plugin 
is activated by default in the gforge.sql database and all that you 
have to do is move the scmcvs/etc/plugins/* files to /etc/gforge/plugins/* 
and possibly modify the files slightly. In addition, the scmcvs/www/* files
should be placed in gforge/www/plugins/scmcvs/*

  Cronjobs for CVS are included in cronjobs/crontab.in, but are commented 
out by default for your security. cronjobs/cvs-cron/* contains the files 
that are executed hourly to build permissions and create blank cvs trees.
Make sure these files are executed as root, and have proper execution bits
set.  Each of these cronjobs has configuration parameters which you may 
have to edit manually for your specific system.

  SVN Overview
  ------------
  SVN is also managed via plugin - the scmsvn plugin is included and 
activated by default in gforge. As with scmcvs/ you have to move the 
scmcvs/etc/plugins/* files to /etc/gforge/plugins/* and may have to
make minor modifications for your specific setup.

  There are two ways to manage SVN - one is to have SVN over DAV and the 
other is to have SVN over SSH just as you do with CVS. If you choose 
to use DAV, you will need the mod_auth_gforge library compiled and installed 
in your apache and the appropriate VHOST settings in your httpd.conf. 
mod_auth_gforge is available from gforge.org. The cronjobs to manage
SVN are in cronjobs/dav-svn/ and so are sample httpd.conf VHOST settings.
Each of these cronjobs has configuration parameters which you may have to 
edit manually for your specific system.

  Configuring svnserv for svn-over-ssh:
  http://svnbook.red-bean.com/en/1.0/ch06s03.html
  http://www.logemann.org/day/archives/000099.html
  http://bitworking.org/news/Getting_subversion_svn_ssh____to_work_with_PuTTY


  CVSTracker Overview
  -------------------
  The cvstracker plugin allows for some integration between CVS 
commits and the bug tracker and task manager. So, for example, 
when you commit, you can reference bug and task IDs in your 
commit message and have the commit linked to the corresponding
bug and task.

  See the plugins/cvstracker/README file for details. This 
plugin is enabled by default in the gforge.sql database file. 
As with the other plugins, you may manually place the config 
files in /etc/gforge/plugins/cvstracker/ and uncomment the 
cronjob in crontab.in.

  You will also have to copy the newcommit.php file to your 
gforge www/plugins/cvstracker/ dir

  PHP
  ---
  The cronjobs require the PHP CGI to be installed and the php.ini 
file to be properly configured with your include_path OR edit the 
crontab.in file to set your include path.

  In addition, you may have to symlink /usr/bin/php to /usr/bin/php4, 
which is where the cronjobs expect your PHP CGI to be located.

  Mailman
  -------

  Mailman is needed to create and use mailing lists with gforge. 
Mailman is frequently installed in /var/mailman/ and the sample 
vhost shown below will work with this setup without any changes.

  Cronjobs for mailman are located in cronjobs/mail/*

  cronjobs/mail/mailing_lists_create.php is used obviously to 
create new mailing lists. You may have to edit the file to change 
the location of the mailman bin/ directory.

  For all problems with mailman installation and use, contact 
the mailman mailing lists for help.



STARTING THE INSTALL
--------------------



BLANK DATABASE - FRESH INSTALL
------------------------------

First, make sure you create a 'gforge' user at the unix command prompt:

# adduser gforge

Then create a postgres account for gforge:

[root]# su - postgres

[postgres]# createuser -A -d -E -P gforge

and enter the password for the user.

You may also need to add Pl/Pgsql as a language.  To do so:

[postgres]$ createlang plpgsql template1

[postgres]$ exit

[root]# su - gforge
[gforge]# createdb gforge
[gforge]# psql gforge < db/gforge.sql > import.log

Be sure to watch for any errors during import and check the 
import.log file. For postgresql 7.3 users, you will have to 
use the db/gforge-pgsql7.3.sql file, since the postgres team 
has broken compatibility between releases yet again.

Now, find your pg_hba.conf file and edit it to include this line:

local    all         all                                             md5

You will have to restart postgresql after changing this line so it can 
pick up your configuration change. Usually you can restart by 

[root]# /etc/init.d/postgresql restart


UPGRADING DATABASE - EXISTING INSTALL
-------------------------------------

You will upgrade your database from a prior version by applying 
each database schema change, in order, and applying it only once.
Only apply the schema changes in the db/ folder that are dated 
AFTER your currently installed version!!

This process will apply your upgrades. BE SURE TO WATCH FOR ERRORS!

[gforge]# psql gforge < db/XXXXXXXXXX.sql >> import.log

There may also be migration scripts that have to be run. In the 
db/ folder, look for migrate-*.php scripts and run them.


WEB SETUP - MANUAL INSTALLATION
-------------------------------

The following are sample commands commonly issued for a manual installation:

tar -xjf gforge-4.0.2.tar.bz2
mv gforge-4.0.2 /var/www/
cd /var/www/
ln -s gforge-4.0.2 gforge
mkdir mailman
mkdir uploads
mkdir jpgraph
mkdir scmtarballs
mkdir scmsnapshots
mkdir localizationcache

#Create default location for SVN repositories
mkdir /var/svn

#Create default location for CVS repositories
mkdir /cvsroot

# Optional - Set up some basic files for SVN-over-DAV only
mkdir svn
cp gforge/cronjobs/dav-svn/www/* svn/

# Optional - Set up basic index.php file for CVS vhost if desired
mkdir cvs
cp gforge/cronjobs/cvs-cron/www/* cvs/

#restricted shell for cvs accounts
cp gforge/cronjobs/cvs-cron/cvssh.pl /bin/
chmod 755 /bin/cvssh.pl

#copy cvsweb and make sure it's in the local.inc sys_scmweb path
cp gforge/plugins/scmcvs/cgi-bin/cvsweb /etc/gforge/

tar -xzf jpgraph-1.9.1.tar.gz
mv jpgraph-1.9.1/src/* /var/www/jpgraph/

#Create default location for gforge config files
mkdir /etc/gforge
cp gforge/etc/local.inc.example /etc/gforge/local.inc
chown -R apache:apache /etc/gforge/
chmod 600 /etc/gforge/local.inc

#copy the scmcvs plugin config to /etc/gforge/
cp -R gforge/plugins/scmcvs/etc/plugins/ /etc/gforge/

#you will likely have to edit the cvsweb.conf file
vim /etc/gforge/plugins/scmcvs/cvsweb.conf

to change the cvsroot location:

'gforge'  => ['GForge-CVS',       '/cvsroot/'],

#copy the scmsvn config files to /etc/gforge/
cp -R gforge/plugins/scmsvn/etc/plugins/scmsvn/ /etc/gforge/plugins/

#copy the cvstracker config files to /etc/gforge/
cp -R gforge/plugins/cvstracker/etc/plugins/cvstracker/ /etc/gforge/plugins/
cp -R gforge/plugins/cvstracker/www/ gforge/www/plugins/cvstracker/

#make sure the cvs crons are executable
cd www/gforge/cronjobs/cvs-cron/
chmod 755 gforge/cronjobs/cvs-cron/*.php
chmod 755 gforge/cronjobs/cvs-cron/*.sh
chown -R apache:apache /var/www


The following will provide an example httpd.conf for apache:

cp etc/gforge/gforge-httpd.conf.example /etc/gforge/httpd.conf

Now edit that file to change the hostnames to match your setup.

Apache will need to have a line added to its httpd.conf:

Include /etc/gforge/httpd.conf

Restart apache when you are done editing the file so the 
changes can be picked up.


PHP setup
---------

You may also add the include_path to the php.ini, as it will be
necessary for your php cgi to run the cron jobs. The crontab.in 
file also can be modified to include this path as well.

register_globals = On
magic_quotes_gpc = On
file_uploads = On
include_path = ".:/var/www/gforge/:/var/www/gforge/www/include/:/etc/gforge/"


FRS - File Release System
-------------------------

FRS has been radically simplified. Simply create a directory and make
it owned by the webserver-user. Usually "chown -R nobody:nobody mydir"
will do the trick.

This directory will be referenced in the GForge Config File as $sys_upload_dir


GForge Config File
--------------

In the GForge distribution, you will find etc/local.inc. Move it to
/etc/gforge/local.inc and edit all of the settings.

Usually, you will want to make it readable only by apache:

[root]# chown -R apache:apache /etc/gforge/
[root]# chmod 600 /etc/gforge/local.inc


Site Admin
----------

Site admins are anyone who is an admin of group_id=1

To give the first user "Site Admin" privileges, register a new user,
and confirm it via the email link. Then enter the postgres command
line and issue these commands:

[gforge]# psql gforge

psql> SELECT user_id FROM users WHERE user_name='******MY NEW USERNAME*********';

The result of that query will be put into this next query:

psql> insert into user_group (user_id,group_id,admin_flags) values (*****YOUR NEW NUMERIC USER ID*****,1,'A');


Mail Aliases
------------

/etc/aliases - add this line and run "newaliases"
noreply:        /dev/null


PEER RATINGS
------------

Add yourself, and any others you wish, to the "Peer Ratings" project,
which should be at /projects/peerrating/ on the website. Make yourself
an "admin" of the project, and then proceed to "rate" other users on
the website.

Members of the "Peer Ratings" project, who are "admins" of the project
become the first trusted users. This is the only way to prime the pump
for the peer ratings system.


CRON JOBS
---------

Cron jobs are in the cronjobs/ directory and the README file contains
a sample crontab. This gives you the basic cronjobs for updating
certain statistics and data on the site.

/cronjobs/cvs-cron/ contains scripts useful for creating blank cvs 
trees and managing the /etc/groups /etc/passwd and /etc/shadow files.
See /cronjobs/README.root for more info.

/cronjobs/mail/ contains files useful for the creation of new mailing 
lists in mailman and creating the /etc/aliases file.


[root]# adduser anonymous
[root]# cp /etc/aliases /etc/aliases.org
[root]# cp /etc/shadow /etc/shadow.org
[root]# cp /etc/passwd /etc/passwd.org
[root]# cp /etc/group /etc/group.org
[root]# mkdir /cvsroot

**************************************************************************
WARNING!!! the following command will blow away any existing root crontab.
**************************************************************************

[root]# crontab cronjobs/crontab.in

Now edit the paths to the cron scripts:

[root]# crontab -e

IMPORTANT!!!! - the cvs-cron/usergroup.php cron script will meddle 
with your /etc/passwd, /etc/group, and /etc/shadow files. By default,
this cron will save these files with a .new extension. You will have 
to edit the cron script to remove the .new extension, but you must 
make sure that it is properly generating your files or your server 
could be unusable.

Once you have manually run the usergroup.php file, look at the 
/etc/*.new files and verify that they contain sensisble information.
When you are confident they are right, you can edit usergroup.php 
to remove the .new extension and uncomment the cronjobs.


JPGRAPH
-------

When you get your preferred version of jpgraph installed, you will 
have to edit one setting in jpgraph.php: DEFINE("USE_CACHE",false);


PERL
----

If you want to use some of the Perl scripts that access the database,
you'll need the DBI and DBD::Pg Perl modules.  On Red Hat systems (and
variants), you can get them by installing the libdbi and libdbd-pgsql
packages.  On Debian systems (and variants), the packages are called
libdbi-perl and libdbd-pg-perl.

  You'll also need to install utils/include.pl to
/usr/lib/gforge/lib/, and put some configuration variables into
/etc/gforge/local.pl.  In particular, you'll need something like:
,----[ local.pl ]
| $sys_default_domain = 'gforge.example.com' ;
| $sys_dbhost = '192.168.12.34' ;
| $sys_dbname = 'gforge' ;
| $sys_dbuser = 'gforge' ;
| $sys_dbpasswd = 'p455w0rd' ;
`----


MOST COMMON PROBLEMS
--------------------

Q: I get a blank page when I visit http://gforge.company.com/

A: Most often you are missing the php-pgsql library that lets PHP
talk to the postgres database. Find a php-pgsql RPM or recompile 
php to have pgql support.

If you're sure you have php-pgsql support, you can edit 
common/include/database.php and remove the @ symbol from
this line:

	$conn = @pg_connect( 

So that it looks like:

	$conn = pg_connect(

This will let debug output dump to the screen and may let you find
the problem. Search the forums for more solutions.


Q: "Error Occurred In the Logger" or other database permission problems

A: As stated in the installation instructions, the database must be created, 
owned, and accessed by the gforge user. This user is the only one who will 
have total acess to all the tables. Any other user would have to be specifically 
granted permissions with the GRANT commands in postgres.


Q: Reporting or time tracking doesn't work

A: Go to the reporting tab and scroll down so you can choose 
"Initialize/Rebuild Reporting Tables"

You may also be missing GD support or be missing JPGraph or have it installed 
improperly. The jpgraph/src/ directory should be specified accurately in your 
local.inc file, and you should include a / at the end of the path specified.
In addition, you should modify jpgraph.php to set USE_CACHE=false


Q: How do I upgrade my database?

A: As stated above, you must apply the changes that are listed in date order 
in the db/ directory to your database. Only the changes that are not already 
in your old db/ directory should be applied, and they should be applied and 
checked IN ORDER.


Q: I'm getting an error about BaseLanguage.class not being found.

A: Make sure your localization path is correctly specified in the local.inc 
file and that it is readable AND writable by the apache user.


Q: When I click on "/projects/" or "/users/" links, I get the source code
instead of the page I expected.

A: As shown in the example httpd.conf files above, you may have to switch 
to using the <Files> or <Location> directives depending on your server
version.


Q: How do I backup GForge? 

A: The only proper way to backup the gforge database is with pg_dump. 
Any attempt to backup the filesystem while pgsql is running will result
in a useless and corrupt backup. You can backup CVS trees using tar as 
long as they are not actively and heavily used during the backup. 
Mailman and the FRS uploads dir can also be backed up with tar.


Q: Any time i enter an apostrophe in a text box, i get a parse error

A: As stated in the instructions above, you should have magic_quotes_gpc=On
in your php.ini file


Q: Large uploads into FRS or the doc manager fail.

A: Apache and the php.ini file need to have upload limits and possibly 
memory limits increased.



