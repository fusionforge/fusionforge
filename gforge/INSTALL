Installation of GForge has been made much easier than the old SF2.x
codebase.  A great deal of unnecessary code and scalability hacks have
been removed to make the installation and use of GForge practical for
just about any Linux admin.

*
*  PROFESSIONAL SUPPORT
*
*  If you need professional support, customization,  
*  or advanced reporting tools for GForge, visit 
*  http://gforgegroup.com/
*

BASICS OF INSTALLATION
----------------------

You will need: 
	PostgreSQL 7.3 or higher ( http://postgresql.org/ )
	PHP 4.x or higher ( http://www.php.net/ )
	Apache 1.2x or higher ( http://www.apache.org/ )

	Optional (but highly recommended)
	PHP Accelerator ( http://www.php-accelerator.co.uk/ )

	Optional Mailing list support:
	GNU MailMan ( http://www.gnu.org/software/mailman/ )
	Python ( http://www.python.org/ )

	Optional Gantt Charting and Graphing Support:
	JPGraph: ( http://www.aditus.nu/jpgraph/ )

        Optional (required for some plugins):
        Perl ( http://www.perl.org/ )
        the DBI module ( http://dbi.perl.org/ ) and associated DBD::Pg

Compile and install PostgreSQL, then PHP/Apache as per the
instructions. PHP should be compiled into Apache, as well as compiled
as a separate CGI. When compiling PHP, don't forget the --with-pgsql
option for PostgreSQL support.

If you are going to use Gantt charting and other graphing features,
your PHP must be compiled --with-gd. Follow the JPGraph installation
instructions (extra fonts for JPGraph are not necessary). Be sure your
/etc/gforge/local.inc file contains the proper path to the jpgraph/src/
directory.

Install Python and MailMan as per the instructions.

OVERVIEW
--------

GForge has a lot of different pieces touching a lot of different components
in the system. Cronjobs are required to maintain the system, touching lots 
of files on a daily and hourly basis, including /etc/* system files.

The plugins that now manage the CVS and SVN functionality have made 
installation slightly harder because even more files have to be moved into
place during installation.

The manual installation of gforge is documented below. Be sure to follow 
each step carefully, check the forums for frequently asked questions, 
and ask your Apache, mailman, and postgresql installation questions in the
corresponding mailing lists rather than on the gforge forums where little
help is available.

  CVS
  ---
  CVS is now managed via the scmcvs plugin which is included in the 
plugins/ directory in the tarball downloaded from gforge.org. Most 
of the files in scmcvs are intended for auto-installation on debian 
systems and DO NOT APPLY to the majority of users. The scmcvs plugin 
is activated by default in the gforge.sql database and all that you 
have to do is move the scmcvs/etc/plugins/* files to /etc/gforge/plugins/* 
and possibly modify the files slightly. In addition, the scmcvs/www/* files
should be placed in gforge/www/plugins/scmcvs/*

  Cronjobs for CVS are included in cronjobs/crontab.in, but are commented 
out by default for your security. cronjobs/cvs-cron/* contains the files 
that are executed hourly to build permissions and create blank cvs trees.
Make sure these files are executed as root, and have proper execution bits
set.  Each of these cronjobs has configuration parameters which you may 
have to edit manually for your specific system.

  SVN
  ---
  SVN is also managed via plugin - the scmsvn plugin is included and 
activated by default in gforge. As with scmcvs/ you have to move the 
scmcvs/etc/plugins/* files to /etc/gforge/plugins/* and may have to
make minor modifications for your specific setup.

  There are two ways to manage SVN - one is to have SVN over DAV and the 
other is to have SVN over SSH just as you do with CVS. If you choose 
to use DAV, you will need the mod_auth_gforge library compiled and installed 
in your apache and the appropriate VHOST settings in your httpd.conf. 
mod_auth_gforge is available from gforge.org. The cronjobs to manage
SVN are in cronjobs/dav-svn/ and so are sample httpd.conf VHOST settings.
Each of these cronjobs has configuration parameters which you may have to 
edit manually for your specific system.

  PHP
  ---
  The cronjobs require the PHP CGI to be installed and the php.ini 
file to be properly configured with your include_path OR edit the 
crontab.in file to set your include path.

  In addition, you may have to symlink /usr/bin/php to /usr/bin/php4, 
which is where the cronjobs expect your PHP CGI to be located.

  Mailman
  -------

  Mailman is needed to create and use mailing lists with gforge. 
Mailman is frequently installed in /var/mailman/ and the sample 
vhost shown below will work with this setup without any changes.

  Cronjobs for mailman are located in cronjobs/mail/*

  cronjobs/mail/mailing_lists_create.php is used obviously to 
create new mailing lists. You may have to edit the file to change 
the location of the mailman bin/ directory.

  For all problems with mailman installation and use, contact 
the mailman mailing lists for help.



STARTING THE INSTALL
--------------------



BLANK DATABASE - FRESH INSTALL
------------------------------

First, make sure you create a 'gforge' user at the unix command prompt:

# adduser gforge

Then create a postgres account for gforge:

[root]# su - postgres

[postgres]# createuser -A -d -E -P gforge

and enter the password for the user.

You may also need to add Pl/Pgsql as a language.  To do so:

[postgres]$ createlang plpgsql template1

[postgres]$ exit

[root]# su - gforge
[gforge]# createdb gforge
[gforge]# psql gforge < db/gforge.sql > import.log

Be sure to watch for any errors during import and check the 
import.log file. For postgresql 7.3 users, you will have to 
use the db/gforge-pgsql7.3.sql file, since the postgres team 
has broken compatibility between releases yet again.

Now, find your pg_hba.conf file and edit it to include this line:

local    all         all                                             md5

You will have to restart postgresql after changing this line so it can 
pick up your configuration change. Usually you can restart by 

[root]# /etc/init.d/postgresql restart


UPGRADING DATABASE - EXISTING INSTALL
-------------------------------------

You will upgrade your database from a prior version by applying 
each database schema change, in order, and applying it only once.
Only apply the schema changes in the db/ folder that are dated 
AFTER your currently installed version!!

This process will apply your upgrades. BE SURE TO WATCH FOR ERRORS!

[gforge]# psql gforge < db/XXXXXXXXXX.sql >> import.log

There may also be migration scripts that have to be run. In the 
db/ folder, look for migrate-*.php scripts and run them.


WEB SETUP
---------

Move the GForge tarball into position and make the www/ directory the
"Document Root".

The following are sample Apache 2.0 httpd.conf entries:

NameVirtualHost 192.168.1.1

#
#	Primary GForge vhost
#
<VirtualHost 192.168.1.1>
ServerName gforge.company.com
ServerAdmin webmaster@gforge.company.com
DocumentRoot /var/www/gforge/www
ErrorDocument 404 /404.php
php_value include_path ".:/var/www/gforge/:/var/www/gforge/www/include/:/etc/gforge/"
<Files projects>
SetOutputFilter PHP
SetInputFilter PHP
AcceptPathInfo on
</Files>
<Files users>
SetOutputFilter PHP
SetInputFilter PHP
AcceptPathInfo on
</Files>
<Files *.php>
    SetOutputFilter PHP
    SetInputFilter PHP
    AcceptPathInfo On
    LimitRequestBody 2097152
</Files>
#
#	LOCATION may have to be used instead of FILES for some installs
#
#<Location /projects>
#  ForceType application/x-httpd-php
#</Location>
#<Location /users>
#  ForceType application/x-httpd-php
#</Location>
DirectoryIndex index.php
</VirtualHost>

#
#	Lists vhosts - where mailman lives
#
<VirtualHost 192.168.1.1>
ServerName lists.gforge.company.com
ServerAdmin mailman@lists.gforge.company.com
DocumentRoot /var/www/mailman
ScriptAlias   /mailman/ /var/mailman/cgi-bin/
Alias /pipermail/ /var/mailman/archives/public/
DirectoryIndex index.php index.cgi index.html index.htm
</VirtualHost>

#
#	CVS Vhost - allows viewing of CVSWeb for each project
#
<VirtualHost 192.168.1.1>
ServerName cvs.gforge.company.com
ServerAdmin webmaster@cvs.gforge.company.com
DocumentRoot /var/www/cvs
DirectoryIndex index.php index.cgi index.html index.htm
</VirtualHost>

#
#	*.gforge.company.com vhosts
#	Each project can have its own vhost
#
#	WARNING - security is degraded by having this
#	on the same machine as the primary GForge
#
<VirtualHost 192.168.1.1>
  ServerName projects.gforge.company.com
  ServerAlias *.gforge.company.com
  DocumentRoot /var/www/homedirs/groups
  VirtualDocumentRoot /var/www/homedirs/groups/%1
  <Directory /var/www/homedirs/groups>
    Options Indexes
#
#	WARNING - turning on php will allow any user
#	to upload a php file to your server, and include 
#	the gforge local.inc file and get your password to 
#	connect to the database and have total control.
#
    php_flag engine off
    AllowOverride None
    order allow,deny
    allow from all
  </Directory>
  DirectoryIndex index.html index.htm
</VirtualHost>


PHP setup
---------

You may also add the include_path to the php.ini, as it will be
necessary for your php cgi to run the cron jobs. The crontab.in 
file also can be modified to include this path as well.

register_globals = On
magic_quotes_gpc = On
file_uploads = On
include_path = ".:/var/www/gforge/:/var/www/gforge/www/include/:/etc/gforge/"


FRS - File Release System
-------------------------

FRS has been radically simplified. Simply create a directory and make
it owned by the webserver-user. Usually "chown -R nobody:nobody mydir"
will do the trick.

This directory will be referenced in the GForge Config File as $sys_upload_dir


GForge Config File
--------------

In the GForge distribution, you will find etc/local.inc. Move it to
/etc/gforge/local.inc and edit all of the settings.

Usually, you will want to make it readable only by apache:

[root]# chown -R apache:apache /etc/gforge/
[root]# chmod 600 /etc/gforge/local.inc


Site Admin
----------

Site admins are anyone who is an admin of group_id=1

To give the first user "Site Admin" privileges, register a new user,
and confirm it via the email link. Then enter the postgres command
line and issue these commands:

[gforge]# psql gforge

psql> insert into user_group (user_id,group_id,admin_flags) values (*****YOUR NEW NUMERIC USER ID*****,1,'A');


Mail Aliases
------------

/etc/aliases - add this line and run "newaliases"
noreply:        /dev/null


PEER RATINGS
------------

Add yourself, and any others you wish, to the "Peer Ratings" project,
which should be at /projects/peerrating/ on the website. Make yourself
an "admin" of the project, and then proceed to "rate" other users on
the website.

Members of the "Peer Ratings" project, who are "admins" of the project
become the first trusted users. This is the only way to prime the pump
for the peer ratings system.


CRON JOBS
---------

Cron jobs are in the cronjobs/ directory and the README file contains
a sample crontab. This gives you the basic cronjobs for updating
certain statistics and data on the site.

/cronjobs/cvs-cron/ contains scripts useful for creating blank cvs 
trees and managing the /etc/groups /etc/passwd and /etc/shadow files.
See /cronjobs/README.root for more info.

/cronjobs/mail/ contains files useful for the creation of new mailing 
lists in mailman and creating the /etc/aliases file.


[root]# adduser anonymous
[root]# cp /etc/aliases /etc/aliases.org
[root]# cp /etc/shadow /etc/shadow.org
[root]# cp /etc/passwd /etc/passwd.org
[root]# cp /etc/group /etc/group.org
[root]# mkdir /cvsroot

**************************************************************************
WARNING!!! the following command will blow away any existing root crontab.
**************************************************************************

[root]# crontab cronjobs/crontab.in

Now edit the paths to the cron scripts:

[root]# crontab -e

IMPORTANT!!!! - the cvs-cron/usergroup.php cron script will meddle 
with your /etc/passwd, /etc/group, and /etc/shadow files. By default,
this cron will save these files with a .new extension. You will have 
to edit the cron script to remove the .new extension, but you must 
make sure that it is properly generating your files or your server 
could be unusable.


JPGRAPH
-------

When you get your preferred version of jpgraph installed, you will 
have to edit one setting in jpgraph.php: DEFINE("USE_CACHE",false);


PERL
----

If you want to use some of the Perl scripts that access the database,
you'll need the DBI and DBD::Pg Perl modules.  On Red Hat systems (and
variants), you can get them by installing the libdbi and libdbd-pgsql
packages.  On Debian systems (and variants), the packages are called
libdbi-perl and libdbd-pg-perl.

  You'll also need to install utils/include.pl to
/usr/lib/gforge/lib/, and put some configuration variables into
/etc/gforge/local.pl.  In particular, you'll need something like:
,----[ local.pl ]
| $sys_default_domain = 'gforge.example.com' ;
| $sys_dbhost = '192.168.12.34' ;
| $sys_dbname = 'gforge' ;
| $sys_dbuser = 'gforge' ;
| $sys_dbpasswd = 'p455w0rd' ;
`----
