#! /bin/bash
# postrm script for @OLDPACKAGE@
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    purge)
	for ext in '~' '%' .bak .ucf-new .ucf-old .ucf-dist;  do
	    for i in /etc/aliases$ext /etc/exim4/conf.d/main/01_exim4-config_listmacrosdefs$ext /etc/exim4/exim4.conf.template$ext /etc/exim4/conf.d/router/01_gforge_forwards$ext ; do
		rm -f $i
		d=$(dirname $i) ; rmdir $d || true # e.g. /etc/exim4/conf.d/main
		d=$(dirname $d) ; rmdir $d || true # e.g. /etc/exim4/conf.d
		d=$(dirname $d) ; rmdir $d || true # e.g. /etc/exim4
	    done
	done
	;;
    
    remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
	;;
    
    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 0
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.
#DEBHELPER#
exit 0
