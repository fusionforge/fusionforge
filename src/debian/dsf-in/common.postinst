#! /bin/sh
# postinst script for @OLDPACKAGE@
#
# see: dh_installdeb(1)

set -e
# set -x				# Be verbose, be very verbose.

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/share/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

. /usr/share/debconf/confmodule

case "$1" in
    configure)
	for file in \
	    /usr/share/xml/xhtml/schema/dtd/1.0/xhtml1-strict.dtd \
	    /usr/share/xml/xhtml/schema/dtd/1.0/xhtml1-transitional.dtd \
	    /usr/share/xml/entities/xhtml/xhtml-lat1.ent \
	    /usr/share/xml/entities/xhtml/xhtml-special.ent \
	    /usr/share/xml/entities/xhtml/xhtml-symbol.ent \
	    ; do
		fname=${file##*/}
		test -s /usr/share/gforge/common/include/$fname || \
		    ln -sf $file /usr/share/gforge/common/include/
	done

	adduser --system --group --home /var/www/@OLDPACKAGE@ @OLDPACKAGE@ > /dev/null 2>&1
	adduser --system --group --home /var/lib/@OLDPACKAGE@/chroot/cvsroot anonscm-@OLDPACKAGE@ > /dev/null 2>&1
	adduser --system --group --home /var/lib/@OLDPACKAGE@/chroot/cvsroot scm-@OLDPACKAGE@ > /dev/null 2>&1
	adduser --system --group --home /var/lib/@OLDPACKAGE@/chroot/cvsroot www-@OLDPACKAGE@ > /dev/null 2>&1

	if [ "$2" = "" ] ; then
	    # Installation from scratch, let's generate initial config files
	    if [ ! -e /etc/gforge/config.ini.d/debian-install.ini ] ; then
		cat > /etc/gforge/config.ini.d/debian-install.ini <<EOF
; This file was generated by the Debian installation system.
; You can edit the values here or move them to other files.

[core]
forge_name=FusionForge
web_host=$(hostname -f)
EOF
	    fi
	    if [ ! -e /etc/gforge/config.ini.d/debian-install-secrets.ini ] ; then
		t=$(mktemp /etc/gforge/config.ini.d/debian-install-secrets.ini.XXXXXX)
		db_get @PACKAGE@/shared/db_password || true
		pw=$RET
		if [ "$pw" = "" ] ; then
		    if [ -c /dev/urandom ]; then  # ...using /dev/urandom when possible
			pw=$(dd if=/dev/urandom count=1 bs=16 2> /dev/null | md5sum | cut -c-32)
		    else		# ...or something else if need be.
			pw=$(date +"%s:%N" | md5sum | cut -c-32)
		    fi
		fi

		if [ -c /dev/urandom ]; then  # ...using /dev/urandom when possible
		    sk=$(dd if=/dev/urandom count=1 bs=16 2> /dev/null | md5sum | cut -c-32)
		else		# ...or something else if need be.
		    sk=$(date +"%s:%N" | md5sum | cut -c-32)
		fi

		cat > $t <<EOF
; This file was generated by the Debian installation system.
; You can edit the values here or move them to other files.
; These values should not go into world-readable files!

[core]
; 127.0.0.1 instead of "" in order to avoid the need to modifying pg_hba.conf
database_host=127.0.0.1
database_name=gforge
database_user=gforge
database_port=5432
database_password=$pw

session_key=$sk
EOF
		mv $t /etc/gforge/config.ini.d/debian-install-secrets.ini
	    fi
	elif dpkg --compare-versions $2 lt 5.0.51-1 ; then
	    echo "Migrating existing configuration to *.ini files"
	    PATH=$PATH:/usr/share/gforge/bin migrate-to-ini-files.sh
	fi 

	@PACKAGE@-config
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
