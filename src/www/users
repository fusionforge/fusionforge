<?php
/**
 * User information page
 *
 * Copyright 1999-2001 (c) VA Linux Systems
 * Copyright 2002-2004 (c) GForge Team
 * Copyright 2010-2011, Franck Villaume - Capgemini
 * Copyright 2018, Franck Villaume - TrivialDev
 * http://fusionforge.org/
 *
 * This file is part of FusionForge. FusionForge is free software;
 * you can redistribute it and/or modify it under the terms of the
 * GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the Licence, or (at your option)
 * any later version.
 *
 * FusionForge is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with FusionForge; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

require_once 'env.inc.php';
require_once $gfcommon.'include/pre.php';
require_once $gfcommon.'include/User.class.php';

$expl_pathinfo = explode('/', getStringFromServer('REQUEST_URI'));

if (!$expl_pathinfo[2]) {
	exit_error(_('No User Name Provided'));
}

$default_content_type = 'text/html';
$script='user_home';
$content_type = util_negociate_alternate_content_types($script, $default_content_type);

$username = urldecode($expl_pathinfo[2]);
//get the user object based on the user_name in the URL
$user = user_get_object_by_name($username);

// If restricted mode, display only people who are sharing a project with the current user.
if (forge_get_config('restrict_users_visibility')) {
	if (!session_loggedin()) {
		exit_permission_denied();
	}

	if (!$user || !is_object($user) || $user->isError() || !$user->isActive()) {
		exit_permission_denied();
	}

	$u2gl = $user->getGroupIds();
	$seen = false;
	foreach ($u2gl as $u2g) {
		if (forge_check_perm('project_read', $u2g)) {
			$seen = true;
			break;
		}
	}
	if ($seen == false) {
		exit_permission_denied();
	}
}

if (!$user || !is_object($user) || $user->isError() || !$user->isActive()) {
	exit_error(_('That user does not exist.'));
} else {
	// if a custom content-type is selected, then redirect to plugin's rendering
	if($content_type != $default_content_type) {
		$hook_params = array();
		$hook_params['username'] = $username;
		$hook_params['accept'] = $content_type;
		$hook_params['return'] = '';
		plugin_hook_by_reference('content_negociated_user_home', $hook_params);
		if($hook_params['content_type'] != ''){
				header('Content-type: '. $hook_params['content_type']);
				echo $hook_params['content'];
		}
		else {
				header('HTTP/1.1 406 Not Acceptable',true,406);
				exit(0);
		}
	} else { // default HTML view
		//now show the user page
		$title = _('User Profile');
		$HTML->header(array('title'=>$title));

		if (!forge_get_config('user_home_widget')) {
			include $gfwww.'include/user_home.php';
		} else {
			if (session_loggedin() && ($user->getID() == user_getid())) {
				$sql = "SELECT l.*
						FROM layouts AS l INNER JOIN owner_layouts AS o ON(l.id = o.layout_id)
						WHERE o.owner_type = $1
						AND o.owner_id = $2
						AND o.is_default = 1
						";
				$res = db_query_params($sql,array(WidgetLayoutManager::OWNER_TYPE_USERHOME, $user->getID()));
				$layout_id = db_result($res, 0 , 'id');
				if (!$layout_id) {
					$layout_id = 1;
				}
				$ap = html_ap();
				echo html_ao('ul', array('class' => 'widget_toolbar'));
				$url = '/widgets/widgets.php?owner='.WidgetLayoutManager::OWNER_TYPE_USERHOME.$user->getID().'&layout_id='.$layout_id;
				$labels = array(_('Add widgets'), _('Customize Layout'));
				$urls = array($url, $url.'&update=layout');
				for ($i = 0; $i < count($urls); $i++) {
					echo html_e('li', array(), util_make_link($urls[$i], $labels[$i]));
				}
				echo html_ac($ap);
			}
			$lm = new WidgetLayoutManager();
			$lm->displayLayout($user->getID(), WidgetLayoutManager::OWNER_TYPE_USERHOME);
		}
		$HTML->footer();
	}
}

// Local Variables:
// mode: php
// c-file-style: "bsd"
// End:

?>
