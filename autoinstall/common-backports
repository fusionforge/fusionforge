#!/bin/bash
# Tricks to install unavailable packages - used by install.sh and install-src.sh
#
# Copyright (C) 2011  Roland Mas
# Copyright (C) 2011  Olivier Berger - Institut Telecom
# Copyright (C) 2014  Inria (Sylvain Beucler)
# Copyright 2017-2018, Franck Villaume - TrivialDev
#
# This file is part of FusionForge. FusionForge is free software;
# you can redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software
# Foundation; either version 2 of the Licence, or (at your option)
# any later version.
#
# FusionForge is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with FusionForge; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


function backports_deb {
	if grep -q ^8 /etc/debian_version; then
		# Install Mediawiki from jessie-backport
		if [ ! -f /etc/apt/sources.list.d/backports.list ]; then
			echo 'deb http://http.debian.net/debian jessie-backports main' \
				> /etc/apt/sources.list.d/backports.list
		fi
	fi
}

function backport_rpm_from_fedora {
    rebuild_one_rpm --enablefedora $*
}

function rebuild_rpm_from_centos {
    rebuild_one_rpm --rebuild $*
}

function rebuild_one_rpm {
    enablefedsrc=
    enablefed=
    if [ "$1" = "--enablefedora" ] ; then
	if [ "$2" = "mediawiki" ] ; then
		enablefedsrc="--enablerepo=fedora-source"
	else
		enablefedsrc="--enablerepo=fedora-source --enablerepo=fedora-updates-source"
	fi
    	shift
    fi

    rebuild=no
    if [ "$1" = "--rebuild" ] ; then
    	rebuild=yes
    	shift
    fi

    src=
    if [ "$1" = "--source-package" ] ; then
    	src=$2
    	shift
    	shift
    fi

    target=$1
    shift
    others="$*"

    src=${src:-$target}

    rebuild_needed=no
    if [ $rebuild = yes ] ; then
	rebuild_needed=yes
    else
	for i in $target $others ; do
	    if ! yum list $i >/dev/null 2>&1; then
		rebuild_needed=yes
		break
	    fi
	done
    fi

    if [ $rebuild_needed = yes ] ; then
	yumdownloader $enablefedsrc --source $src

	if [ -n "$DEPS" ]; then
	    yum install -y $DEPS
	fi

	for i in $src-*.src.rpm ; do
	    if [ $rebuild = yes ] || [ ! -e "$i.done" ] ; then
		if [ $src = "mediawiki" ] ; then
			rpm -i $src-*.src.rpm
			cd ~/rpmbuild
			sed -e 's/, php-pecl-jsonc//g' -i SPECS/mediawiki.spec
			rpmbuild --define='_unpackaged_files_terminate_build 0' -ba SPECS/mediawiki.spec
			cd -
		else 
			rpmbuild --rebuild $src-*.src.rpm
		fi
	    fi
	    mv -f "$i" "$i.done"
	done
	if [ -n "$REMOVEDEPS" ] ; then
	    : yum remove -y $REMOVEDEPS
	fi

	for i in $target $others ; do
	    yum remove -y $i
	done
	for i in $target $others ; do
	    yum install -y ~/rpmbuild/RPMS/*/$i-[0-9]*.*.rpm || rpm -i ~/rpmbuild/RPMS/*/$i-[0-9]*.*.rpm
	done
    else
	yum install -y $target $others
    fi
}

# TODO: compile in a different job and use mockbuild?
function backports_rpm {
    set -ex

    # Fedora/RHEL/CentOS version:
    os_version=$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))

    if ! rpm -q fedora-release >/dev/null; then
	# Enable EPEL
	yum install -y epel-release

	# Prepare manual backports
	cat <<'EOF' > /etc/yum.repos.d/fedora-source.repo
[fedora]
name=Fedora 22
failovermethod=priority
metalink=https://mirrors.fedoraproject.org/metalink?repo=fedora-22&arch=$basearch
enabled=0
gpgcheck=0
[fedora-updates]
name=Fedora 22 Updates
failovermethod=priority
metalink=https://mirrors.fedoraproject.org/metalink?repo=updates-released-f22&arch=$basearch
enabled=0
gpgcheck=0
[fedora-source]
name=Fedora 22 - Source
failovermethod=priority
metalink=https://mirrors.fedoraproject.org/metalink?repo=fedora-source-22&arch=$basearch
enabled=0
gpgcheck=0
[fedora-updates-source]
name=Fedora 22 Updates - Source
failovermethod=priority
metalink=https://mirrors.fedoraproject.org/metalink?repo=updates-released-source-f22&arch=$basearch
enabled=0
gpgcheck=0
EOF

	# Speed-up by recreating 'fastestmirror' now partial cache
	# (/var/cache/yum/x86_64/7/timedhost.txt)
        yum clean plugins

	yum install -y yum-utils  # yumdownloader
	if [ ! -e /usr/bin/rpmbuild ] ; then
	    yum install -y rpm-build
	fi
    fi

    case $os_version in
	7)
	    yum --enablerepo=epel -y install php-tidy
	    # php-htmlpurifier-htmlpurifier Requires, available in EPEL6 but not EPEL7
	    DEPS="php-pear"
	    REMOVEDEPS=$DEPS
	    backport_rpm_from_fedora php-channel-htmlpurifier
	    ;;
    esac

    # libnss-pgsql: no available package for RHEL; though it's available in Fedora
    # (there's also http://yum.postgresql.org/8.4/redhat/rhel-5-x86_64/)
    DEPS="xmlto gcc postgresql-devel"
    REMOVEDEPS=$DEPS
    backport_rpm_from_fedora libnss-pgsql

    DEPS="dos2unix"
    REMOVEDEPS=$DEPS
    backport_rpm_from_fedora php-nusoap

    DEPS=""
    REMOVEDEPS=$DEPS
    backport_rpm_from_fedora php-htmlpurifier-htmlpurifier

    DEPS=""
    REMOVEDEPS=$DEPS
    backport_rpm_from_fedora python-simpletal

    DEPS="python2-devel python-paste python-paste-deploy python-simplejson python-testtools"
    REMOVEDEPS=$DEPS
    backport_rpm_from_fedora loggerhead

    DEPS=""
    REMOVEDEPS=$DEPS
    backport_rpm_from_fedora mediawiki

    mkdir -p /usr/src/fusionforge/build/RPMS/
    cp -r ~/rpmbuild/RPMS/* /usr/src/fusionforge/build/RPMS/

    # TODO: postfix: rebuild from RHEL/CentOS sources with pgsql enabled,
    # so we can test mta-postfix
}

function suse_check_release {
	supported=$(. /etc/os-release; echo $VERSION | grep "42\.[12]")
	if test -z "$supported"; then
		echo "unsupported openSUSE version"
		exit 1
	fi
}

function suse_install_repos {
	has_repo=$(zypper lr | grep 'Apache:Modules' | sed 's,  ,,g')
	if test -z "$has_repo"; then
		dist_path=$(. /etc/os-release; echo $PRETTY_NAME | sed 's, ,_,g')
		zypper ar http://download.opensuse.org/repositories/Apache:/Modules/$dist_path/ Apache:Modules
	fi
}

function suse_install_rpms {
	# Install build dependencies
	modules="$*"
	instmods=""
	for m in $modules; do
		if ! rpm -q $m >/dev/null; then
			instmods="$instmods $m"
		fi
	done
	if [ -n "$instmods" ] ; then
		zypper install -y $instmods
	fi
}
