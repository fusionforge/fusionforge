#! /usr/bin/make -f

FUSIONFORGE=FusionForge
ORIGIN=debian.fusionforge.org
BUILDPLACE=$(CURDIR)/builder/buildplace
BUILDFILES=$(CURDIR)/builder/buildfiles
BUILDRESULT=$(CURDIR)/result
COWBUILDERBASE=$(CURDIR)/builder/cow
PBUILDERTGZ=$(CURDIR)/builder/tgz
TARBALLS=$(CURDIR)/tarballs
APTCACHE=$(CURDIR)/builder/cache
XDISTRIB=2squeeze
DISTRIB=$(shell echo $(XDISTRIB) | cut -c2-)
LOCALREPODEB=/var/www/debian-fusionforge
LOCALREPOUBU=/var/www/ubuntu-fusionforge
DEBIANLIST=1lenny 2squeeze 3sid
DEBIANLISTP=1etch
UBUNTULIST=1gutsy 1hardy 1intrepid 1jaunty
UBUNTULISTP=1gutsy
# Try if a local mirror is available
UBUNTUOP=$(shell wget -q -S http://localhost/ubuntu -O /dev/null && echo "--mirror http://localhost/ubuntu" || echo "--mirror http://archive.ubuntu.com/ubuntu") --debootstrap debootstrap

gfversion=$(shell head -1 gforge/debian/changelog | sed 's/.*(\(.[^+-]*\).*).*/\1/')
gfminor=$(shell head -1 gforge/debian/changelog | sed 's/.*(.[^+-]*[+-]\(.*\)).*/\1/')
svnrev=$(shell LANG=C svn info | grep Revision | cut -d: -f2| sed 's/ //g')
MINOR=-svn$(svnrev)+

#default: cowbuilddeb

#make -f Makefile.debian cowbuilddist XDISTRIB=2squeeze LOCALREPO=$(LOCALREPODEB)

list:
	@echo ======================================================================================
	@echo '=                    Available target are listed below                               ='
	@echo ======================================================================================
	@cat Makefile.debian | grep '^.*:.*#$$' | sed 's/FUSIONFORGE/$(FUSIONFORGE)/' | sed 's/^\(.*:\).*#\(.*\)#$$/\1		\2/'
	@echo ======================================================================================

documentor_path=/tmp
documentor_vers=phpdocumentor-1.3.0rc3

#
# FUSIONFORGE
#

orig: $(TARBALLS)/gforge_$(gfversion).orig.tar.gz    # Make FUSIONFORGE orig file                                      #

#
# PHPDOCUMENTOR
#
phpdoc: phpdocumentor_get phpdocumentor_unpack $(documentor_path)/$(documentor_vers)/patched gforge/docs/phpdoc/docs # Get phpdocumentor, install phpdocumentor, build gforge phpdoc     #
	
phpdocumentor_get:
	[ ! -f $(documentor_path)/$(documentor_vers).tar.gz ] && cd $(documentor_path) && wget http://heanet.dl.sourceforge.net/sourceforge/phpdocu/$(documentor_vers).tar.gz || true
phpdocumentor_unpack:
	[ ! -d $(documentor_path)/$(documentor_vers) ] && cd $(documentor_path) && tar xvzf $(documentor_vers).tar.gz || true
$(documentor_path)/$(documentor_vers)/patched:
	cd $(documentor_path)/ && patch -p2 < $(CURDIR)/gforge/docs/phpdoc/manageclass.patch && touch $(documentor_path)/$(documentor_vers)/patched 
gforge/docs/phpdoc/docs:
	cd gforge/docs/phpdoc/ && ./makedoc.sh

#
# Build with cowbuilder or pbuilder
#
DEBUG=--debug
DEBUG=
DEBBUILDOPTS=--debbuildopts -sa 
DEBBUILDOPTS=

all: cowbuilddeb cowbuildubu # ***** Build all package for debian and ubuntu ***** #

cowbuildtest:
	@echo "Will build gforge_$(gfversion)$(MINOR)$(DISTRIB)"

cowbuilddeb:		# ***** This is the one to cowbuild debian packages ***** #
	@for dist in $(DEBIANLIST); do \
	make -f Makefile.debian cowbuilddist XDISTRIB=$$dist DISTROOP="$(DEBIANOP)" LOCALREPO=$(LOCALREPODEB) ; \
	done

cowbuildubu:            # ***** This is the one to cowbuild ubuntu packages ***** #
	@for dist in $(UBUNTULIST); do \
	make -f Makefile.debian cowbuilddist XDISTRIB=$$dist DISTROOP="$(UBUNTUOP)" LOCALREPO=$(LOCALREPOUBU) HOOK="--no-cowdancer-update --hookdir $(CURDIR)/hook/ubuntu"; \
	done

pbuilddeb:              # ***** This is the one to pbuild debian packages ***** #
	@for dist in $(DEBIANLISTP); do \
	make -f Makefile.debian pbuilddist XDISTRIB=$$dist DISTROOP="$(DEBIANOP)" LOCALREPO=$(LOCALREPODEB) ; \
	done

pbuildubu:              # ***** This is the one to pbuild ubuntu packages ***** #
	@for dist in $(UBUNTULISTP); do \
	make -f Makefile.debian pbuilddist XDISTRIB=$$dist DISTROOP="$(UBUNTUOP)" LOCALREPO=$(LOCALREPOUBU) ; \
	done

cowbuilddist: cowbuilderenv localrepo $(BUILDFILES) $(BUILDRESULT)/gforge_$(gfversion)$(MINOR)$(XDISTRIB)_i386.changes
	@echo "Building $(BUILDRESULT)/gforge_$(gfversion)$(MINOR)$(XDISTRIB)_i386.changes"

pbuilddist: pbuilderenv localrepo $(BUILDFILES) $(BUILDRESULT)/gforge_$(gfversion)$(MINOR)$(XDISTRIB)+p_i386.changes
	@echo "Building $(BUILDRESULT)/gforge_$(gfversion)$(MINOR)$(XDISTRIB)+p_i386.changes"

$(BUILDRESULT)/gforge_$(gfversion)$(MINOR)$(XDISTRIB)_i386.changes: $(BUILDFILES)/gforge_$(gfversion)$(MINOR)$(XDISTRIB).dsc
	cd $(BUILDFILES) ; sudo cowbuilder --build --basepath $(COWBUILDERBASE)/base-$(DISTRIB).cow --configfile $(COWBUILDERBASE)/config $(BUILDFILES)/gforge_$(gfversion)$(MINOR)$(XDISTRIB).dsc

$(BUILDRESULT)/gforge_$(gfversion)$(MINOR)$(XDISTRIB)+p_i386.changes: $(BUILDFILES)/gforge_$(gfversion)$(MINOR)$(XDISTRIB)+p.dsc
	cd $(BUILDFILES) ; sudo pbuilder --build --basetgz $(PBUILDERTGZ)/base-$(DISTRIB).tgz --configfile $(PBUILDERTGZ)/config $(BUILDFILES)/gforge_$(gfversion)$(MINOR)$(XDISTRIB)+p.dsc

	# Install in repository
	#TODO#cd $(BUILDRESULT); reprepro -Vb $(LOCALREPO) include $(DISTRIB) gforge_$(gfversion)$(MINOR)$(XDISTRIB)_i386.changes

$(BUILDFILES)/gforge_$(gfversion)$(MINOR)$(XDISTRIB).dsc: $(BUILDFILES)/gforge_$(gfversion).orig.tar.gz
	cd gforge ; debclean
	find gforge -type f -or -type l | grep -v '/CVS/' | grep -v '/.svn/' | grep -v rpm-specific | grep -v docs/phpdoc/docs | grep -v ^./debian/ | cpio -pdumB $(BUILDFILES)/
	# Set version for given distrib
	cd $(BUILDFILES)/gforge; dch -b -v $(gfversion)$(MINOR)$(XDISTRIB) -D UNRELEASED "This is $(DISTRIB) autobuild"
	perl -pi -e "s/UNRELEASED/$(DISTRIB)/" $(BUILDFILES)/gforge/debian/changelog
	cd $(BUILDFILES) ; dpkg-source -b gforge
	rm -rf $(BUILDFILES)/gforge

$(BUILDFILES)/gforge_$(gfversion)$(MINOR)$(XDISTRIB)+p.dsc: $(BUILDFILES)/gforge_$(gfversion).orig.tar.gz
	cd gforge ; debclean
	find gforge -type f -or -type l | grep -v '/CVS/' | grep -v '/.svn/' | grep -v rpm-specific | grep -v docs/phpdoc/docs | grep -v ^./debian/ | cpio -pdumB $(BUILDFILES)/
	# Set version for given distrib
	cd $(BUILDFILES)/gforge; dch -b -v $(gfversion)$(MINOR)$(XDISTRIB)+p -D UNRELEASED "This is $(DISTRIB) autobuild"
	perl -pi -e "s/UNRELEASED/$(DISTRIB)/" $(BUILDFILES)/gforge/debian/changelog
	cd $(BUILDFILES) ; dpkg-source -b gforge
	rm -rf $(BUILDFILES)/gforge

$(BUILDFILES)/gforge_$(gfversion).orig.tar.gz: $(TARBALLS)/gforge_$(gfversion).orig.tar.gz
	cp $(TARBALLS)/gforge_$(gfversion).orig.tar.gz $(BUILDFILES)

$(TARBALLS)/gforge_$(gfversion).orig.tar.gz: $(TARBALLS)
	debclean; find gforge -type f -or -type l | grep -v '/CVS/' | grep -v '/.svn/' | grep -v rpm-specific | grep -v docs/phpdoc/docs | grep -v ^./debian/ | cpio -o -H ustar | gzip > $(TARBALLS)/gforge_$(gfversion).orig.tar.gz
	

pbuilderenv: $(PBUILDERTGZ) $(PBUILDERTGZ)/base-$(DISTRIB).tgz
	@echo "Ready for $(DISTRIB)"

cowbuilderenv: $(COWBUILDERBASE) $(COWBUILDERBASE)/base-$(DISTRIB).stamp
	@echo "Ready for $(DISTRIB)"

$(PBUILDERTGZ)/base-$(DISTRIB).tgz: $(PBUILDERTGZ)/config
	sudo /usr/sbin/pbuilder --create --distribution $(DISTRIB) --basetgz $(PBUILDERTGZ)/base-$(DISTRIB).tgz --configfile $(PBUILDERTGZ)/config $(DISTROOP)

$(COWBUILDERBASE)/base-$(DISTRIB).stamp: $(COWBUILDERBASE)/config
	sudo /usr/sbin/cowbuilder --create $(HOOK) --distribution $(DISTRIB) --basepath $(COWBUILDERBASE)/base-$(DISTRIB).cow --configfile $(COWBUILDERBASE)/config $(DISTROOP)
	touch $(COWBUILDERBASE)/base-$(DISTRIB).stamp

$(PBUILDERTGZ)/config: /usr/sbin/pbuilder
	echo "APTCACHE=$(APTCACHE)" > $(PBUILDERTGZ)/config
	echo "BUILDPLACE=$(BUILDPLACE)" >> $(PBUILDERTGZ)/config
	echo "BUILDRESULT=$(BUILDRESULT)" >> $(PBUILDERTGZ)/config

$(COWBUILDERBASE)/config: /usr/sbin/cowbuilder
	echo "APTCACHE=$(APTCACHE)" > $(COWBUILDERBASE)/config
	echo "BUILDPLACE=$(BUILDPLACE)" >> $(COWBUILDERBASE)/config
	echo "BUILDRESULT=$(BUILDRESULT)" >> $(COWBUILDERBASE)/config

/usr/sbin/pbuilder:
	sudo apt-get install pbuilder

ubukey:
	gpg --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5
	gpg --export --armor 40976EAF437D05B5 | sudo apt-key add -

/usr/sbin/cowbuilder:
	sudo apt-get install cowdancer

localrepo: $(LOCALREPO) $(LOCALREPO)/conf $(LOCALREPO)/conf/distributions
	
$(LOCALREPO)/conf/distributions:
	for dist in $(DISTRIBLIST); do \
	echo "Codename: $$dist" ; \
	echo "Suite: $$dist" ; \
	echo "Components: main" ; \
	echo "UDebComponents: main" ; \
	echo "Architectures: i386 source" ; \
	echo "Origin: $(ORIGIN)" ; \
	echo "Version: 4.7" ; \
	echo "Description: My $(FUSIONFORGE) $$dist repository" ; \
	echo "SignWith: yes" ; \
	echo "" ; done >> $(LOCALREPO)/conf/distributions

$(LOCALREPO)/conf:
	mkdir $(LOCALREPO)/conf

$(TARBALLS):
	mkdir -p $(TARBALLS)

$(BUILDFILES):
	mkdir -p $(BUILDFILES)

$(COWBUILDERBASE):
	mkdir -p $(COWBUILDERBASE)

$(PBUILDERTGZ):
	mkdir -p $(PBUILDERTGZ)

$(LOCALREPO):
	sudo mkdir $(LOCALREPO)
	sudo chown `id -u`.`id -g` $(LOCALREPO)
